diff --git a/packages/Cartopy/meta.yaml b/packages/Cartopy/meta.yaml
new file mode 100644
index 00000000..866a41ba
--- /dev/null
+++ b/packages/Cartopy/meta.yaml
@@ -0,0 +1,39 @@
+package:
+  name: Cartopy
+  version: 0.21.1
+  top-level:
+    - cartopy
+source:
+  url: https://files.pythonhosted.org/packages/e8/11/ed3e364b3910f0951821e6b5a03a03ce425464b72aa3da08d47b78ae17bd/Cartopy-0.21.1.tar.gz
+  sha256: 89d5649712c8582231c6e11825a04c85f6f0cee94dbb89e4db23eabca1cc250a
+  patches:
+    - patches/0001-setup-geos-config.patch
+test:
+  imports:
+    - cartopy
+    - cartopy.trace
+    - cartopy.mpl.geoaxes
+    - cartopy.crs
+requirements:
+  host:
+    - geos
+    - numpy
+  run:
+    - shapely
+    - pyshp
+    - pyproj
+    - geos
+    - matplotlib
+    - scipy
+
+build:
+  vendor-sharedlib: true
+  script: |
+    export GEOS_CONFIG=${WASM_LIBRARY_DIR}/bin/geos-config
+    echo ${GEOS_CONFIG}
+
+about:
+  home: http://scitools.org.uk/cartopy
+  PyPI: https://pypi.org/project/Cartopy/
+  summary: A library providing cartographic tools for python
+  license: LGPL-3.0-or-later
diff --git a/packages/Cartopy/patches/0001-setup-geos-config.patch b/packages/Cartopy/patches/0001-setup-geos-config.patch
new file mode 100644
index 00000000..f5eb270c
--- /dev/null
+++ b/packages/Cartopy/patches/0001-setup-geos-config.patch
@@ -0,0 +1,20 @@
+diff --git a/setup.py b/setup.py
+index 8e061479..c1b592ff 100644
+--- a/setup.py
++++ b/setup.py
+@@ -81,11 +81,12 @@ def file_walk_relative(top, remove=''):
+ 
+ # GEOS
+ try:
+-    geos_version = subprocess.check_output(['geos-config', '--version'])
++    geos_config = os.environ.get("GEOS_CONFIG", "/src/packages/.libs/bin/geos-config")
++    geos_version = subprocess.check_output([geos_config, '--version'])
+     geos_version = tuple(int(v) for v in geos_version.split(b'.')
+                          if 'dev' not in str(v))
+-    geos_includes = subprocess.check_output(['geos-config', '--includes'])
+-    geos_clibs = subprocess.check_output(['geos-config', '--clibs'])
++    geos_includes = subprocess.check_output([geos_config, '--includes'])
++    geos_clibs = subprocess.check_output([geos_config, '--clibs'])
+ except (OSError, ValueError, subprocess.CalledProcessError):
+     warnings.warn(
+         'Unable to determine GEOS version. Ensure you have %s or later '
diff --git a/packages/Cartopy/test_cartopy.py b/packages/Cartopy/test_cartopy.py
new file mode 100644
index 00000000..6dfc8934
--- /dev/null
+++ b/packages/Cartopy/test_cartopy.py
@@ -0,0 +1,25 @@
+import pathlib
+
+import pytest
+from pytest_pyodide import run_in_pyodide
+
+
+@pytest.mark.driver_timeout(60)
+@run_in_pyodide(packages=["cartopy"])
+def test_imports(selenium):
+    import cartopy
+    import cartopy.trace
+
+    assert False
+
+
+@pytest.mark.driver_timeout(60)
+@run_in_pyodide(packages=["cartopy", "matplotlib"])
+def test_matplotlib(selenium):
+    import cartopy.crs as ccrs
+    import matplotlib.pyplot as plt
+
+    ax = plt.axes(projection=ccrs.PlateCarree())
+    ax.coastlines()
+
+    plt.show()
diff --git a/packages/cfgrib/meta.yaml b/packages/cfgrib/meta.yaml
new file mode 100644
index 00000000..735c4ef0
--- /dev/null
+++ b/packages/cfgrib/meta.yaml
@@ -0,0 +1,22 @@
+package:
+  name: cfgrib
+  version: 0.9.10.4
+  top-level:
+    - cfgrib
+source:
+  url: https://files.pythonhosted.org/packages/0d/61/2b152f062ffa494ce57ee5befe025955f4bb245f4ceeb78f1a682be65438/cfgrib-0.9.10.4-py3-none-any.whl
+  sha256: 563416811cd53a861acf47998ef21769accba641b1715d2af4d7e165c4868beb
+requirements:
+  run:
+    - attrs
+    - click
+    - eccodes
+    - numpy
+    - xarray
+about:
+  home: https://github.com/ecmwf/cfgrib
+  PyPI: https://pypi.org/project/cfgrib
+  summary:
+    Python interface to map GRIB files to the NetCDF Common Data Model following
+    the CF Convention using ecCodes.
+  license: Apache License Version 2.0
diff --git a/packages/dask/meta.yaml b/packages/dask/meta.yaml
new file mode 100644
index 00000000..72e2ee63
--- /dev/null
+++ b/packages/dask/meta.yaml
@@ -0,0 +1,25 @@
+package:
+  name: dask
+  version: 2023.5.0
+  top-level:
+    - dask
+source:
+  url: https://files.pythonhosted.org/packages/07/93/32d3e317fec6d0fc130284f922ad9bd13d9ae0d52245e6ff6e57647e924c/dask-2023.5.0-py3-none-any.whl
+  sha256: 32b34986519b7ddc0947c8ca63c2fc81b964e4c208dfb5cbf9f4f8aec92d152b
+test:
+  imports:
+    - dask
+requirements:
+  run:
+    - click
+    - cloudpickle
+    - importlib_metadata
+    - Jinja2
+    - packaging
+    - pyyaml
+    - toolz
+about:
+  home: https://github.com/dask/dask/
+  PyPI: https://pypi.org/project/dask
+  summary: Parallel PyData with Task Scheduling
+  license: BSD
diff --git a/packages/eccodes/meta.yaml b/packages/eccodes/meta.yaml
new file mode 100644
index 00000000..791a9f52
--- /dev/null
+++ b/packages/eccodes/meta.yaml
@@ -0,0 +1,29 @@
+package:
+  name: eccodes
+  version: 1.5.2
+  top-level:
+    - eccodes
+    - gribapi
+source:
+  url: https://files.pythonhosted.org/packages/af/b9/57d55d70ca6fbf9ce8dc096904d6bd4984d6eaacfff20c771245d99e1f1b/eccodes-1.5.2.tar.gz
+  sha256: f7cce47fc9b1df3ed9eea21c4060fa572e07a4d0f014f6fd1f74683df9b45801
+  patches:
+    - patches/0001-shared-library-include.patch
+requirements:
+  run:
+    - attrs
+    - cffi
+    - findlibs
+    - numpy
+  host:
+    - libeccodes
+build:
+  vendor-sharedlib: true
+  script: |
+    cp ${WASM_LIBRARY_DIR}/lib/libeccodes.so gribapi/
+    cp -r ${WASM_LIBRARY_DIR}/share/eccodes/definitions gribapi/
+about:
+  home: https://github.com/ecmwf/eccodes-python
+  PyPI: https://pypi.org/project/eccodes
+  summary: Python interface to the ecCodes GRIB and BUFR decoder/encoder
+  license: Apache License Version 2.0
diff --git a/packages/eccodes/patches/0001-shared-library-include.patch b/packages/eccodes/patches/0001-shared-library-include.patch
new file mode 100644
index 00000000..671f423a
--- /dev/null
+++ b/packages/eccodes/patches/0001-shared-library-include.patch
@@ -0,0 +1,45 @@
+diff --git a/gribapi/bindings.py b/gribapi/bindings.py
+index 91f6d6a..2504873 100644
+--- a/gribapi/bindings.py
++++ b/gribapi/bindings.py
+@@ -15,8 +15,10 @@
+ #
+ 
+ from __future__ import absolute_import, division, print_function, unicode_literals
++from pathlib import Path
+ 
+ import logging
++import os
+ import pkgutil
+ 
+ import cffi
+@@ -25,14 +27,10 @@ __version__ = "1.6.0"
+ 
+ LOG = logging.getLogger(__name__)
+ 
+-try:
+-    import ecmwflibs as findlibs
+-except ImportError:
+-    import findlibs
++definitions_path = str(Path(__file__).parent / "definitions")
++os.environ["ECCODES_DEFINITION_PATH"] = definitions_path
+ 
+-library_path = findlibs.find("eccodes")
+-if library_path is None:
+-    raise RuntimeError("Cannot find the ecCodes library")
++library_path = str(Path(__file__).parent / "libeccodes.so")
+ 
+ # default encoding for ecCodes strings
+ ENC = "ascii"
+diff --git a/setup.py b/setup.py
+index 5df68df..d58dd3a 100644
+--- a/setup.py
++++ b/setup.py
+@@ -55,6 +55,7 @@ setuptools.setup(
+     url="https://github.com/ecmwf/eccodes-python",
+     packages=setuptools.find_packages(),
+     include_package_data=True,
++    package_data={'gribapi': ['libeccodes.so', "definitions/*", "definitions/**/*"]},
+     install_requires=install_requires,
+     tests_require=[
+         "pytest",
diff --git a/packages/fast-histogram/meta.yaml b/packages/fast-histogram/meta.yaml
new file mode 100644
index 00000000..9bb0d7fd
--- /dev/null
+++ b/packages/fast-histogram/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: fast-histogram
+  version: "0.11"
+  top-level:
+    - fast_histogram
+source:
+  url: https://files.pythonhosted.org/packages/c2/35/36883176c938d8610271093e3b950048a928c200cd4a51b77b70cabd91c9/fast-histogram-0.11.tar.gz
+  sha256: 9acb6fa5b6efd928663008965da186962bdeae20e6d5bbb3b1195dfbd1d906f0
+about:
+  home: https://github.com/astrofrog/fast-histogram
+  PyPI: https://pypi.org/project/fast-histogram
+  summary: Fast simple 1D and 2D histograms
+  license: BSD
diff --git a/packages/fcpy/meta.yaml b/packages/fcpy/meta.yaml
new file mode 100644
index 00000000..9b6bdd7a
--- /dev/null
+++ b/packages/fcpy/meta.yaml
@@ -0,0 +1,34 @@
+package:
+  name: fcpy
+  version: 0.21.1
+  top-level:
+    - fcpy
+source:
+  path: fcpy
+test:
+  imports:
+    - fcpy
+requirements:
+  run:
+    - Cartopy
+    - cfgrib
+    - dask
+    - fast-histogram
+    - ipywidgets
+    - kneed
+    - lzma
+    - matplotlib
+    - netcdf4
+    - numcodecs
+    - numpy
+    - scikit-image
+    - scikit-learn
+    - scipy
+    - tqdm
+    - xarray
+    - zarr
+
+about:
+  home: https://github.com/ecmwf-lab/field-compression
+  summary: ECMWF Field Compression Laboratory
+  license: Apache-2.0
diff --git a/packages/findlibs/meta.yaml b/packages/findlibs/meta.yaml
new file mode 100644
index 00000000..b4213bfc
--- /dev/null
+++ b/packages/findlibs/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: findlibs
+  version: 0.0.5
+  top-level:
+    - findlibs
+source:
+  url: https://files.pythonhosted.org/packages/ae/be/6c72ef9d990cd25fe3dd97ebe9d77a859f7d27b7273e62ad750846d207ee/findlibs-0.0.5.tar.gz
+  sha256: 7a801571e999d0ee83f9b92cbb598c21f861ee26ca9dba74cea8958ba4335e7e
+about:
+  home: https://github.com/ecmwf/findlibs
+  PyPI: https://pypi.org/project/findlibs
+  summary: A packages to search for shared libraries on various platforms
+  license: Apache License Version 2.0
diff --git a/packages/importlib_metadata/meta.yaml b/packages/importlib_metadata/meta.yaml
new file mode 100644
index 00000000..081bb2cf
--- /dev/null
+++ b/packages/importlib_metadata/meta.yaml
@@ -0,0 +1,16 @@
+package:
+  name: importlib_metadata
+  version: 6.6.0
+  top-level:
+    - importlib_metadata
+source:
+  url: https://files.pythonhosted.org/packages/30/bb/bf2944b8b88c65b797acc2c6a2cb0fb817f7364debf0675792e034013858/importlib_metadata-6.6.0-py3-none-any.whl
+  sha256: 43dd286a2cd8995d5eaef7fee2066340423b818ed3fd70adf0bad5f1fac53fed
+requirements:
+  run:
+    - zipp
+about:
+  home: https://github.com/python/importlib_metadata
+  PyPI: https://pypi.org/project/importlib_metadata
+  summary: Read metadata from Python packages
+  license: "Apache Software License"
diff --git a/packages/ipyfilite/meta.yaml b/packages/ipyfilite/meta.yaml
new file mode 100644
index 00000000..35f60486
--- /dev/null
+++ b/packages/ipyfilite/meta.yaml
@@ -0,0 +1,19 @@
+package:
+  name: ipyfilite
+  version: 0.1.4
+  top-level:
+    - ipyfilite
+source:
+  url: https://files.pythonhosted.org/packages/e8/21/ffa423d2939f4f6497c8a2278a3ce4cceeafec84454668e3c83413bde962/ipyfilite-0.1.4-py3-none-any.whl
+  sha256: bfe4cbfbb86e573e7f926d246ef5d22e12b35c155fe7b4562427b8d45fef6f40
+requirements:
+  run:
+    - ipywidgets
+about:
+  home: https://github.com/juntyr/ipyfilite
+  PyPI: https://pypi.org/project/ipyfilite
+  summary:
+    File upload widget specifically for Pyodide kernels running in JupyterLite.
+    Uploaded files are not loaded into memory but mounted as read-only files in a
+    new WORKERFS.
+  license: BSD 3-Clause License
diff --git a/packages/ipywidgets/meta.yaml b/packages/ipywidgets/meta.yaml
new file mode 100644
index 00000000..f4e47d07
--- /dev/null
+++ b/packages/ipywidgets/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: ipywidgets
+  version: 8.0.6
+  top-level:
+    - ipywidgets
+source:
+  url: https://files.pythonhosted.org/packages/50/7d/2c8b7bba2b1c2b5d1299f22fa7853f09b573c84e63b62870c13a6ec11990/ipywidgets-8.0.6-py3-none-any.whl
+  sha256: a60bf8d2528997e05ac83fd19ea2fbe65f2e79fbe1b2b35779bdfc46c2941dcc
+requirements:
+  run:
+    - widgetsnbextension
+    - jupyterlab_widgets
+about:
+  home: http://jupyter.org
+  PyPI: https://pypi.org/project/ipywidgets
+  summary: Jupyter interactive widgets
+  license: BSD 3-Clause License
diff --git a/packages/jupyterlab_widgets/meta.yaml b/packages/jupyterlab_widgets/meta.yaml
new file mode 100644
index 00000000..f8920c6c
--- /dev/null
+++ b/packages/jupyterlab_widgets/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: jupyterlab_widgets
+  version: 3.0.7
+  top-level:
+    - jupyterlab_widgets
+source:
+  url: https://files.pythonhosted.org/packages/46/98/e7ce879b7b5d4871b80e291be967d22e5e66fa43474c476a95fe6231f50d/jupyterlab_widgets-3.0.7-py3-none-any.whl
+  sha256: c73f8370338ec19f1bec47254752d6505b03601cbd5a67e6a0b184532f73a459
+about:
+  home: https://github.com/jupyter-widgets/ipywidgets
+  PyPI: https://pypi.org/project/jupyterlab_widgets
+  summary: Jupyter interactive widgets for JupyterLab
+  license: BSD-3-Clause
diff --git a/packages/kneed/meta.yaml b/packages/kneed/meta.yaml
new file mode 100644
index 00000000..6935a293
--- /dev/null
+++ b/packages/kneed/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: kneed
+  version: 0.8.3
+  top-level:
+    - kneed
+source:
+  url: https://files.pythonhosted.org/packages/22/55/f42149c6d3ff9eed1808a1741b0e814202d12af1ddb87765f879c3b32703/kneed-0.8.3-py3-none-any.whl
+  sha256: 8d31366cbd5af929057d4c8701f0eae96460cb995dfc6306ae3183051086a82a
+requirements:
+  run:
+    - numpy
+    - scipy
+about:
+  home: https://github.com/arvkevi/kneed
+  PyPI: https://pypi.org/project/kneed
+  summary: Knee-point detection in Python
+  license: BSD-3-Clause
diff --git a/packages/libeccodes/meta.yaml b/packages/libeccodes/meta.yaml
new file mode 100644
index 00000000..4b30089c
--- /dev/null
+++ b/packages/libeccodes/meta.yaml
@@ -0,0 +1,41 @@
+package:
+  name: libeccodes
+  version: 2.30.0
+
+source:
+  url: https://github.com/ecmwf/eccodes/archive/refs/tags/2.30.0.tar.gz
+  sha256: 5869817b76d1fd3b4b4d6ec3629231e4470f52a5abbfcec003974c1a7fdecbee
+  patches:
+    - patches/0001-32bit-support-hack.patch
+
+build:
+  type: shared_library
+  script: |
+    git clone --branch 3.7.0 --depth 1 https://github.com/ecmwf/ecbuild;
+
+    mkdir -p build;
+
+    cd build \
+        && emcmake cmake ../ \
+        -DCMAKE_INSTALL_PREFIX=${WASM_LIBRARY_DIR} \
+        -DBUILD_SHARED_LIBS=ON \
+        -DENABLE_NETCDF=OFF \
+        -DENABLE_JPG=OFF \
+        -DENABLE_PNG=OFF \
+        -DENABLE_AEC=OFF \
+        -DENABLE_FORTRAN=OFF \
+        -DDISABLE_OS_CHECK=ON \
+        -DENABLE_TESTS=OFF \
+        -DENABLE_PRODUCT_GRIB=ON \
+        -DENABLE_PRODUCT_BUFR=ON \
+        -DENABLE_EXAMPLES=OFF \
+        -DENABLE_BUILD_TOOLS=OFF \
+        -DENABLE_INSTALL_ECCODES_DEFINITIONS=ON \
+        -DENABLE_INSTALL_ECCODES_SAMPLES=OFF;
+        #-DCMAKE_C_FLAGS="-s TOTAL_MEMORY=50790400" \
+        #-DCMAKE_CXX_FLAGS="-s TOTAL_MEMORY=50790400";
+
+    emmake make -j ${PYODIDE_JOBS:-3};
+    emmake make -j ${PYODIDE_JOBS:-3} install;
+
+    cp -P ${WASM_LIBRARY_DIR}/lib/libeccodes.so ${DISTDIR}
diff --git a/packages/libeccodes/patches/0001-32bit-support-hack.patch b/packages/libeccodes/patches/0001-32bit-support-hack.patch
new file mode 100644
index 00000000..3d270618
--- /dev/null
+++ b/packages/libeccodes/patches/0001-32bit-support-hack.patch
@@ -0,0 +1,83 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index f7085bcae..d495de0f5 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -66,9 +66,9 @@ ecbuild_debug("ECCODES_LITTLE_ENDIAN=${ECCODES_LITTLE_ENDIAN}")
+ ecbuild_info("Operating system=${CMAKE_SYSTEM} (${EC_OS_BITS} bits)")
+ 
+ # Only support 64 bit operating systems
+-if( NOT EC_OS_BITS EQUAL "64" )
+-    ecbuild_critical( "Operating system ${CMAKE_SYSTEM} (${EC_OS_BITS} bits) -- ecCodes only supports 64 bit platforms" )
+-endif()
++# if( NOT EC_OS_BITS EQUAL "64" )
++#     ecbuild_critical( "Operating system ${CMAKE_SYSTEM} (${EC_OS_BITS} bits) -- ecCodes only supports 64 bit platforms" )
++# endif()
+ 
+ ###############################################################################
+ # some variables/options of this project
+@@ -423,7 +423,7 @@ if( HAVE_BUILD_TOOLS )
+ endif()
+ add_subdirectory( fortran )
+ 
+-add_subdirectory( tests )
++# add_subdirectory( tests )
+ add_subdirectory( examples )
+ add_subdirectory( data )
+ add_subdirectory( samples )
+diff --git a/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc b/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
+index df99452a0..92e4fe6af 100644
+--- a/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
++++ b/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
+@@ -215,6 +215,15 @@ static void init_class(grib_accessor_class* c)
+ #define MAX_NUMBER_OF_GROUPS 65534
+ #define EFDEBUG 0
+ 
++static const size_t nbits[32]={
++        0x1, 0x2, 0x4, 0x8, 0x10, 0x20,
++        0x40, 0x80, 0x100, 0x200, 0x400, 0x800,
++        0x1000, 0x2000, 0x4000, 0x8000, 0x10000, 0x20000,
++        0x40000, 0x80000, 0x100000, 0x200000, 0x400000, 0x800000,
++        0x1000000, 0x2000000, 0x4000000, 0x8000000, 0x10000000, 0x20000000,
++        0x40000000, 0x80000000
++};
++/*
+ static const unsigned long nbits[64] = {
+     0x1, 0x2, 0x4, 0x8,
+     0x10, 0x20, 0x40, 0x80,
+@@ -233,6 +242,7 @@ static const unsigned long nbits[64] = {
+     0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
+     0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000
+ };
++*/
+ 
+ static long number_of_bits(grib_handle* h, unsigned long x)
+ {
+diff --git a/src/grib_accessor_class_second_order_bits_per_value.cc b/src/grib_accessor_class_second_order_bits_per_value.cc
+index 5cd3b970c..63f713fd5 100644
+--- a/src/grib_accessor_class_second_order_bits_per_value.cc
++++ b/src/grib_accessor_class_second_order_bits_per_value.cc
+@@ -151,7 +151,6 @@ static void init_class(grib_accessor_class* c)
+ 
+ /* END_CLASS_IMP */
+ 
+-/*
+ static const size_t nbits[32]={
+         0x1, 0x2, 0x4, 0x8, 0x10, 0x20,
+         0x40, 0x80, 0x100, 0x200, 0x400, 0x800,
+@@ -160,7 +159,7 @@ static const size_t nbits[32]={
+         0x1000000, 0x2000000, 0x4000000, 0x8000000, 0x10000000, 0x20000000,
+         0x40000000, 0x80000000
+ };
+-*/
++/*
+ static const size_t nbits[64] = {
+     0x1, 0x2, 0x4, 0x8,
+     0x10, 0x20, 0x40, 0x80,
+@@ -179,6 +178,7 @@ static const size_t nbits[64] = {
+     0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
+     0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000
+ };
++*/
+ 
+ static int number_of_bits(size_t x, long* result)
+ {
diff --git a/packages/libnetcdf/meta.yaml b/packages/libnetcdf/meta.yaml
new file mode 100644
index 00000000..2ea001c0
--- /dev/null
+++ b/packages/libnetcdf/meta.yaml
@@ -0,0 +1,41 @@
+package:
+  name: libnetcdf
+  version: 4.9.2
+
+source:
+  sha256: bc104d101278c68b303359b3dc4192f81592ae8640f1aee486921138f7f88cb7
+  url: https://github.com/Unidata/netcdf-c/archive/refs/tags/v4.9.2.tar.gz
+  patches:
+    - patches/0001-disable-hdf5-configure-tests.patch
+
+requirements:
+  host:
+    - libhdf5
+    - zlib
+    - libxml
+
+build:
+  type: shared_library
+  script: |
+    export PATH=${WASM_LIBRARY_DIR}/bin:${PATH}
+
+    # dap + byterange: no libcurl
+
+    emconfigure ./configure \
+      --prefix=${WASM_LIBRARY_DIR} \
+      --disable-doxygen \
+      --enable-netcdf-4 \
+      --disable-dap \
+      --disable-byterange \
+      --disable-dap-remote-tests \
+      --disable-examples \
+      --disable-utilities \
+      --disable-testsets \
+      CFLAGS="-fPIC -I${WASM_LIBRARY_DIR}/include" \
+      CXXFLAGS="-fPIC -I${WASM_LIBRARY_DIR}/include" \
+      LDFLAGS="-L${WASM_LIBRARY_DIR}/lib";
+
+    emmake make -j ${PYODIDE_JOBS:-3};
+    emmake make -j ${PYODIDE_JOBS:-3} install;
+
+    cp -P ${WASM_LIBRARY_DIR}/lib/libnetcdf* ${DISTDIR}
diff --git a/packages/libnetcdf/patches/0001-disable-hdf5-configure-tests.patch b/packages/libnetcdf/patches/0001-disable-hdf5-configure-tests.patch
new file mode 100644
index 00000000..feb2dd98
--- /dev/null
+++ b/packages/libnetcdf/patches/0001-disable-hdf5-configure-tests.patch
@@ -0,0 +1,186 @@
+diff --git a/configure b/configure
+index d44122aa..130e5cb3 100755
+--- a/configure
++++ b/configure
+@@ -25216,25 +25216,26 @@ return H5Fflush ();
+   return 0;
+ }
+ _ACEOF
+-for ac_lib in '' hdf5 hdf5.dll
+-do
+-  if test -z "$ac_lib"; then
+-    ac_res="none required"
+-  else
+-    ac_res=-l$ac_lib
+-    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+-  fi
+-  if ac_fn_c_try_link "$LINENO"
+-then :
+-  ac_cv_search_H5Fflush=$ac_res
+-fi
+-rm -f core conftest.err conftest.$ac_objext conftest.beam \
+-    conftest$ac_exeext
+-  if test ${ac_cv_search_H5Fflush+y}
+-then :
+-  break
+-fi
+-done
++# for ac_lib in '' hdf5 hdf5.dll
++# do
++#   if test -z "$ac_lib"; then
++#     ac_res="none required"
++#   else
++#     ac_res=-l$ac_lib
++#     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
++#   fi
++#   if ac_fn_c_try_link "$LINENO"
++# then :
++#   ac_cv_search_H5Fflush=$ac_res
++# fi
++# rm -f core conftest.err conftest.$ac_objext conftest.beam \
++#     conftest$ac_exeext
++#   if test ${ac_cv_search_H5Fflush+y}
++# then :
++#   break
++# fi
++# done
++ac_cv_search_H5Fflush=hdf5
+ if test ${ac_cv_search_H5Fflush+y}
+ then :
+ 
+@@ -25277,25 +25278,26 @@ return H5DSis_scale ();
+   return 0;
+ }
+ _ACEOF
+-for ac_lib in '' hdf5_hl hdf5_hl.dll
+-do
+-  if test -z "$ac_lib"; then
+-    ac_res="none required"
+-  else
+-    ac_res=-l$ac_lib
+-    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+-  fi
+-  if ac_fn_c_try_link "$LINENO"
+-then :
+-  ac_cv_search_H5DSis_scale=$ac_res
+-fi
+-rm -f core conftest.err conftest.$ac_objext conftest.beam \
+-    conftest$ac_exeext
+-  if test ${ac_cv_search_H5DSis_scale+y}
+-then :
+-  break
+-fi
+-done
++# for ac_lib in '' hdf5_hl hdf5_hl.dll
++# do
++#   if test -z "$ac_lib"; then
++#     ac_res="none required"
++#   else
++#     ac_res=-l$ac_lib
++#     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
++#   fi
++#   if ac_fn_c_try_link "$LINENO"
++# then :
++#   ac_cv_search_H5DSis_scale=$ac_res
++# fi
++# rm -f core conftest.err conftest.$ac_objext conftest.beam \
++#     conftest$ac_exeext
++#   if test ${ac_cv_search_H5DSis_scale+y}
++# then :
++#   break
++# fi
++# done
++ac_cv_search_H5DSis_scale=hdf5_hl
+ if test ${ac_cv_search_H5DSis_scale+y}
+ then :
+ 
+@@ -25427,25 +25429,25 @@ return H5Dread_chunk ();
+   return 0;
+ }
+ _ACEOF
+-for ac_lib in '' hdf5_hldll hdf5_hl
+-do
+-  if test -z "$ac_lib"; then
+-    ac_res="none required"
+-  else
+-    ac_res=-l$ac_lib
+-    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+-  fi
+-  if ac_fn_c_try_link "$LINENO"
+-then :
+-  ac_cv_search_H5Dread_chunk=$ac_res
+-fi
+-rm -f core conftest.err conftest.$ac_objext conftest.beam \
+-    conftest$ac_exeext
+-  if test ${ac_cv_search_H5Dread_chunk+y}
+-then :
+-  break
+-fi
+-done
++# for ac_lib in '' hdf5_hldll hdf5_hl
++# do
++#   if test -z "$ac_lib"; then
++#     ac_res="none required"
++#   else
++#     ac_res=-l$ac_lib
++#     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
++#   fi
++#   if ac_fn_c_try_link "$LINENO"
++# then :
++#   ac_cv_search_H5Dread_chunk=$ac_res
++# fi
++# rm -f core conftest.err conftest.$ac_objext conftest.beam \
++#     conftest$ac_exeext
++#   if test ${ac_cv_search_H5Dread_chunk+y}
++# then :
++#   break
++# fi
++# done
+ if test ${ac_cv_search_H5Dread_chunk+y}
+ then :
+ 
+@@ -25490,25 +25492,25 @@ return H5Pset_fapl_ros3 ();
+   return 0;
+ }
+ _ACEOF
+-for ac_lib in '' hdf5_hldll hdf5_hl
+-do
+-  if test -z "$ac_lib"; then
+-    ac_res="none required"
+-  else
+-    ac_res=-l$ac_lib
+-    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+-  fi
+-  if ac_fn_c_try_link "$LINENO"
+-then :
+-  ac_cv_search_H5Pset_fapl_ros3=$ac_res
+-fi
+-rm -f core conftest.err conftest.$ac_objext conftest.beam \
+-    conftest$ac_exeext
+-  if test ${ac_cv_search_H5Pset_fapl_ros3+y}
+-then :
+-  break
+-fi
+-done
++# for ac_lib in '' hdf5_hldll hdf5_hl
++# do
++#   if test -z "$ac_lib"; then
++#     ac_res="none required"
++#   else
++#     ac_res=-l$ac_lib
++#     LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
++#   fi
++#   if ac_fn_c_try_link "$LINENO"
++# then :
++#   ac_cv_search_H5Pset_fapl_ros3=$ac_res
++# fi
++# rm -f core conftest.err conftest.$ac_objext conftest.beam \
++#     conftest$ac_exeext
++#   if test ${ac_cv_search_H5Pset_fapl_ros3+y}
++# then :
++#   break
++# fi
++# done
+ if test ${ac_cv_search_H5Pset_fapl_ros3+y}
+ then :
+ 
diff --git a/packages/libproj/meta.yaml b/packages/libproj/meta.yaml
index 9deee8d6..9a9a7060 100644
--- a/packages/libproj/meta.yaml
+++ b/packages/libproj/meta.yaml
@@ -5,6 +5,8 @@ package:
 source:
   sha256: 76ed3d0c3a348a6693dfae535e5658bbfd47f71cb7ff7eb96d9f12f7e068b1cf
   url: https://download.osgeo.org/proj/proj-8.2.1.tar.gz
+  patches:
+    - patches/0001-stod-empty-zero.patch
 
 requirements:
   host:
diff --git a/packages/libproj/patches/0001-stod-empty-zero.patch b/packages/libproj/patches/0001-stod-empty-zero.patch
new file mode 100644
index 00000000..035525dc
--- /dev/null
+++ b/packages/libproj/patches/0001-stod-empty-zero.patch
@@ -0,0 +1,16 @@
+diff --git a/src/iso19111/internal.cpp b/src/iso19111/internal.cpp
+index 4810202d..f7c667bc 100644
+--- a/src/iso19111/internal.cpp
++++ b/src/iso19111/internal.cpp
+@@ -242,6 +242,11 @@ bool ends_with(const std::string &str, const std::string &suffix) noexcept {
+ double c_locale_stod(const std::string &s) {
+ 
+     const auto s_size = s.size();
++    // Propagate <cstdlib>'s strtod behaviour
++    if (s_size == 0) {
++        return 0.0;
++    }
++
+     // Fast path
+     if (s_size > 0 && s_size < 15) {
+         std::int64_t acc = 0;
diff --git a/packages/netcdf4/meta.yaml b/packages/netcdf4/meta.yaml
new file mode 100644
index 00000000..e10596cc
--- /dev/null
+++ b/packages/netcdf4/meta.yaml
@@ -0,0 +1,31 @@
+package:
+  name: netcdf4
+  version: 1.6.3
+  top-level:
+    - netCDF4
+source:
+  url: https://files.pythonhosted.org/packages/8b/92/ff3b18a2f5fe03ffc2807c2ac8b55bee2c8ee730d1100b79bc8a7ab96134/netCDF4-1.6.3.tar.gz
+  sha256: 8c98a3a8cda06920ee8bd24a71226ddf0328c22bd838b0afca9cb45fb4580d99
+requirements:
+  host:
+    - libhdf5
+    - libnetcdf
+  run:
+    - numpy
+    - packaging
+    - h5py
+    - cftime
+test:
+  imports:
+    - netCDF4
+build:
+  vendor-sharedlib: true
+  script: |
+    export PATH=${WASM_LIBRARY_DIR}/bin:${PATH}
+    export HDF5_DIR=${WASM_LIBRARY_DIR}
+    echo ${HDF5_DIR}
+about:
+  home: "https://github.com/Unidata/netcdf4-python"
+  PyPI: https://pypi.org/project/netcdf4
+  summary: Provides an object-oriented python interface to the netCDF version 4 library
+  license: MIT
diff --git a/packages/pyodide_http/meta.yaml b/packages/pyodide_http/meta.yaml
new file mode 100644
index 00000000..f0aadef5
--- /dev/null
+++ b/packages/pyodide_http/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: pyodide_http
+  version: 0.2.1
+  top-level:
+    - pyodide_http
+source:
+  url: https://files.pythonhosted.org/packages/2d/14/d1bf3b7141ad5a42c26e4173a69e3e6529bd92b05bc587c570d28b6a3ce8/pyodide_http-0.2.1-py3-none-any.whl
+  sha256: 504f62904536a91049c12d0b9162ebaa187a84a3dd877e17c04fd9bf6ec3b68e
+about:
+  home: https://github.com/koenvo/pyodide-http
+  PyPI: https://pypi.org/project/pyodide_http
+  summary: Patch requests, urllib and urllib3 to make them work in Pyodide
+  license: MIT
diff --git a/packages/pyshp/meta.yaml b/packages/pyshp/meta.yaml
new file mode 100644
index 00000000..355a6426
--- /dev/null
+++ b/packages/pyshp/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: pyshp
+  version: 2.3.1
+  top-level:
+    - shapefile
+source:
+  url: https://files.pythonhosted.org/packages/98/2f/68116db5b36b895c0450e3072b8cb6c2fac0359279b182ea97014d3c8ac0/pyshp-2.3.1-py2.py3-none-any.whl
+  sha256: 67024c0ccdc352ba5db777c4e968483782dfa78f8e200672a90d2d30fd8b7b49
+about:
+  home: https://github.com/GeospatialPython/pyshp
+  PyPI: https://pypi.org/project/pyshp
+  summary: Pure Python read/write support for ESRI Shapefile format
+  license: MIT
diff --git a/packages/widgetsnbextension/meta.yaml b/packages/widgetsnbextension/meta.yaml
new file mode 100644
index 00000000..3ec19003
--- /dev/null
+++ b/packages/widgetsnbextension/meta.yaml
@@ -0,0 +1,19 @@
+package:
+  name: widgetsnbextension
+  version: 4.0.7
+  top-level:
+    - widgetsnbextension
+source:
+  url: https://github.com/jupyterlite/pyodide-kernel/archive/refs/tags/v0.0.8.tar.gz
+  sha256: 3f64751d61c9f954415c87a72e44e7eb22511a8a0a8448d1011eb46fe5f9a495
+build:
+  script: |
+    cd ..
+    mv widgetsnbextension-4.0.7/packages/pyodide-kernel/py/widgetsnbextension4/widgetsnbextension .
+    rm -rf widgetsnbextension-4.0.7
+    mv widgetsnbextension widgetsnbextension-4.0.7
+about:
+  home: http://jupyter.org
+  PyPI: https://pypi.org/project/widgetsnbextension
+  summary: Jupyter interactive widgets for Jupyter Notebook
+  license: BSD 3-Clause License
diff --git a/packages/xarray/meta.yaml b/packages/xarray/meta.yaml
index e3c6c337..5338926f 100644
--- a/packages/xarray/meta.yaml
+++ b/packages/xarray/meta.yaml
@@ -12,6 +12,7 @@ requirements:
     - numpy
     - packaging
     - pandas
+    - dask
 about:
   home: https://github.com/pydata/xarray
   PyPI: https://pypi.org/project/xarray
diff --git a/packages/zipp/meta.yaml b/packages/zipp/meta.yaml
new file mode 100644
index 00000000..0aa4ec79
--- /dev/null
+++ b/packages/zipp/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: zipp
+  version: 3.15.0
+  top-level:
+    - zipp
+source:
+  url: https://files.pythonhosted.org/packages/5b/fa/c9e82bbe1af6266adf08afb563905eb87cab83fde00a0a08963510621047/zipp-3.15.0-py3-none-any.whl
+  sha256: 48904fc76a60e542af151aded95726c1a5c34ed43ab4134b597665c86d7ad556
+about:
+  home: https://github.com/jaraco/zipp
+  PyPI: https://pypi.org/project/zipp
+  summary: Backport of pathlib-compatible object wrapper for zip files
+  license: "MIT"
