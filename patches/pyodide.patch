diff --git a/Dockerfile b/Dockerfile
index 2569e238..57697987 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,5 +1,5 @@
-FROM node:20.1.0-buster-slim AS node-image
-FROM python:3.11.3-slim-buster
+FROM node:20.1.0-bullseye-slim AS node-image
+FROM python:3.11.3-slim-bullseye
 
 # Requirements for building packages
 RUN apt-get update \
@@ -7,8 +7,8 @@ RUN apt-get update \
         bzip2 ccache f2c g++ gfortran git make \
         patch pkg-config swig unzip wget xz-utils \
         autoconf autotools-dev automake texinfo dejagnu \
-        build-essential prelink autoconf libtool libltdl-dev \
-        gnupg2 libdbus-glib-1-2 sudo sqlite3 \
+        build-essential autoconf libtool libltdl-dev \
+        gnupg2 libdbus-glib-1-2 sudo sqlite3 clang libclang-dev cmake \
         ninja-build jq xxd \
   && rm -rf /var/lib/apt/lists/*
 
@@ -31,7 +31,8 @@ ADD requirements.txt docs/requirements-doc.txt /
 ADD pyodide-build /pyodide-build
 
 WORKDIR /
-RUN pip3 --no-cache-dir install -r requirements.txt \
+RUN pip3 --no-cache-dir install "pydantic<2" \
+    && pip3 --no-cache-dir install -r requirements.txt \
     && pip3 --no-cache-dir install -r requirements-doc.txt \
     && rm -rf requirements.txt requirements-doc.txt pyodide-build
 
diff --git a/packages/MetPy/meta.yaml b/packages/MetPy/meta.yaml
new file mode 100644
index 00000000..f1169c46
--- /dev/null
+++ b/packages/MetPy/meta.yaml
@@ -0,0 +1,26 @@
+package:
+  name: MetPy
+  version: 1.5.1
+  top-level:
+    - metpy
+source:
+  url: https://files.pythonhosted.org/packages/6d/bf/9794cba86ef63644d41799d0dfe4031f430e937245a5f3f1e66508a6c8fb/MetPy-1.5.1-py3-none-any.whl
+  sha256: a654a1aae77422ad340c06daaa70bd34f0ca5325f4ff202796d2dce48e53e776
+requirements:
+  run:
+    - matplotlib
+    - numpy
+    - pandas
+    - pint
+    - pooch
+    - pyproj
+    - scipy
+    - traitlets
+    - xarray
+about:
+  home: https://github.com/Unidata/MetPy
+  PyPI: https://pypi.org/project/MetPy
+  summary:
+    Collection of tools for reading, visualizing and performing calculations
+    with weather data.
+  license: BSD-3-Clause
diff --git a/packages/Pillow/meta.yaml b/packages/Pillow/meta.yaml
index 09f078e9..f92de7d8 100644
--- a/packages/Pillow/meta.yaml
+++ b/packages/Pillow/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: Pillow
-  version: 10.0.0
+  version: 10.2.0
   top-level:
     - PIL
 source:
-  sha256: 9c82b5b3e043c7af0d95792d0d20ccf68f61a1fec6b3530e718b688422727396
-  url: https://files.pythonhosted.org/packages/0f/8b/2ebaf9adcf4260c00f842154865f8730cf745906aa5dd499141fb6063e26/Pillow-10.0.0.tar.gz
+  sha256: e87f0b2c78157e12d7686b27d63c070fd65d994e8ddae6f328e0dcf4a0cd007e
+  url: https://files.pythonhosted.org/packages/f8/3e/32cbd0129a28686621434cbf17bb64bf1458bfb838f1f668262fefce145c/pillow-10.2.0.tar.gz
   patches:
     - patches/0001-Enable-image-formats.patch
 build:
diff --git a/packages/asttokens/meta.yaml b/packages/asttokens/meta.yaml
new file mode 100644
index 00000000..fcefde3d
--- /dev/null
+++ b/packages/asttokens/meta.yaml
@@ -0,0 +1,16 @@
+package:
+  name: asttokens
+  version: 2.4.1
+  top-level:
+    - asttokens
+source:
+  url: https://files.pythonhosted.org/packages/45/86/4736ac618d82a20d87d2f92ae19441ebc7ac9e7a581d7e58bbe79233b24a/asttokens-2.4.1-py2.py3-none-any.whl
+  sha256: 051ed49c3dcae8913ea7cd08e46a606dba30b79993209636c4875bc1d637bc24
+requirements:
+  run:
+    - six
+about:
+  home: https://github.com/gristlabs/asttokens
+  PyPI: https://pypi.org/project/asttokens
+  summary: Annotate AST trees with source code positions
+  license: Apache 2.0
diff --git a/packages/attrs/meta.yaml b/packages/attrs/meta.yaml
index be036e51..498fd5be 100644
--- a/packages/attrs/meta.yaml
+++ b/packages/attrs/meta.yaml
@@ -1,12 +1,12 @@
 package:
   name: attrs
-  version: 23.1.0
+  version: 23.2.0
   top-level:
     - attr
     - attrs
 source:
-  sha256: 1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04
-  url: https://files.pythonhosted.org/packages/f0/eb/fcb708c7bf5056045e9e98f62b93bd7467eb718b0202e7698eb11d66416c/attrs-23.1.0-py3-none-any.whl
+  sha256: 99b87a485a5820b23b879f04c2305b44b951b502fd64be915879d77a7e8fc6f1
+  url: https://files.pythonhosted.org/packages/e0/44/827b2a91a5816512fcaf3cc4ebc465ccd5d598c45cefa6703fcf4a79018f/attrs-23.2.0-py3-none-any.whl
 requirements:
   run:
     - six
diff --git a/packages/basemap-data/meta.yaml b/packages/basemap-data/meta.yaml
new file mode 100644
index 00000000..c839d187
--- /dev/null
+++ b/packages/basemap-data/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: basemap-data
+  version: 1.3.2
+  top-level:
+    - basemap_data
+source:
+  url: https://files.pythonhosted.org/packages/2c/c3/63fdb885308c999206c7a497d79a50891581626da7dc491d432d2732bb46/basemap_data-1.3.2-py2.py3-none-any.whl
+  sha256: 26e794556c496b26f7714658cdbea5c68cb47d6a8a9fb0e674844fa89c56fc59
+about:
+  home: https://matplotlib.org/basemap
+  PyPI: https://pypi.org/project/basemap-data
+  summary: Data assets for matplotlib basemap
+  license: GNU Lesser General Public License v3 or later (LGPLv3+)
diff --git a/packages/basemap/meta.yaml b/packages/basemap/meta.yaml
new file mode 100644
index 00000000..076bfc80
--- /dev/null
+++ b/packages/basemap/meta.yaml
@@ -0,0 +1,31 @@
+package:
+  name: basemap
+  version: 1.4.1
+  top-level:
+    - mpl_toolkits
+source:
+  url: https://files.pythonhosted.org/packages/00/63/f3a5e74a8a31c20ea785ebd0fc1a9e680a9f1c5ac9ab4888f349ef9a3165/basemap-1.4.1.zip
+  sha256: 6822d3d08c11cdc443e3ed01d61d512e7cf62d4b40bbc1d235f0a898f2c54a7a
+requirements:
+  host:
+    - geos
+  run:
+    - basemap-data
+    - numpy
+    - cycler
+    - distutils
+    - pyparsing
+    - matplotlib
+    - pyproj
+    - pyshp
+
+build:
+  vendor-sharedlib: true
+  cflags: -Wno-int-conversion -Wno-incompatible-function-pointer-types
+  script: |
+    export GEOS_DIR=${WASM_LIBRARY_DIR}
+about:
+  home: https://matplotlib.org/basemap
+  PyPI: https://pypi.org/project/basemap
+  summary: Plot data on map projections with matplotlib
+  license: MIT
diff --git a/packages/certifi/meta.yaml b/packages/certifi/meta.yaml
index 1ce1d74c..6472705a 100644
--- a/packages/certifi/meta.yaml
+++ b/packages/certifi/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: certifi
-  version: 2023.7.22
+  version: 2024.2.2
   top-level:
     - certifi
 source:
-  url: https://files.pythonhosted.org/packages/4c/dd/2234eab22353ffc7d94e8d13177aaa050113286e93e7b40eae01fbf7c3d9/certifi-2023.7.22-py3-none-any.whl
-  sha256: 92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9
+  url: https://files.pythonhosted.org/packages/ba/06/a07f096c664aeb9f01624f858c3add0a4e913d6c96257acb4fce61e7de14/certifi-2024.2.2-py3-none-any.whl
+  sha256: dc383c07b76109f368f6106eee2b593b04a011ea4d55f652c6ca24a754d1cdd1
 about:
   home: https://github.com/certifi/python-certifi
   PyPI: https://pypi.org/project/certifi
diff --git a/packages/cffi/meta.yaml b/packages/cffi/meta.yaml
index 015eae40..a3b87ad6 100644
--- a/packages/cffi/meta.yaml
+++ b/packages/cffi/meta.yaml
@@ -1,16 +1,16 @@
 package:
   name: cffi
-  version: 1.15.1
+  version: 1.16.0
   top-level:
     - cffi
 requirements:
   run:
     - pycparser
 source:
-  url: https://files.pythonhosted.org/packages/2b/a8/050ab4f0c3d4c1b8aaa805f70e26e84d0e27004907c5b8ecc1d31815f92a/cffi-1.15.1.tar.gz
-  sha256: d400bfb9a37b1351253cb402671cea7e89bdecc294e8016a707f6d1d8ac934f9
+  url: https://files.pythonhosted.org/packages/68/ce/95b0bae7968c65473e1298efb042e10cafc7bafc14d9e4f154008241c91d/cffi-1.16.0.tar.gz
+  sha256: bcb3ef43e58665bbda2fb198698fcae6776483e0c4a631aa5647806c25e02cc0
   patches:
-    - patches/libffi-config.patch
+    - patches/0001-Use-libffi-in-emscripten.patch
 build:
   cross-build-env: true
 about:
diff --git a/packages/cffi/patches/0001-Use-libffi-in-emscripten.patch b/packages/cffi/patches/0001-Use-libffi-in-emscripten.patch
new file mode 100644
index 00000000..bc8605fd
--- /dev/null
+++ b/packages/cffi/patches/0001-Use-libffi-in-emscripten.patch
@@ -0,0 +1,35 @@
+From d23eff39a97bc172e6c175d944553411a1514c56 Mon Sep 17 00:00:00 2001
+From: Hood Chatham <roberthoodchatham@gmail.com>
+Date: Mon, 29 Jan 2024 15:35:52 -0800
+Subject: [PATCH] Use libffi in emscripten
+
+Upstreamed:
+https://github.com/python-cffi/cffi/pull/53
+
+---
+ src/c/_cffi_backend.c | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+diff --git a/src/c/_cffi_backend.c b/src/c/_cffi_backend.c
+index 537271fb..93c9cb29 100644
+--- a/src/c/_cffi_backend.c
++++ b/src/c/_cffi_backend.c
+@@ -112,6 +112,15 @@
+ # define CFFI_CHECK_FFI_PREP_CIF_VAR __builtin_available(macos 10.15, ios 13, watchos 6, tvos 13, *)
+ # define CFFI_CHECK_FFI_PREP_CIF_VAR_MAYBE 1
+ 
++#elif defined(__EMSCRIPTEN__)
++
++# define CFFI_CHECK_FFI_CLOSURE_ALLOC 1
++# define CFFI_CHECK_FFI_CLOSURE_ALLOC_MAYBE 1
++# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC 1
++# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC_MAYBE 1
++# define CFFI_CHECK_FFI_PREP_CIF_VAR 1
++# define CFFI_CHECK_FFI_PREP_CIF_VAR_MAYBE 1
++
+ #else
+ 
+ # define CFFI_CHECK_FFI_CLOSURE_ALLOC 0
+-- 
+2.25.1
+
diff --git a/packages/cffi/patches/libffi-config.patch b/packages/cffi/patches/libffi-config.patch
deleted file mode 100644
index 0600ed52..00000000
--- a/packages/cffi/patches/libffi-config.patch
+++ /dev/null
@@ -1,31 +0,0 @@
-# HG changeset patch
-# User hoodmane
-# Date 1627635284 -7200
-#      Fri Jul 30 10:54:44 2021 +0200
-# Branch patch
-# Node ID 8d1dd7efc05383a1ff7430ec3c64154a0ecd4be1
-# Parent  e0e3f0fc068ab19d2a8f6daf1f89dea6a7912b8e
-Change config settings
-
-diff -r e0e3f0fc068a -r 8d1dd7efc053 c/_cffi_backend.c
---- a/c/_cffi_backend.c	Thu Jul 22 17:44:04 2021 +0200
-+++ b/c/_cffi_backend.c	Fri Jul 30 10:54:44 2021 +0200
-@@ -107,12 +107,12 @@
- 
- #else
- 
--# define CFFI_CHECK_FFI_CLOSURE_ALLOC 0
--# define CFFI_CHECK_FFI_CLOSURE_ALLOC_MAYBE 0
--# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC 0
--# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC_MAYBE 0
--# define CFFI_CHECK_FFI_PREP_CIF_VAR 0
--# define CFFI_CHECK_FFI_PREP_CIF_VAR_MAYBE 0
-+# define CFFI_CHECK_FFI_CLOSURE_ALLOC 1
-+# define CFFI_CHECK_FFI_CLOSURE_ALLOC_MAYBE 1
-+# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC 1
-+# define CFFI_CHECK_FFI_PREP_CLOSURE_LOC_MAYBE 1
-+# define CFFI_CHECK_FFI_PREP_CIF_VAR 1
-+# define CFFI_CHECK_FFI_PREP_CIF_VAR_MAYBE 1
- 
- #endif
- 
diff --git a/packages/cfgrib/meta.yaml b/packages/cfgrib/meta.yaml
new file mode 100644
index 00000000..8fd06581
--- /dev/null
+++ b/packages/cfgrib/meta.yaml
@@ -0,0 +1,24 @@
+package:
+  name: cfgrib
+  version: 0.9.10.4
+  top-level:
+    - cfgrib
+source:
+  url: https://files.pythonhosted.org/packages/69/b4/5389e5b3240d24aa1210ba698b3c5c8c800e1a83842af9b1effa52b4a389/cfgrib-0.9.10.4.tar.gz
+  sha256: b490078192aa13ec89c77296110355521442325866b16a996f4b3cf421542909
+  patches:
+    - patches/0001-dataset-inferred-dtype.patch
+requirements:
+  run:
+    - attrs
+    - click
+    - eccodes
+    - numpy
+    - xarray
+about:
+  home: https://github.com/ecmwf/cfgrib
+  PyPI: https://pypi.org/project/cfgrib
+  summary:
+    Python interface to map GRIB files to the NetCDF Common Data Model following
+    the CF Convention using ecCodes.
+  license: Apache License Version 2.0
diff --git a/packages/cfgrib/patches/0001-dataset-inferred-dtype.patch b/packages/cfgrib/patches/0001-dataset-inferred-dtype.patch
new file mode 100644
index 00000000..2104d93a
--- /dev/null
+++ b/packages/cfgrib/patches/0001-dataset-inferred-dtype.patch
@@ -0,0 +1,50 @@
+diff --git a/cfgrib/dataset.py b/cfgrib/dataset.py
+index e4f91ec..f81afb7 100644
+--- a/cfgrib/dataset.py
++++ b/cfgrib/dataset.py
+@@ -330,11 +330,11 @@ class OnDiskArray:
+     ] = attr.attrib(repr=False)
+     missing_value: float
+     geo_ndim: int = attr.attrib(default=1, repr=False)
+-    dtype = np.dtype("float32")
++    dtype: np.dtype = attr.attrib(default=np.dtype("float32"), repr=False)
+ 
+     def build_array(self) -> np.ndarray:
+         """Helper method used to test __getitem__"""
+-        array = np.full(self.shape, fill_value=np.nan, dtype="float32")
++        array = np.full(self.shape, fill_value=np.nan, dtype=self.dtype)
+         for header_indexes, message_ids in self.field_id_index.items():
+             # NOTE: fill a single field as found in the message
+             message = self.index.get_field(message_ids[0])  # type: ignore
+@@ -348,7 +348,7 @@ class OnDiskArray:
+         header_item_list = expand_item(item[: -self.geo_ndim], self.shape)
+         header_item = [{ix: i for i, ix in enumerate(it)} for it in header_item_list]
+         array_field_shape = tuple(len(i) for i in header_item_list) + self.shape[-self.geo_ndim :]
+-        array_field = np.full(array_field_shape, fill_value=np.nan, dtype="float32")
++        array_field = np.full(array_field_shape, fill_value=np.nan, dtype=self.dtype)
+         for header_indexes, message_ids in self.field_id_index.items():
+             try:
+                 array_field_indexes = [it[ix] for it, ix in zip(header_item, header_indexes)]
+@@ -566,12 +566,22 @@ def build_variable_components(
+                     extra_coords_data[coord_name][header_value] = coord_value
+         offsets[tuple(header_indexes)] = message_ids
+     missing_value = data_var_attrs.get("missingValue", messages.MISSING_VAUE_INDICATOR)
++    if len(offsets) > 0:
++        # Infer the dtype from the first data message
++        header_indexes, message_ids = next(iter(offsets.items()))
++        message = index.get_field(message_ids[0])
++        values = get_values_in_order(message, np.empty(shape)[header_indexes].shape)
++        dtype = values.dtype
++    else:
++        # Fall back to a reasonable default dtype
++        dtype = np.dtype("float32")
+     on_disk_array = OnDiskArray(
+         index=index,
+         shape=shape,
+         field_id_index=offsets,
+         missing_value=missing_value,
+         geo_ndim=len(geo_dims),
++        dtype=dtype,
+     )
+ 
+     if "time" in coord_vars and "step" in coord_vars:
diff --git a/packages/cftime/meta.yaml b/packages/cftime/meta.yaml
index fe8f4d86..7468dd5f 100644
--- a/packages/cftime/meta.yaml
+++ b/packages/cftime/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: cftime
-  version: 1.6.2
+  version: 1.6.3
   top-level:
     - cftime
 source:
-  url: https://files.pythonhosted.org/packages/cd/db/c528f26ee2dbac1dc348189386c2df745770bb22c02542e281d60212cb13/cftime-1.6.2.tar.gz
-  sha256: 8614c00fb8a5046de304fdd86dbd224f99408185d7b245ac6628d0276596e6d2
+  url: https://files.pythonhosted.org/packages/ee/cb/2dcae27c58d3dc773848d273eb4036513eca06ae92733dc2ba4b7a59878f/cftime-1.6.3.tar.gz
+  sha256: d0a6b29f72a13f08e008b9becff247cc75c84acb213332ede18879c5b6aa4dfd
 
 requirements:
   run:
diff --git a/packages/cloudpickle/meta.yaml b/packages/cloudpickle/meta.yaml
index 679bf8aa..c25a7f1b 100644
--- a/packages/cloudpickle/meta.yaml
+++ b/packages/cloudpickle/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: cloudpickle
-  version: 2.2.1
+  version: 3.0.0
   top-level:
     - cloudpickle
 source:
-  sha256: 61f594d1f4c295fa5cd9014ceb3a1fc4a70b0de1164b94fbc2d854ccba056f9f
-  url: https://files.pythonhosted.org/packages/15/80/44286939ca215e88fa827b2aeb6fa3fd2b4a7af322485c7170d6f9fd96e0/cloudpickle-2.2.1-py3-none-any.whl
+  sha256: 246ee7d0c295602a036e86369c77fecda4ab17b506496730f2f576d9016fd9c7
+  url: https://files.pythonhosted.org/packages/96/43/dae06432d0c4b1dc9e9149ad37b4ca8384cf6eb7700cd9215b177b914f0a/cloudpickle-3.0.0-py3-none-any.whl
 about:
   home: https://github.com/cloudpipe/cloudpickle
   PyPI: https://pypi.org/project/cloudpickle
diff --git a/packages/cmcrameri/meta.yaml b/packages/cmcrameri/meta.yaml
new file mode 100644
index 00000000..9ea051b9
--- /dev/null
+++ b/packages/cmcrameri/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: cmcrameri
+  version: "1.5"
+  top-level:
+    - cmcrameri
+source:
+  url: https://files.pythonhosted.org/packages/12/ec/de245dfecc864e342dcf411e83d61c25e5f50102c4918d5ddf9f92778a2b/cmcrameri-1.5-py3-none-any.whl
+  sha256: c8af03345cd5d8d9f0f0f55d3cd29434fb279553ad44581c7dc9c74747f9a733
+about:
+  home: "https://github.com/callumrollo/cmcrameri"
+  PyPI: https://pypi.org/project/cmcrameri
+  summary: Perceptually uniform colormaps by Fabio Crameri
+  license: MIT
diff --git a/packages/comm/meta.yaml b/packages/comm/meta.yaml
new file mode 100644
index 00000000..8b392b46
--- /dev/null
+++ b/packages/comm/meta.yaml
@@ -0,0 +1,37 @@
+package:
+  name: comm
+  version: 0.2.1
+  top-level:
+    - comm
+source:
+  url: https://files.pythonhosted.org/packages/6e/c1/e7335bd49aa3fa3bd453e34a4580b0076804f219897ad76d4d5aa4d8f22f/comm-0.2.1-py3-none-any.whl
+  sha256: 87928485c0dfc0e7976fd89fc1e187023cf587e7c353e4a9b417555b44adf021
+requirements:
+  run:
+    - traitlets
+about:
+  home: https://github.com/ipython/comm
+  PyPI: https://pypi.org/project/comm
+  summary:
+    Jupyter Python Comm implementation, for usage in ipykernel, xeus-python
+    etc.
+  license:
+    'BSD 3-Clause License  Copyright (c) 2022, Jupyter All rights reserved.  Redistribution
+    and use in source and binary forms, with or without modification, are permitted
+    provided that the following conditions are met:  1. Redistributions of source
+    code must retain the above copyright notice, this list of conditions and the following
+    disclaimer.  2. Redistributions in binary form must reproduce the above copyright
+    notice, this list of conditions and the following disclaimer in the documentation
+    and/or other materials provided with the distribution.  3. Neither the name of
+    the copyright holder nor the names of its contributors may be used to endorse
+    or promote products derived from this software without specific prior written
+    permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
+    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+    IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.'
diff --git a/packages/cryptography/meta.yaml b/packages/cryptography/meta.yaml
index 797235eb..562ab387 100644
--- a/packages/cryptography/meta.yaml
+++ b/packages/cryptography/meta.yaml
@@ -1,20 +1,18 @@
 package:
   name: cryptography
-  version: 39.0.2
+  version: 42.0.5
   top-level:
     - cryptography
 source:
-  url: https://files.pythonhosted.org/packages/fa/f3/f4b8c175ea9a1de650b0085858059050b7953a93d66c97ed89b93b232996/cryptography-39.0.2.tar.gz
-  sha256: bc5b871e977c8ee5a1bbc42fa8d19bcc08baf0c51cbf1586b0e87a2694dde42f
+  url: https://files.pythonhosted.org/packages/13/9e/a55763a32d340d7b06d045753c186b690e7d88780cafce5f88cb931536be/cryptography-42.0.5.tar.gz
+  sha256: 6fe07eec95dfd477eb9530aef5bead34fec819b3aaf6c5bd6d20565da607bfe1
   patches:
-    - patches/0001-Use-patched-instant.patch
+    - patches/0001-Tell-rust-lang-libc-that-time_t-is-64-bits.patch
 build:
   script: |
     export OPENSSL_INCLUDE_PATH=$(pkg-config --cflags-only-I --dont-define-prefix openssl)
     export OPENSSL_LIBRARY_PATH=$(pkg-config --libs-only-L --dont-define-prefix openssl)
-
-    # TODO: remove this when instant makes a release
-    git clone --depth 1 https://github.com/hoodmane/instant.git --branch emscripten-no-leading-underscore
+    export OPENSSL_DIR=$WASM_LIBRARY_DIR
   cflags: |
     -Wno-implicit-function-declaration
     $(OPENSSL_INCLUDE_PATH)
diff --git a/packages/cryptography/patches/0001-Tell-rust-lang-libc-that-time_t-is-64-bits.patch b/packages/cryptography/patches/0001-Tell-rust-lang-libc-that-time_t-is-64-bits.patch
new file mode 100644
index 00000000..00e38b45
--- /dev/null
+++ b/packages/cryptography/patches/0001-Tell-rust-lang-libc-that-time_t-is-64-bits.patch
@@ -0,0 +1,28 @@
+From aeadf0c7223c0b8c7e209f6b555dfc91de31a34c Mon Sep 17 00:00:00 2001
+From: Hood Chatham <roberthoodchatham@gmail.com>
+Date: Mon, 29 Jan 2024 16:34:05 -0800
+Subject: [PATCH] Tell rust-lang/libc that time_t is 64 bits
+
+See upstream PR:
+https://github.com/rust-lang/libc/pull/3569#event-11634944887
+---
+ src/rust/Cargo.toml | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/src/rust/Cargo.toml b/src/rust/Cargo.toml
+index 2322486d0..52e7231d7 100644
+--- a/src/rust/Cargo.toml
++++ b/src/rust/Cargo.toml
+@@ -7,6 +7,9 @@ publish = false
+ # This specifies the MSRV
+ rust-version = "1.63.0"
+ 
++[patch.crates-io]
++libc = { git = 'https://github.com/hoodmane/libc.git', branch = 'emscripten-time_t-64-bit-2' }
++
+ [dependencies]
+ once_cell = "1"
+ cfg-if = "1"
+-- 
+2.25.1
+
diff --git a/packages/cryptography/patches/0001-Use-patched-instant.patch b/packages/cryptography/patches/0001-Use-patched-instant.patch
deleted file mode 100644
index dd1d0d19..00000000
--- a/packages/cryptography/patches/0001-Use-patched-instant.patch
+++ /dev/null
@@ -1,26 +0,0 @@
-From 1c579acc950f6cacfe1c2ff045708fc864dea684 Mon Sep 17 00:00:00 2001
-From: Hood Chatham <roberthoodchatham@gmail.com>
-Date: Sun, 18 Sep 2022 17:44:03 -0700
-Subject: [PATCH] Use patched instant
-
----
- src/rust/Cargo.toml | 3 +++
- 1 file changed, 3 insertions(+)
-
-diff --git a/src/rust/Cargo.toml b/src/rust/Cargo.toml
-index 617167d04..b51c2d2f2 100644
---- a/src/rust/Cargo.toml
-+++ b/src/rust/Cargo.toml
-@@ -5,6 +5,9 @@ authors = ["The cryptography developers <cryptography-dev@python.org>"]
- edition = "2018"
- publish = false
- 
-+[patch.crates-io]
-+instant = { path =  "../../instant" }
-+
- [dependencies]
- lazy_static = "1"
- pyo3 = { version = "0.15.1" }
--- 
-2.25.1
-
diff --git a/packages/cycler/meta.yaml b/packages/cycler/meta.yaml
index a3093473..194d1e76 100644
--- a/packages/cycler/meta.yaml
+++ b/packages/cycler/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: cycler
-  version: 0.11.0
+  version: 0.12.1
   top-level:
     - cycler
 source:
-  url: https://files.pythonhosted.org/packages/5c/f9/695d6bedebd747e5eb0fe8fad57b72fdf25411273a39791cde838d5a8f51/cycler-0.11.0-py3-none-any.whl
-  sha256: 3a27e95f763a428a739d2add979fa7494c912a32c17c4c38c4d5f082cad165a3
+  url: https://files.pythonhosted.org/packages/e7/05/c19819d5e3d95294a6f5947fb9b9629efb316b96de511b418c53d245aae6/cycler-0.12.1-py3-none-any.whl
+  sha256: 85cef7cff222d8644161529808465972e51340599459b8ac3ccbac5a854e0d30
 requirements:
   run:
     - six
diff --git a/packages/dask/meta.yaml b/packages/dask/meta.yaml
new file mode 100644
index 00000000..07735ea6
--- /dev/null
+++ b/packages/dask/meta.yaml
@@ -0,0 +1,26 @@
+package:
+  name: dask
+  version: 2024.2.1
+  top-level:
+    - dask
+source:
+  url: https://files.pythonhosted.org/packages/ff/d3/f1dcba697c7d7e8470ffa34b31ca1e663d4a2654ef806877f1017ecc5102/dask-2024.2.1-py3-none-any.whl
+  sha256: a13fcdeead3bab3576495023f83097adcffe2f03c371c241b5a1f0b232b35b38
+test:
+  imports:
+    - dask
+requirements:
+  run:
+    - click
+    - cloudpickle
+    - importlib_metadata
+    - Jinja2
+    - packaging
+    - partd
+    - pyyaml
+    - toolz
+about:
+  home: https://github.com/dask/dask/
+  PyPI: https://pypi.org/project/dask
+  summary: Parallel PyData with Task Scheduling
+  license: BSD
diff --git a/packages/distlib/meta.yaml b/packages/distlib/meta.yaml
index 2ba624f2..7b59119c 100644
--- a/packages/distlib/meta.yaml
+++ b/packages/distlib/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: distlib
-  version: 0.3.7
+  version: 0.3.8
   top-level:
     - distlib
 source:
-  sha256: 2e24928bc811348f0feb63014e97aaae3037f2cf48712d51ae61df7fd6075057
-  url: https://files.pythonhosted.org/packages/43/a0/9ba967fdbd55293bacfc1507f58e316f740a3b231fc00e3d86dc39bc185a/distlib-0.3.7-py2.py3-none-any.whl
+  sha256: 034db59a0b96f8ca18035f36290806a9a6e6bd9d1ff91e45a7f172eb17e51784
+  url: https://files.pythonhosted.org/packages/8e/41/9307e4f5f9976bc8b7fea0b66367734e8faf3ec84bc0d412d8cfabbb66cd/distlib-0.3.8-py2.py3-none-any.whl
 build:
   post: |
     find $WHEELDIR -name '*.exe' -delete
diff --git a/packages/eccodes/meta.yaml b/packages/eccodes/meta.yaml
new file mode 100644
index 00000000..2d13cf3a
--- /dev/null
+++ b/packages/eccodes/meta.yaml
@@ -0,0 +1,29 @@
+package:
+  name: eccodes
+  version: 1.7.0
+  top-level:
+    - eccodes
+    - gribapi
+source:
+  url: https://files.pythonhosted.org/packages/d7/b1/445b5976010f31d5a78e14f9a7cf92fadd9d24c82553d9598078746262d3/eccodes-1.7.0.tar.gz
+  sha256: 0f233009eac228b99be6e40e5f7cc175b477d322bd91c0dac6bf226f0222cb17
+  patches:
+    - patches/0001-shared-library-include.patch
+requirements:
+  run:
+    - attrs
+    - cffi
+    - findlibs
+    - numpy
+  host:
+    - libeccodes
+build:
+  vendor-sharedlib: true
+  script: |
+    cp ${WASM_LIBRARY_DIR}/lib/libeccodes.so gribapi/
+    cp -r ${WASM_LIBRARY_DIR}/share/eccodes/definitions gribapi/
+about:
+  home: https://github.com/ecmwf/eccodes-python
+  PyPI: https://pypi.org/project/eccodes
+  summary: Python interface to the ecCodes GRIB and BUFR decoder/encoder
+  license: Apache License Version 2.0
diff --git a/packages/eccodes/patches/0001-shared-library-include.patch b/packages/eccodes/patches/0001-shared-library-include.patch
new file mode 100644
index 00000000..671f423a
--- /dev/null
+++ b/packages/eccodes/patches/0001-shared-library-include.patch
@@ -0,0 +1,45 @@
+diff --git a/gribapi/bindings.py b/gribapi/bindings.py
+index 91f6d6a..2504873 100644
+--- a/gribapi/bindings.py
++++ b/gribapi/bindings.py
+@@ -15,8 +15,10 @@
+ #
+ 
+ from __future__ import absolute_import, division, print_function, unicode_literals
++from pathlib import Path
+ 
+ import logging
++import os
+ import pkgutil
+ 
+ import cffi
+@@ -25,14 +27,10 @@ __version__ = "1.6.0"
+ 
+ LOG = logging.getLogger(__name__)
+ 
+-try:
+-    import ecmwflibs as findlibs
+-except ImportError:
+-    import findlibs
++definitions_path = str(Path(__file__).parent / "definitions")
++os.environ["ECCODES_DEFINITION_PATH"] = definitions_path
+ 
+-library_path = findlibs.find("eccodes")
+-if library_path is None:
+-    raise RuntimeError("Cannot find the ecCodes library")
++library_path = str(Path(__file__).parent / "libeccodes.so")
+ 
+ # default encoding for ecCodes strings
+ ENC = "ascii"
+diff --git a/setup.py b/setup.py
+index 5df68df..d58dd3a 100644
+--- a/setup.py
++++ b/setup.py
+@@ -55,6 +55,7 @@ setuptools.setup(
+     url="https://github.com/ecmwf/eccodes-python",
+     packages=setuptools.find_packages(),
+     include_package_data=True,
++    package_data={'gribapi': ['libeccodes.so', "definitions/*", "definitions/**/*"]},
+     install_requires=install_requires,
+     tests_require=[
+         "pytest",
diff --git a/packages/executing/meta.yaml b/packages/executing/meta.yaml
new file mode 100644
index 00000000..b8d8fae1
--- /dev/null
+++ b/packages/executing/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: executing
+  version: 2.0.1
+  top-level:
+    - executing
+source:
+  url: https://files.pythonhosted.org/packages/80/03/6ea8b1b2a5ab40a7a60dc464d3daa7aa546e0a74d74a9f8ff551ea7905db/executing-2.0.1-py2.py3-none-any.whl
+  sha256: eac49ca94516ccc753f9fb5ce82603156e590b27525a8bc32cce8ae302eb61bc
+about:
+  home: https://github.com/alexmojaki/executing
+  PyPI: https://pypi.org/project/executing
+  summary: Get the currently executing AST node of a frame, and other information
+  license: MIT
diff --git a/packages/fcpy/meta.yaml b/packages/fcpy/meta.yaml
new file mode 100644
index 00000000..54d6908a
--- /dev/null
+++ b/packages/fcpy/meta.yaml
@@ -0,0 +1,38 @@
+package:
+  name: fcpy
+  version: 0.2.0
+  top-level:
+    - fcpy
+source:
+  path: fcpy
+test:
+  imports:
+    - fcpy
+requirements:
+  run:
+    - Cartopy
+    - cfgrib  # only for pre-loading
+    - cmcrameri  # only for pre-loading
+    - cycler
+    - dask
+    - h5netcdf  # only for pre-loading
+    - ipyfilite
+    - ipyloglite
+    - lzma  # only for pre-loading
+    - matplotlib
+    - MetPy  # only for pre-loading
+    - netcdf4  # only for pre-loading
+    - numcodecs
+    - numpy
+    - pandas
+    - pyodide-http
+    - pysz
+    - scikit-image
+    - xarray
+    - zarr
+    - zfpy  # only for pre-loading
+
+about:
+  home: https://github.com/ecmwf-lab/field-compression
+  summary: ECMWF Field Compression Laboratory
+  license: Apache-2.0
diff --git a/packages/field-compression-benchmark/meta.yaml b/packages/field-compression-benchmark/meta.yaml
new file mode 100644
index 00000000..b6f0c9ee
--- /dev/null
+++ b/packages/field-compression-benchmark/meta.yaml
@@ -0,0 +1,49 @@
+package:
+  name: field-compression-benchmark
+  version: 0.0.2
+  top-level:
+    - fcbench
+source:
+  path: ./field-compression-benchmark
+build:
+  script: |
+    # Set up a more modern nightly toolchain with support for emscripten and wasi
+    rm rust-toolchain
+    rustup default nightly-2024-02-03
+    rustup target add wasm32-unknown-emscripten --toolchain nightly-2024-02-03
+    rustup target add wasm32-unknown-unknown --toolchain nightly-2024-02-03
+    rustup target add wasm32-wasi --toolchain nightly-2024-02-03
+    rustup component add rust-src --toolchain nightly-2024-02-03
+
+    # For some reason, the .cargo/config is not respected during building
+    export RUSTFLAGS="--cfg uuid_unstable"
+
+    # Export the cmake inside Docker to circumvent Pyodide's wrapper
+    export CMAKE_NOCROSS=$(which cmake)
+  cross-script:
+    export CMAKE=$CMAKE_NOCROSS
+    unset CMAKE_TOOLCHAIN_FILE
+requirements:
+  executable:
+    - rustup
+  run:
+    - cfgrib  # 0.9.10.4
+    - dask  # 2024.2.1
+    # FIXME: build matplotlib v3.4.3
+    - matplotlib  # ~~3.4.3~~ 3.5.2
+    - netcdf4  # 1.6.5
+    - numcodecs  # 0.12.1
+    - numpy  # 1.26.4
+    - pint  # 0.23
+    - proplot  # 0.9.7
+    - xarray  # 2023.12.0
+    - xeofs  # 2.3.1
+    - xhistogram  # 0.3.2
+    - zarr  # 2.17.0
+about:
+  home: https://github.com/juntyr/field-compression-benchmark
+  summary:
+    The suite compares the performance of various data compression methods with
+    different settings across a variety of variables and their derivatives from
+    different GRIB, NetCDF, or Zarr datasets.
+  license: MIT OR Apache-2.0
diff --git a/packages/findlibs/meta.yaml b/packages/findlibs/meta.yaml
new file mode 100644
index 00000000..b4213bfc
--- /dev/null
+++ b/packages/findlibs/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: findlibs
+  version: 0.0.5
+  top-level:
+    - findlibs
+source:
+  url: https://files.pythonhosted.org/packages/ae/be/6c72ef9d990cd25fe3dd97ebe9d77a859f7d27b7273e62ad750846d207ee/findlibs-0.0.5.tar.gz
+  sha256: 7a801571e999d0ee83f9b92cbb598c21f861ee26ca9dba74cea8958ba4335e7e
+about:
+  home: https://github.com/ecmwf/findlibs
+  PyPI: https://pypi.org/project/findlibs
+  summary: A packages to search for shared libraries on various platforms
+  license: Apache License Version 2.0
diff --git a/packages/fsspec/meta.yaml b/packages/fsspec/meta.yaml
index 3572b48d..fa6c9b9c 100644
--- a/packages/fsspec/meta.yaml
+++ b/packages/fsspec/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: fsspec
-  version: 2023.6.0
+  version: 2024.2.0
   top-level:
     - fsspec
 source:
-  url: https://files.pythonhosted.org/packages/e3/bd/4c0a4619494188a9db5d77e2100ab7d544a42e76b2447869d8e124e981d8/fsspec-2023.6.0-py3-none-any.whl
-  sha256: 1cbad1faef3e391fba6dc005ae9b5bdcbf43005c9167ce78c915549c352c869a
+  url: https://files.pythonhosted.org/packages/ad/30/2281c062222dc39328843bd1ddd30ff3005ef8e30b2fd09c4d2792766061/fsspec-2024.2.0-py3-none-any.whl
+  sha256: 817f969556fa5916bc682e02ca2045f96ff7f586d45110fcb76022063ad2c7d8
 about:
   home: http://github.com/fsspec/filesystem_spec
   PyPI: https://pypi.org/project/fsspec
diff --git a/packages/h5netcdf/meta.yaml b/packages/h5netcdf/meta.yaml
new file mode 100644
index 00000000..59d3abbf
--- /dev/null
+++ b/packages/h5netcdf/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: h5netcdf
+  version: 1.3.0
+  top-level:
+    - h5netcdf
+requirements:
+  run:
+    - h5py
+    - packaging
+source:
+  url: https://files.pythonhosted.org/packages/68/2d/63851081b19d1ccf245091255797cb358c53c886609b5056da5457f7dbbf/h5netcdf-1.3.0-py3-none-any.whl
+  sha256: f2df69dcd3665dc9c4d43eb6529dedd113b2508090d12ac973573305a8406465
+about:
+  home: "https://github.com/h5netcdf/h5netcdf"
+  PyPI: https://pypi.org/project/h5netcdf
+  summary: netCDF4 via h5py
+  license: BSD-3-Clause
diff --git a/packages/h5py/meta.yaml b/packages/h5py/meta.yaml
index 3e67ba26..0e4c7b3c 100644
--- a/packages/h5py/meta.yaml
+++ b/packages/h5py/meta.yaml
@@ -1,14 +1,19 @@
 package:
   name: h5py
-  version: 3.7.0
+  version: 3.10.0
   top-level:
     - h5py
 source:
-  url: https://files.pythonhosted.org/packages/c5/40/7cf58e6230f0e76699f011c6d293dd47755997709a303a4e644823f3a753/h5py-3.7.0.tar.gz
-  sha256: 3fcf37884383c5da64846ab510190720027dca0768def34dd8dcb659dbe5cbf3
+  url: https://files.pythonhosted.org/packages/37/fc/0b1825077a1c4c79a13984c59997e4b36702962df0bca420698f77b70b10/h5py-3.10.0.tar.gz
+  sha256: d93adc48ceeb33347eb24a634fb787efc7ae4644e6ea4ba733d099605045c049
   patches:
     - patches/0001-Fix-incompatible-pointer-type.patch
     - patches/configure.patch
+about:
+  home: ""
+  PyPI: https://pypi.org/project/h5py
+  summary: Read and write HDF5 files from Python
+  license: BSD-3-Clause
 
 requirements:
   run:
@@ -22,5 +27,5 @@ build:
   script: |
     export HDF5_MPI=OFF
     export H5PY_SETUP_REQUIRES="0"
-    export HDF5_VERSION=1.12.1
+    export HDF5_VERSION=1.14.3
     export HDF5_DIR=${WASM_LIBRARY_DIR}
diff --git a/packages/h5py/patches/0001-Fix-incompatible-pointer-type.patch b/packages/h5py/patches/0001-Fix-incompatible-pointer-type.patch
index f52cd8e5..00351e83 100644
--- a/packages/h5py/patches/0001-Fix-incompatible-pointer-type.patch
+++ b/packages/h5py/patches/0001-Fix-incompatible-pointer-type.patch
@@ -3,37 +3,18 @@ From: Gyeongjae Choi <def6488@gmail.com>
 Date: Fri, 2 Sep 2022 07:54:44 +0000
 Subject: [PATCH] Fix incompatible pointer type
 
+
+Removed hunks upstreamed in 3.10.0
+
 ---
  h5py/_errors.pxd | 2 +-
  h5py/_errors.pyx | 6 +++---
  2 files changed, 4 insertions(+), 4 deletions(-)
 
-diff --git a/h5py/_errors.pxd b/h5py/_errors.pxd
-index 13b299e2..e7791a6b 100644
---- a/h5py/_errors.pxd
-+++ b/h5py/_errors.pxd
-@@ -412,7 +412,7 @@ cdef extern from "hdf5.h":
- 
-     herr_t    H5Eprint(hid_t estack_id, void *stream)
- 
--    ctypedef herr_t (*H5E_walk_t)(int n, H5E_error_t *err_desc, void* client_data)
-+    ctypedef herr_t (*H5E_walk_t)(unsigned int n, const H5E_error_t *err_desc, void* client_data)
-     herr_t    H5Ewalk(hid_t estack_id, H5E_direction_t direction, H5E_walk_t func, void* client_data)
- 
- # --- Functions for managing the HDF5 error callback mechanism ---
 diff --git a/h5py/_errors.pyx b/h5py/_errors.pyx
 index 612052fb..dabbc632 100644
 --- a/h5py/_errors.pyx
 +++ b/h5py/_errors.pyx
-@@ -94,7 +94,7 @@ cdef struct err_data_t:
-     H5E_error_t err
-     int n
- 
--cdef herr_t walk_cb(int n, H5E_error_t *desc, void *e) nogil:
-+cdef herr_t walk_cb(unsigned int n, const H5E_error_t *desc, void *e) nogil:
- 
-     cdef err_data_t *ee = <err_data_t*>e
- 
 @@ -120,7 +120,7 @@ cdef int set_exception() except -1:
  
      err.n = -1
diff --git a/packages/idna/meta.yaml b/packages/idna/meta.yaml
index 0fcf8f57..e74aaa1a 100644
--- a/packages/idna/meta.yaml
+++ b/packages/idna/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: idna
-  version: "3.4"
+  version: "3.6"
   top-level:
     - idna
 source:
-  url: https://files.pythonhosted.org/packages/fc/34/3030de6f1370931b9dbb4dad48f6ab1015ab1d32447850b9fc94e60097be/idna-3.4-py3-none-any.whl
-  sha256: 90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2
+  url: https://files.pythonhosted.org/packages/c2/e7/a82b05cf63a603df6e68d59ae6a68bf5064484a0718ea5033660af4b54a9/idna-3.6-py3-none-any.whl
+  sha256: c05567e9c24a6b9faaa835c4821bad0590fbb9d5779e7caa6e1cc4978e7eb24f
 about:
   home: https://github.com/kjd/idna
   PyPI: https://pypi.org/project/idna
diff --git a/packages/importlib_metadata/meta.yaml b/packages/importlib_metadata/meta.yaml
new file mode 100644
index 00000000..7453bee4
--- /dev/null
+++ b/packages/importlib_metadata/meta.yaml
@@ -0,0 +1,16 @@
+package:
+  name: importlib_metadata
+  version: 7.0.1
+  top-level:
+    - importlib_metadata
+source:
+  url: https://files.pythonhosted.org/packages/c0/8b/d8427f023c081a8303e6ac7209c16e6878f2765d5b59667f3903fbcfd365/importlib_metadata-7.0.1-py3-none-any.whl
+  sha256: 4805911c3a4ec7c3966410053e9ec6a1fecd629117df5adee56dfc9432a1081e
+requirements:
+  run:
+    - zipp
+about:
+  home: https://github.com/python/importlib_metadata
+  PyPI: https://pypi.org/project/importlib_metadata
+  summary: Read metadata from Python packages
+  license: "Apache Software License"
diff --git a/packages/ipyfilite/meta.yaml b/packages/ipyfilite/meta.yaml
new file mode 100644
index 00000000..2618f15a
--- /dev/null
+++ b/packages/ipyfilite/meta.yaml
@@ -0,0 +1,19 @@
+package:
+  name: ipyfilite
+  version: 0.1.27
+  top-level:
+    - ipyfilite
+source:
+  url: https://files.pythonhosted.org/packages/9e/6d/6fbfe3cf613507188327710775ef193312869c348d7c2001407eff67b712/ipyfilite-0.1.27-py3-none-any.whl
+  sha256: d12a003a0e366fabeb236e7b7e9beefe7051a962d617cded60f59e445a88a35c
+requirements:
+  run:
+    - ipywidgets
+about:
+  home: https://github.com/juntyr/ipyfilite
+  PyPI: https://pypi.org/project/ipyfilite
+  summary:
+    File upload widget specifically for Pyodide kernels running in JupyterLite.
+    Uploaded files are not loaded into memory but mounted as read-only files in a
+    new WORKERFS.
+  license: BSD 3-Clause License
diff --git a/packages/ipyloglite/meta.yaml b/packages/ipyloglite/meta.yaml
new file mode 100644
index 00000000..559208e3
--- /dev/null
+++ b/packages/ipyloglite/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: ipyloglite
+  version: 0.0.0
+  top-level:
+    - ipyloglite
+source:
+  url: https://files.pythonhosted.org/packages/4d/0f/244966385120ce75d9d6f01e324820a366e8b83797e7b10e8aa519376146/ipyloglite-0.0.0-py3-none-any.whl
+  sha256: f3f1365dce45ce09ea2eb3c0e0dbaf392b21a8659b6bfaaf90f5a2fc620491e0
+about:
+  home: https://github.com/juntyr/ipyloglite
+  PyPI: https://pypi.org/project/ipyloglite
+  summary: Forward console.log and friends to cell outputs in JupyterLite.
+  license: MIT OR Apache-2.0
diff --git a/packages/ipython/meta.yaml b/packages/ipython/meta.yaml
new file mode 100644
index 00000000..64f0418e
--- /dev/null
+++ b/packages/ipython/meta.yaml
@@ -0,0 +1,23 @@
+package:
+  name: ipython
+  version: 8.22.1
+  top-level:
+    - IPython
+source:
+  url: https://files.pythonhosted.org/packages/11/3e/956d40991c152010d71b38b1a9763edc8fe5944d360e1c256fae60cb9165/ipython-8.22.1-py3-none-any.whl
+  sha256: 869335e8cded62ffb6fac8928e5287a05433d6462e3ebaac25f4216474dd6bc4
+requirements:
+  run:
+    - comm
+    - decorator
+    - jedi
+    - matplotlib-inline
+    - prompt_toolkit
+    - Pygments
+    - stack_data
+    - traitlets
+about:
+  home: "https://ipython.org/"
+  PyPI: https://pypi.org/project/ipython
+  summary: "IPython: Productive Interactive Computing"
+  license: BSD-3-Clause
diff --git a/packages/ipywidgets/meta.yaml b/packages/ipywidgets/meta.yaml
new file mode 100644
index 00000000..f4e47d07
--- /dev/null
+++ b/packages/ipywidgets/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: ipywidgets
+  version: 8.0.6
+  top-level:
+    - ipywidgets
+source:
+  url: https://files.pythonhosted.org/packages/50/7d/2c8b7bba2b1c2b5d1299f22fa7853f09b573c84e63b62870c13a6ec11990/ipywidgets-8.0.6-py3-none-any.whl
+  sha256: a60bf8d2528997e05ac83fd19ea2fbe65f2e79fbe1b2b35779bdfc46c2941dcc
+requirements:
+  run:
+    - widgetsnbextension
+    - jupyterlab_widgets
+about:
+  home: http://jupyter.org
+  PyPI: https://pypi.org/project/ipywidgets
+  summary: Jupyter interactive widgets
+  license: BSD 3-Clause License
diff --git a/packages/jupyterlab_widgets/meta.yaml b/packages/jupyterlab_widgets/meta.yaml
new file mode 100644
index 00000000..f8920c6c
--- /dev/null
+++ b/packages/jupyterlab_widgets/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: jupyterlab_widgets
+  version: 3.0.7
+  top-level:
+    - jupyterlab_widgets
+source:
+  url: https://files.pythonhosted.org/packages/46/98/e7ce879b7b5d4871b80e291be967d22e5e66fa43474c476a95fe6231f50d/jupyterlab_widgets-3.0.7-py3-none-any.whl
+  sha256: c73f8370338ec19f1bec47254752d6505b03601cbd5a67e6a0b184532f73a459
+about:
+  home: https://github.com/jupyter-widgets/ipywidgets
+  PyPI: https://pypi.org/project/jupyterlab_widgets
+  summary: Jupyter interactive widgets for JupyterLab
+  license: BSD-3-Clause
diff --git a/packages/kiwisolver/meta.yaml b/packages/kiwisolver/meta.yaml
index 7069d169..f05036af 100644
--- a/packages/kiwisolver/meta.yaml
+++ b/packages/kiwisolver/meta.yaml
@@ -1,8 +1,8 @@
 package:
   name: kiwisolver
-  version: 1.4.4
+  version: 1.4.5
   top-level:
     - kiwisolver
 source:
-  sha256: d41997519fcba4a1e46eb4a2fe31bc12f0ff957b2b81bac28db24744f333e955
-  url: https://files.pythonhosted.org/packages/5f/5c/272a7dd49a1914f35cd8d6d9f386defa8b047f6fbd06badd6b77b3ba24e7/kiwisolver-1.4.4.tar.gz
+  sha256: e57e563a57fb22a142da34f38acc2fc1a5c864bc29ca1517a88abc963e60d6ec
+  url: https://files.pythonhosted.org/packages/b9/2d/226779e405724344fc678fcc025b812587617ea1a48b9442628b688e85ea/kiwisolver-1.4.5.tar.gz
diff --git a/packages/libSZ3c/meta.yaml b/packages/libSZ3c/meta.yaml
new file mode 100644
index 00000000..26e783d3
--- /dev/null
+++ b/packages/libSZ3c/meta.yaml
@@ -0,0 +1,31 @@
+package:
+  name: libSZ3c
+  version: 3.1.7
+source:
+  url: https://github.com/szcompressor/SZ3/tarball/1e1dc10
+  sha256: 5873e589f2e7236c9ee83bd2ace392bec6f04a4bc1fd93feade0d62018344857
+  extract_dir: szcompressor-SZ3-1e1dc10
+  patches:
+    # Adapted from https://github.com/skarupke/flat_hash_map/pull/18
+    - patches/0001-skahash-32-bit.patch
+requirements:
+  host:
+    - numpy
+
+build:
+  type: shared_library
+  script: |
+    mkdir -p build
+
+    cd build && \
+      emcmake cmake ../ \
+        -DCMAKE_INSTALL_PREFIX=$WASM_LIBRARY_DIR \
+        -DCMAKE_BUILD_TYPE=Release;
+    
+    emmake make -j ${PYODIDE_JOBS:-3};
+    emmake make install;
+
+about:
+  home: https://github.com/szcompressor/SZ3
+  summary: "SZ3: A Modular Error-bounded Lossy Compression Framework for Scientific Datasets"
+  license: BSD-3-Clause
diff --git a/packages/libSZ3c/patches/0001-skahash-32-bit.patch b/packages/libSZ3c/patches/0001-skahash-32-bit.patch
new file mode 100644
index 00000000..464a4be4
--- /dev/null
+++ b/packages/libSZ3c/patches/0001-skahash-32-bit.patch
@@ -0,0 +1,375 @@
+diff --git a/include/SZ3/utils/ska_hash/bytell_hash_map.hpp b/include/SZ3/utils/ska_hash/bytell_hash_map.hpp
+index 9c9a246..47ac512 100644
+--- a/include/SZ3/utils/ska_hash/bytell_hash_map.hpp
++++ b/include/SZ3/utils/ska_hash/bytell_hash_map.hpp
+@@ -41,7 +41,14 @@ struct sherwood_v8_constants
+         return metadata & bits_for_distance;
+     }
+ 
+-    static constexpr int num_jump_distances = 126;
++    static constexpr int num_jump_distances =
++#ifdef ENV64BIT
++    126
++#else // if 32 bits
++	100
++#endif
++	;
++
+     // jump distances chosen like this:
+     // 1. pick the first 16 integers to promote staying in the same block
+     // 2. add the next 66 triangular numbers to get even jumps when
+@@ -61,7 +68,11 @@ struct sherwood_v8_constants
+ 
+         3741, 8385, 18915, 42486, 95703, 215496, 485605, 1091503, 2456436,
+         5529475, 12437578, 27986421, 62972253, 141700195, 318819126, 717314626,
+-        1614000520, 3631437253, 8170829695, 18384318876, 41364501751,
++        1614000520, 3631437253,
++
++#ifdef ENV64BIT
++
++		8170829695, 18384318876, 41364501751,
+         93070021080, 209407709220, 471167588430, 1060127437995, 2385287281530,
+         5366895564381, 12075513791265, 27169907873235, 61132301007778,
+         137547673121001, 309482258302503, 696335090510256, 1566753939653640,
+@@ -69,6 +80,7 @@ struct sherwood_v8_constants
+         40154190394120111, 90346928493040500, 203280588949935750,
+         457381324898247375, 1029107980662394500, 2315492957028380766,
+         5209859150892887590,
++#endif
+     };
+ };
+ template<typename T>
+diff --git a/include/SZ3/utils/ska_hash/flat_hash_map.hpp b/include/SZ3/utils/ska_hash/flat_hash_map.hpp
+index a8723ee..41e917d 100644
+--- a/include/SZ3/utils/ska_hash/flat_hash_map.hpp
++++ b/include/SZ3/utils/ska_hash/flat_hash_map.hpp
+@@ -4,6 +4,9 @@
+ 
+ #pragma once
+ 
++#define ENV32BIT
++// #define ENV64BIT
++
+ #include <cstdint>
+ #include <cstddef>
+ #include <functional>
+@@ -207,6 +210,7 @@ struct sherwood_v3_entry
+ 
+ inline int8_t log2(size_t value)
+ {
++#ifdef ENV64BIT
+     static constexpr int8_t table[64] =
+     {
+         63,  0, 58,  1, 59, 47, 53,  2,
+@@ -225,6 +229,23 @@ inline int8_t log2(size_t value)
+     value |= value >> 16;
+     value |= value >> 32;
+     return table[((value - (value >> 1)) * 0x07EDD5E59A4E28C2) >> 58];
++#endif
++#ifdef ENV32BIT
++    static constexpr int8_t table[32] =
++    {
++         0,  9,  1, 10, 13, 21,  2, 29,
++        11, 14, 16, 18, 22, 25,  3, 30,
++         8, 12, 20, 28, 15, 17, 24,  7,
++        19, 27, 23,  6, 26,  5,  4, 31
++    };
++
++    value |= value >> 1;
++    value |= value >> 2;
++    value |= value >> 4;
++    value |= value >> 8;
++    value |= value >> 16;
++    return table[(value*0x07C4ACDD) >> 27];
++#endif
+ }
+ 
+ template<typename T, bool>
+@@ -258,7 +279,9 @@ inline size_t next_power_of_two(size_t i)
+     i |= i >> 4;
+     i |= i >> 8;
+     i |= i >> 16;
++#ifdef ENV64BIT
+     i |= i >> 32;
++#endif
+     ++i;
+     return i;
+ }
+@@ -929,97 +952,99 @@ private:
+ 
+ struct prime_number_hash_policy
+ {
+-    static size_t mod0(size_t) { return 0llu; }
+-    static size_t mod2(size_t hash) { return hash % 2llu; }
+-    static size_t mod3(size_t hash) { return hash % 3llu; }
+-    static size_t mod5(size_t hash) { return hash % 5llu; }
+-    static size_t mod7(size_t hash) { return hash % 7llu; }
+-    static size_t mod11(size_t hash) { return hash % 11llu; }
+-    static size_t mod13(size_t hash) { return hash % 13llu; }
+-    static size_t mod17(size_t hash) { return hash % 17llu; }
+-    static size_t mod23(size_t hash) { return hash % 23llu; }
+-    static size_t mod29(size_t hash) { return hash % 29llu; }
+-    static size_t mod37(size_t hash) { return hash % 37llu; }
+-    static size_t mod47(size_t hash) { return hash % 47llu; }
+-    static size_t mod59(size_t hash) { return hash % 59llu; }
+-    static size_t mod73(size_t hash) { return hash % 73llu; }
+-    static size_t mod97(size_t hash) { return hash % 97llu; }
+-    static size_t mod127(size_t hash) { return hash % 127llu; }
+-    static size_t mod151(size_t hash) { return hash % 151llu; }
+-    static size_t mod197(size_t hash) { return hash % 197llu; }
+-    static size_t mod251(size_t hash) { return hash % 251llu; }
+-    static size_t mod313(size_t hash) { return hash % 313llu; }
+-    static size_t mod397(size_t hash) { return hash % 397llu; }
+-    static size_t mod499(size_t hash) { return hash % 499llu; }
+-    static size_t mod631(size_t hash) { return hash % 631llu; }
+-    static size_t mod797(size_t hash) { return hash % 797llu; }
+-    static size_t mod1009(size_t hash) { return hash % 1009llu; }
+-    static size_t mod1259(size_t hash) { return hash % 1259llu; }
+-    static size_t mod1597(size_t hash) { return hash % 1597llu; }
+-    static size_t mod2011(size_t hash) { return hash % 2011llu; }
+-    static size_t mod2539(size_t hash) { return hash % 2539llu; }
+-    static size_t mod3203(size_t hash) { return hash % 3203llu; }
+-    static size_t mod4027(size_t hash) { return hash % 4027llu; }
+-    static size_t mod5087(size_t hash) { return hash % 5087llu; }
+-    static size_t mod6421(size_t hash) { return hash % 6421llu; }
+-    static size_t mod8089(size_t hash) { return hash % 8089llu; }
+-    static size_t mod10193(size_t hash) { return hash % 10193llu; }
+-    static size_t mod12853(size_t hash) { return hash % 12853llu; }
+-    static size_t mod16193(size_t hash) { return hash % 16193llu; }
+-    static size_t mod20399(size_t hash) { return hash % 20399llu; }
+-    static size_t mod25717(size_t hash) { return hash % 25717llu; }
+-    static size_t mod32401(size_t hash) { return hash % 32401llu; }
+-    static size_t mod40823(size_t hash) { return hash % 40823llu; }
+-    static size_t mod51437(size_t hash) { return hash % 51437llu; }
+-    static size_t mod64811(size_t hash) { return hash % 64811llu; }
+-    static size_t mod81649(size_t hash) { return hash % 81649llu; }
+-    static size_t mod102877(size_t hash) { return hash % 102877llu; }
+-    static size_t mod129607(size_t hash) { return hash % 129607llu; }
+-    static size_t mod163307(size_t hash) { return hash % 163307llu; }
+-    static size_t mod205759(size_t hash) { return hash % 205759llu; }
+-    static size_t mod259229(size_t hash) { return hash % 259229llu; }
+-    static size_t mod326617(size_t hash) { return hash % 326617llu; }
+-    static size_t mod411527(size_t hash) { return hash % 411527llu; }
+-    static size_t mod518509(size_t hash) { return hash % 518509llu; }
+-    static size_t mod653267(size_t hash) { return hash % 653267llu; }
+-    static size_t mod823117(size_t hash) { return hash % 823117llu; }
+-    static size_t mod1037059(size_t hash) { return hash % 1037059llu; }
+-    static size_t mod1306601(size_t hash) { return hash % 1306601llu; }
+-    static size_t mod1646237(size_t hash) { return hash % 1646237llu; }
+-    static size_t mod2074129(size_t hash) { return hash % 2074129llu; }
+-    static size_t mod2613229(size_t hash) { return hash % 2613229llu; }
+-    static size_t mod3292489(size_t hash) { return hash % 3292489llu; }
+-    static size_t mod4148279(size_t hash) { return hash % 4148279llu; }
+-    static size_t mod5226491(size_t hash) { return hash % 5226491llu; }
+-    static size_t mod6584983(size_t hash) { return hash % 6584983llu; }
+-    static size_t mod8296553(size_t hash) { return hash % 8296553llu; }
+-    static size_t mod10453007(size_t hash) { return hash % 10453007llu; }
+-    static size_t mod13169977(size_t hash) { return hash % 13169977llu; }
+-    static size_t mod16593127(size_t hash) { return hash % 16593127llu; }
+-    static size_t mod20906033(size_t hash) { return hash % 20906033llu; }
+-    static size_t mod26339969(size_t hash) { return hash % 26339969llu; }
+-    static size_t mod33186281(size_t hash) { return hash % 33186281llu; }
+-    static size_t mod41812097(size_t hash) { return hash % 41812097llu; }
+-    static size_t mod52679969(size_t hash) { return hash % 52679969llu; }
+-    static size_t mod66372617(size_t hash) { return hash % 66372617llu; }
+-    static size_t mod83624237(size_t hash) { return hash % 83624237llu; }
+-    static size_t mod105359939(size_t hash) { return hash % 105359939llu; }
+-    static size_t mod132745199(size_t hash) { return hash % 132745199llu; }
+-    static size_t mod167248483(size_t hash) { return hash % 167248483llu; }
+-    static size_t mod210719881(size_t hash) { return hash % 210719881llu; }
+-    static size_t mod265490441(size_t hash) { return hash % 265490441llu; }
+-    static size_t mod334496971(size_t hash) { return hash % 334496971llu; }
+-    static size_t mod421439783(size_t hash) { return hash % 421439783llu; }
+-    static size_t mod530980861(size_t hash) { return hash % 530980861llu; }
+-    static size_t mod668993977(size_t hash) { return hash % 668993977llu; }
+-    static size_t mod842879579(size_t hash) { return hash % 842879579llu; }
+-    static size_t mod1061961721(size_t hash) { return hash % 1061961721llu; }
+-    static size_t mod1337987929(size_t hash) { return hash % 1337987929llu; }
+-    static size_t mod1685759167(size_t hash) { return hash % 1685759167llu; }
+-    static size_t mod2123923447(size_t hash) { return hash % 2123923447llu; }
+-    static size_t mod2675975881(size_t hash) { return hash % 2675975881llu; }
+-    static size_t mod3371518343(size_t hash) { return hash % 3371518343llu; }
+-    static size_t mod4247846927(size_t hash) { return hash % 4247846927llu; }
++    static size_t mod0(size_t) { return 0u; }
++    static size_t mod2(size_t hash) { return hash % 2u; }
++    static size_t mod3(size_t hash) { return hash % 3u; }
++    static size_t mod5(size_t hash) { return hash % 5u; }
++    static size_t mod7(size_t hash) { return hash % 7u; }
++    static size_t mod11(size_t hash) { return hash % 11u; }
++    static size_t mod13(size_t hash) { return hash % 13u; }
++    static size_t mod17(size_t hash) { return hash % 17u; }
++    static size_t mod23(size_t hash) { return hash % 23u; }
++    static size_t mod29(size_t hash) { return hash % 29u; }
++    static size_t mod37(size_t hash) { return hash % 37u; }
++    static size_t mod47(size_t hash) { return hash % 47u; }
++    static size_t mod59(size_t hash) { return hash % 59u; }
++    static size_t mod73(size_t hash) { return hash % 73u; }
++    static size_t mod97(size_t hash) { return hash % 97u; }
++    static size_t mod127(size_t hash) { return hash % 127u; }
++    static size_t mod151(size_t hash) { return hash % 151u; }
++    static size_t mod197(size_t hash) { return hash % 197u; }
++    static size_t mod251(size_t hash) { return hash % 251u; }
++    static size_t mod313(size_t hash) { return hash % 313u; }
++    static size_t mod397(size_t hash) { return hash % 397u; }
++    static size_t mod499(size_t hash) { return hash % 499u; }
++    static size_t mod631(size_t hash) { return hash % 631u; }
++    static size_t mod797(size_t hash) { return hash % 797u; }
++    static size_t mod1009(size_t hash) { return hash % 1009u; }
++    static size_t mod1259(size_t hash) { return hash % 1259u; }
++    static size_t mod1597(size_t hash) { return hash % 1597u; }
++    static size_t mod2011(size_t hash) { return hash % 2011u; }
++    static size_t mod2539(size_t hash) { return hash % 2539u; }
++    static size_t mod3203(size_t hash) { return hash % 3203u; }
++    static size_t mod4027(size_t hash) { return hash % 4027u; }
++    static size_t mod5087(size_t hash) { return hash % 5087u; }
++    static size_t mod6421(size_t hash) { return hash % 6421u; }
++    static size_t mod8089(size_t hash) { return hash % 8089u; }
++    static size_t mod10193(size_t hash) { return hash % 10193u; }
++    static size_t mod12853(size_t hash) { return hash % 12853u; }
++    static size_t mod16193(size_t hash) { return hash % 16193u; }
++    static size_t mod20399(size_t hash) { return hash % 20399u; }
++    static size_t mod25717(size_t hash) { return hash % 25717u; }
++    static size_t mod32401(size_t hash) { return hash % 32401u; }
++    static size_t mod40823(size_t hash) { return hash % 40823u; }
++    static size_t mod51437(size_t hash) { return hash % 51437u; }
++    static size_t mod64811(size_t hash) { return hash % 64811u; }
++    static size_t mod81649(size_t hash) { return hash % 81649u; }
++    static size_t mod102877(size_t hash) { return hash % 102877u; }
++    static size_t mod129607(size_t hash) { return hash % 129607u; }
++    static size_t mod163307(size_t hash) { return hash % 163307u; }
++    static size_t mod205759(size_t hash) { return hash % 205759u; }
++    static size_t mod259229(size_t hash) { return hash % 259229u; }
++    static size_t mod326617(size_t hash) { return hash % 326617u; }
++    static size_t mod411527(size_t hash) { return hash % 411527u; }
++    static size_t mod518509(size_t hash) { return hash % 518509u; }
++    static size_t mod653267(size_t hash) { return hash % 653267u; }
++    static size_t mod823117(size_t hash) { return hash % 823117u; }
++    static size_t mod1037059(size_t hash) { return hash % 1037059u; }
++    static size_t mod1306601(size_t hash) { return hash % 1306601u; }
++    static size_t mod1646237(size_t hash) { return hash % 1646237u; }
++    static size_t mod2074129(size_t hash) { return hash % 2074129u; }
++    static size_t mod2613229(size_t hash) { return hash % 2613229u; }
++    static size_t mod3292489(size_t hash) { return hash % 3292489u; }
++    static size_t mod4148279(size_t hash) { return hash % 4148279u; }
++    static size_t mod5226491(size_t hash) { return hash % 5226491u; }
++    static size_t mod6584983(size_t hash) { return hash % 6584983u; }
++    static size_t mod8296553(size_t hash) { return hash % 8296553u; }
++    static size_t mod10453007(size_t hash) { return hash % 10453007u; }
++    static size_t mod13169977(size_t hash) { return hash % 13169977u; }
++    static size_t mod16593127(size_t hash) { return hash % 16593127u; }
++    static size_t mod20906033(size_t hash) { return hash % 20906033u; }
++    static size_t mod26339969(size_t hash) { return hash % 26339969u; }
++    static size_t mod33186281(size_t hash) { return hash % 33186281u; }
++    static size_t mod41812097(size_t hash) { return hash % 41812097u; }
++    static size_t mod52679969(size_t hash) { return hash % 52679969u; }
++    static size_t mod66372617(size_t hash) { return hash % 66372617u; }
++    static size_t mod83624237(size_t hash) { return hash % 83624237u; }
++    static size_t mod105359939(size_t hash) { return hash % 105359939u; }
++    static size_t mod132745199(size_t hash) { return hash % 132745199u; }
++    static size_t mod167248483(size_t hash) { return hash % 167248483u; }
++    static size_t mod210719881(size_t hash) { return hash % 210719881u; }
++    static size_t mod265490441(size_t hash) { return hash % 265490441u; }
++    static size_t mod334496971(size_t hash) { return hash % 334496971u; }
++    static size_t mod421439783(size_t hash) { return hash % 421439783u; }
++    static size_t mod530980861(size_t hash) { return hash % 530980861u; }
++    static size_t mod668993977(size_t hash) { return hash % 668993977u; }
++    static size_t mod842879579(size_t hash) { return hash % 842879579u; }
++    static size_t mod1061961721(size_t hash) { return hash % 1061961721u; }
++    static size_t mod1337987929(size_t hash) { return hash % 1337987929u; }
++    static size_t mod1685759167(size_t hash) { return hash % 1685759167u; }
++    static size_t mod2123923447(size_t hash) { return hash % 2123923447u; }
++    static size_t mod2675975881(size_t hash) { return hash % 2675975881u; }
++    static size_t mod3371518343(size_t hash) { return hash % 3371518343u; }
++    static size_t mod4247846927(size_t hash) { return hash % 4247846927u; }
++
++#ifdef ENV64BIT
+     static size_t mod5351951779(size_t hash) { return hash % 5351951779llu; }
+     static size_t mod6743036717(size_t hash) { return hash % 6743036717llu; }
+     static size_t mod8495693897(size_t hash) { return hash % 8495693897llu; }
+@@ -1116,6 +1141,7 @@ struct prime_number_hash_policy
+     static size_t mod11493228998133068689(size_t hash) { return hash % 11493228998133068689llu; }
+     static size_t mod14480561146010017169(size_t hash) { return hash % 14480561146010017169llu; }
+     static size_t mod18446744073709551557(size_t hash) { return hash % 18446744073709551557llu; }
++#endif
+ 
+     using mod_function = size_t (*)(size_t);
+ 
+@@ -1130,20 +1156,22 @@ struct prime_number_hash_policy
+         // 5. get PrevPrime(2^64) and put it at the end
+         static constexpr const size_t prime_list[] =
+         {
+-            2llu, 3llu, 5llu, 7llu, 11llu, 13llu, 17llu, 23llu, 29llu, 37llu, 47llu,
+-            59llu, 73llu, 97llu, 127llu, 151llu, 197llu, 251llu, 313llu, 397llu,
+-            499llu, 631llu, 797llu, 1009llu, 1259llu, 1597llu, 2011llu, 2539llu,
+-            3203llu, 4027llu, 5087llu, 6421llu, 8089llu, 10193llu, 12853llu, 16193llu,
+-            20399llu, 25717llu, 32401llu, 40823llu, 51437llu, 64811llu, 81649llu,
+-            102877llu, 129607llu, 163307llu, 205759llu, 259229llu, 326617llu,
+-            411527llu, 518509llu, 653267llu, 823117llu, 1037059llu, 1306601llu,
+-            1646237llu, 2074129llu, 2613229llu, 3292489llu, 4148279llu, 5226491llu,
+-            6584983llu, 8296553llu, 10453007llu, 13169977llu, 16593127llu, 20906033llu,
+-            26339969llu, 33186281llu, 41812097llu, 52679969llu, 66372617llu,
+-            83624237llu, 105359939llu, 132745199llu, 167248483llu, 210719881llu,
+-            265490441llu, 334496971llu, 421439783llu, 530980861llu, 668993977llu,
+-            842879579llu, 1061961721llu, 1337987929llu, 1685759167llu, 2123923447llu,
+-            2675975881llu, 3371518343llu, 4247846927llu, 5351951779llu, 6743036717llu,
++            2u, 3u, 5u, 7u, 11u, 13u, 17u, 23u, 29u, 37u, 47u,
++            59u, 73u, 97u, 127u, 151u, 197u, 251u, 313u, 397u,
++            499u, 631u, 797u, 1009u, 1259u, 1597u, 2011u, 2539u,
++            3203u, 4027u, 5087u, 6421u, 8089u, 10193u, 12853u, 16193u,
++            20399u, 25717u, 32401u, 40823u, 51437u, 64811u, 81649u,
++            102877u, 129607u, 163307u, 205759u, 259229u, 326617u,
++            411527u, 518509u, 653267u, 823117u, 1037059u, 1306601u,
++            1646237u, 2074129u, 2613229u, 3292489u, 4148279u, 5226491u,
++            6584983u, 8296553u, 10453007u, 13169977u, 16593127u, 20906033u,
++            26339969u, 33186281u, 41812097u, 52679969u, 66372617u,
++            83624237u, 105359939u, 132745199u, 167248483u, 210719881u,
++            265490441u, 334496971u, 421439783u, 530980861u, 668993977u,
++            842879579u, 1061961721u, 1337987929u, 1685759167u, 2123923447u,
++            2675975881u, 3371518343u, 4247846927u
++#ifdef ENV64BIT
++            , 5351951779llu, 6743036717llu,
+             8495693897llu, 10703903591llu, 13486073473llu, 16991387857llu,
+             21407807219llu, 26972146961llu, 33982775741llu, 42815614441llu,
+             53944293929llu, 67965551447llu, 85631228929llu, 107888587883llu,
+@@ -1172,6 +1200,7 @@ struct prime_number_hash_policy
+             2873307249533267101llu, 3620140286502504283llu, 4561090950536962147llu,
+             5746614499066534157llu, 7240280573005008577llu, 9122181901073924329llu,
+             11493228998133068689llu, 14480561146010017169llu, 18446744073709551557llu
++#endif
+         };
+         static constexpr size_t (* const mod_functions[])(size_t) =
+         {
+@@ -1187,8 +1216,10 @@ struct prime_number_hash_policy
+             &mod41812097, &mod52679969, &mod66372617, &mod83624237, &mod105359939, &mod132745199,
+             &mod167248483, &mod210719881, &mod265490441, &mod334496971, &mod421439783,
+             &mod530980861, &mod668993977, &mod842879579, &mod1061961721, &mod1337987929,
+-            &mod1685759167, &mod2123923447, &mod2675975881, &mod3371518343, &mod4247846927,
+-            &mod5351951779, &mod6743036717, &mod8495693897, &mod10703903591, &mod13486073473,
++            &mod1685759167, &mod2123923447, &mod2675975881, &mod3371518343, &mod4247846927
++
++#ifdef ENV64BIT
++            , &mod5351951779, &mod6743036717, &mod8495693897, &mod10703903591, &mod13486073473,
+             &mod16991387857, &mod21407807219, &mod26972146961, &mod33982775741, &mod42815614441,
+             &mod53944293929, &mod67965551447, &mod85631228929, &mod107888587883, &mod135931102921,
+             &mod171262457903, &mod215777175787, &mod271862205833, &mod342524915839,
+@@ -1214,6 +1245,7 @@ struct prime_number_hash_policy
+             &mod2873307249533267101, &mod3620140286502504283, &mod4561090950536962147,
+             &mod5746614499066534157, &mod7240280573005008577, &mod9122181901073924329,
+             &mod11493228998133068689, &mod14480561146010017169, &mod18446744073709551557
++#endif
+         };
+         const size_t * found = std::lower_bound(std::begin(prime_list), std::end(prime_list) - 1, size);
+         size = *found;
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index 226e381..cea7dec 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -65,7 +65,7 @@ if (GSL_FOUND)
+     target_link_libraries(${PROJECT_NAME} INTERFACE GSL::gsl)
+ endif ()
+ 
+-add_subdirectory(tools/sz3)
++# add_subdirectory(tools/sz3)
+ add_subdirectory(tools/sz3c)
+ 
+ 
diff --git a/packages/libeccodes/meta.yaml b/packages/libeccodes/meta.yaml
new file mode 100644
index 00000000..0d50c4a6
--- /dev/null
+++ b/packages/libeccodes/meta.yaml
@@ -0,0 +1,41 @@
+package:
+  name: libeccodes
+  version: 2.34.1
+
+source:
+  url: https://github.com/ecmwf/eccodes/archive/refs/tags/2.34.1.tar.gz
+  sha256: 256665de709d59a41f38f69513343b7895d4c325ab1fb775e6ac5becbc8a52e7
+  patches:
+    - patches/0001-32bit-support-hack.patch
+
+build:
+  type: shared_library
+  script: |
+    git clone --branch 3.7.0 --depth 1 https://github.com/ecmwf/ecbuild;
+
+    mkdir -p build;
+
+    cd build \
+        && emcmake cmake ../ \
+        -DCMAKE_INSTALL_PREFIX=${WASM_LIBRARY_DIR} \
+        -DBUILD_SHARED_LIBS=ON \
+        -DENABLE_NETCDF=OFF \
+        -DENABLE_JPG=OFF \
+        -DENABLE_PNG=OFF \
+        -DENABLE_AEC=OFF \
+        -DENABLE_FORTRAN=OFF \
+        -DDISABLE_OS_CHECK=ON \
+        -DENABLE_TESTS=OFF \
+        -DENABLE_PRODUCT_GRIB=ON \
+        -DENABLE_PRODUCT_BUFR=ON \
+        -DENABLE_EXAMPLES=OFF \
+        -DENABLE_BUILD_TOOLS=OFF \
+        -DENABLE_INSTALL_ECCODES_DEFINITIONS=ON \
+        -DENABLE_INSTALL_ECCODES_SAMPLES=OFF;
+        #-DCMAKE_C_FLAGS="-s TOTAL_MEMORY=50790400" \
+        #-DCMAKE_CXX_FLAGS="-s TOTAL_MEMORY=50790400";
+
+    emmake make -j ${PYODIDE_JOBS:-3};
+    emmake make -j ${PYODIDE_JOBS:-3} install;
+
+    cp -P ${WASM_LIBRARY_DIR}/lib/libeccodes.so ${DISTDIR}
diff --git a/packages/libeccodes/patches/0001-32bit-support-hack.patch b/packages/libeccodes/patches/0001-32bit-support-hack.patch
new file mode 100644
index 00000000..0d4e2838
--- /dev/null
+++ b/packages/libeccodes/patches/0001-32bit-support-hack.patch
@@ -0,0 +1,86 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index f60682739..45b5624c8 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -66,9 +66,9 @@ ecbuild_debug("ECCODES_LITTLE_ENDIAN=${ECCODES_LITTLE_ENDIAN}")
+ ecbuild_info("Operating system=${CMAKE_SYSTEM} (${EC_OS_BITS} bits)")
+ 
+ # Only support 64 bit operating systems
+-if( NOT EC_OS_BITS EQUAL "64" )
+-    ecbuild_critical( "Operating system ${CMAKE_SYSTEM} (${EC_OS_BITS} bits) -- ecCodes only supports 64 bit platforms" )
+-endif()
++# if( NOT EC_OS_BITS EQUAL "64" )
++#     ecbuild_critical( "Operating system ${CMAKE_SYSTEM} (${EC_OS_BITS} bits) -- ecCodes only supports 64 bit platforms" )
++# endif()
+ 
+ ###############################################################################
+ # some variables/options of this project
+@@ -427,7 +427,7 @@ if( HAVE_BUILD_TOOLS )
+ endif()
+ add_subdirectory( fortran )
+ 
+-add_subdirectory( tests )
++# add_subdirectory( tests )
+ add_subdirectory( examples )
+ add_subdirectory( data )
+ add_subdirectory( samples )
+diff --git a/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc b/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
+index d337dba48..5c888355b 100644
+--- a/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
++++ b/src/grib_accessor_class_data_g1second_order_general_extended_packing.cc
+@@ -184,6 +184,17 @@ grib_accessor_class* grib_accessor_class_data_g1second_order_general_extended_pa
+ #define MAX_NUMBER_OF_GROUPS 65534
+ #define EFDEBUG 0
+ 
++static const size_t nbits[32]={
++    0x1, 0x2, 0x4, 0x8,
++    0x10, 0x20, 0x40, 0x80,
++    0x100, 0x200, 0x400, 0x800,
++    0x1000, 0x2000, 0x4000, 0x8000,
++    0x10000, 0x20000, 0x40000, 0x80000,
++    0x100000, 0x200000, 0x400000, 0x800000,
++    0x1000000, 0x2000000, 0x4000000, 0x8000000,
++    0x10000000, 0x20000000, 0x40000000, 0x80000000,
++};
++/*
+ static const unsigned long nbits[64] = {
+     0x1, 0x2, 0x4, 0x8,
+     0x10, 0x20, 0x40, 0x80,
+@@ -202,6 +213,7 @@ static const unsigned long nbits[64] = {
+     0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
+     0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000
+ };
++*/
+ 
+ static long number_of_bits(grib_handle* h, unsigned long x)
+ {
+diff --git a/src/grib_accessor_class_second_order_bits_per_value.cc b/src/grib_accessor_class_second_order_bits_per_value.cc
+index 74c4b4c05..507fb4f3e 100644
+--- a/src/grib_accessor_class_second_order_bits_per_value.cc
++++ b/src/grib_accessor_class_second_order_bits_per_value.cc
+@@ -111,6 +111,17 @@ grib_accessor_class* grib_accessor_class_second_order_bits_per_value = &_grib_ac
+ 
+ /* END_CLASS_IMP */
+ 
++static const size_t nbits[32]={
++    0x1, 0x2, 0x4, 0x8,
++    0x10, 0x20, 0x40, 0x80,
++    0x100, 0x200, 0x400, 0x800,
++    0x1000, 0x2000, 0x4000, 0x8000,
++    0x10000, 0x20000, 0x40000, 0x80000,
++    0x100000, 0x200000, 0x400000, 0x800000,
++    0x1000000, 0x2000000, 0x4000000, 0x8000000,
++    0x10000000, 0x20000000, 0x40000000, 0x80000000,
++};
++/*
+ static const size_t nbits[64] = {
+     0x1, 0x2, 0x4, 0x8,
+     0x10, 0x20, 0x40, 0x80,
+@@ -129,6 +140,7 @@ static const size_t nbits[64] = {
+     0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
+     0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000
+ };
++*/
+ 
+ static int number_of_bits(size_t x, long* result)
+ {
diff --git a/packages/libf2c/meta.yaml b/packages/libf2c/meta.yaml
index 29b24307..0ae23ca1 100644
--- a/packages/libf2c/meta.yaml
+++ b/packages/libf2c/meta.yaml
@@ -22,6 +22,7 @@ source:
     # In CLAPACK's F2CLIBS/libf2c Makefile, some commands are mistakenly (?) hardcoded
     # instead of using the right variables
     - patches/0006-adjust-ld-ar-ranlib.patch
+    - patches/0007-add-singlecomplex.patch
 
   extras:
     - [extras/make.inc, make.inc]
diff --git a/packages/libf2c/patches/0007-add-singlecomplex.patch b/packages/libf2c/patches/0007-add-singlecomplex.patch
new file mode 100644
index 00000000..982d3065
--- /dev/null
+++ b/packages/libf2c/patches/0007-add-singlecomplex.patch
@@ -0,0 +1,10 @@
+--- a/INCLUDE/f2c.h
++++ b/INCLUDE/f2c.h
+@@ -14,6 +14,7 @@ typedef short int shortint;
+ typedef float real;
+ typedef double doublereal;
+ typedef struct { real r, i; } complex;
++typedef struct { real r, i; } singlecomplex;
+ typedef struct { doublereal r, i; } doublecomplex;
+ typedef long int logical;
+ typedef short int shortlogical;
diff --git a/packages/libhdf5/meta.yaml b/packages/libhdf5/meta.yaml
index 0bdbf223..f7914e3e 100644
--- a/packages/libhdf5/meta.yaml
+++ b/packages/libhdf5/meta.yaml
@@ -1,13 +1,13 @@
 package:
   name: libhdf5
-  version: 1.12.1
+  version: 1.14.3
   tag:
     - library
 source:
-  sha256: e6dde173c2d243551922d23a0387a79961205b018502e6a742acb30b61bc2d5f
-  url: https://github.com/HDFGroup/hdf5/archive/refs/tags/hdf5-1_12_1.tar.gz
-  patches:
-    - patches/0001-Hardcode-float-precision.patch
+  sha256: df5ee33c74d5efb59738075ef96f4201588e1f1eeb233f047ac7fd1072dee1f6
+  url: https://github.com/HDFGroup/hdf5/archive/refs/tags/hdf5-1_14_3.tar.gz
+  # patches:
+  #   - patches/0001-Hardcode-float-precision.patch
 
 requirements:
   host:
diff --git a/packages/libproj/meta.yaml b/packages/libproj/meta.yaml
index b5445efc..6e5e6c66 100644
--- a/packages/libproj/meta.yaml
+++ b/packages/libproj/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: libproj
-  version: 8.2.1
+  version: 9.3.1
   tag:
     - library
 source:
-  sha256: 76ed3d0c3a348a6693dfae535e5658bbfd47f71cb7ff7eb96d9f12f7e068b1cf
-  url: https://download.osgeo.org/proj/proj-8.2.1.tar.gz
+  sha256: b0f919cb9e1f42f803a3e616c2b63a78e4d81ecfaed80978d570d3a5e29d10bc
+  url: https://download.osgeo.org/proj/proj-9.3.1.tar.gz
   patches:
     - patches/0001-stod-empty-zero.patch
 
diff --git a/packages/locket/meta.yaml b/packages/locket/meta.yaml
new file mode 100644
index 00000000..fb798f21
--- /dev/null
+++ b/packages/locket/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: locket
+  version: 1.0.0
+  top-level:
+    - locket
+source:
+  url: https://files.pythonhosted.org/packages/db/bc/83e112abc66cd466c6b83f99118035867cecd41802f8d044638aa78a106e/locket-1.0.0-py2.py3-none-any.whl
+  sha256: b6c819a722f7b6bd955b80781788e4a66a55628b858d347536b7e81325a3a5e3
+about:
+  home: http://github.com/mwilliamson/locket.py
+  PyPI: https://pypi.org/project/locket
+  summary: File-based locks for Python on Linux and Windows
+  license: BSD-2-Clause
diff --git a/packages/matplotlib-inline/meta.yaml b/packages/matplotlib-inline/meta.yaml
new file mode 100644
index 00000000..60dfa71a
--- /dev/null
+++ b/packages/matplotlib-inline/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: matplotlib-inline
+  version: 0.1.6
+  top-level:
+    - matplotlib_inline
+source:
+  url: https://files.pythonhosted.org/packages/f2/51/c34d7a1d528efaae3d8ddb18ef45a41f284eacf9e514523b191b7d0872cc/matplotlib_inline-0.1.6-py3-none-any.whl
+  sha256: f1f41aab5328aa5aaea9b16d083b128102f8712542f819fe7e6a420ff581b311
+requirements:
+  run:
+    - matplotlib
+    - traitlets
+about:
+  home: https://github.com/ipython/matplotlib-inline
+  PyPI: https://pypi.org/project/matplotlib-inline
+  summary: Inline Matplotlib backend for Jupyter
+  license: BSD 3-Clause
diff --git a/packages/msgpack/meta.yaml b/packages/msgpack/meta.yaml
index e156640c..dc9b1d40 100644
--- a/packages/msgpack/meta.yaml
+++ b/packages/msgpack/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: msgpack
-  version: 1.0.5
+  version: 1.0.8
   top-level:
     - msgpack
 source:
-  sha256: c075544284eadc5cddc70f4757331d99dcbc16b2bbd4849d15f8aae4cf36d31c
-  url: https://files.pythonhosted.org/packages/dc/a1/eba11a0d4b764bc62966a565b470f8c6f38242723ba3057e9b5098678c30/msgpack-1.0.5.tar.gz
+  sha256: 95c02b0e27e706e48d0e5426d1710ca78e0f0628d6e89d5b5a5b91a5f12274f3
+  url: https://files.pythonhosted.org/packages/08/4c/17adf86a8fbb02c144c7569dc4919483c01a2ac270307e2d59e1ce394087/msgpack-1.0.8.tar.gz
 about:
   home: https://msgpack.org/
   PyPI: https://pypi.org/project/msgpack
diff --git a/packages/netcdf4/meta.yaml b/packages/netcdf4/meta.yaml
index 043bc6b8..6a7b453d 100644
--- a/packages/netcdf4/meta.yaml
+++ b/packages/netcdf4/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: netcdf4
-  version: 1.6.4
+  version: 1.6.5
   top-level:
     - netCDF4
 source:
-  url: https://files.pythonhosted.org/packages/8f/39/f8c4b2f3a4d78164e9850bb0924e1fd490e0bf8a8366b9b42cd295d7bbee/netCDF4-1.6.4.tar.gz
-  sha256: 66da6542cbc7a6045cd1d979397dfd5a3f6c880c76d52b8f98bb108c82ee8c6e
+  url: https://files.pythonhosted.org/packages/da/f2/b7307966bf174559c80c0bdaaccebe1538efa3aef8e996d18229b01e9760/netCDF4-1.6.5.tar.gz
+  sha256: 824881d0aacfde5bd982d6adedd8574259c85553781e7b83e0ce82b890bfa0ef
 requirements:
   host:
     - libhdf5
@@ -13,9 +13,9 @@ requirements:
   run:
     - numpy
     - packaging
-    - h5py
     - cftime
     - certifi
+    - h5py
 test:
   imports:
     - netCDF4
@@ -24,7 +24,7 @@ build:
   script: |
     export PATH=${WASM_LIBRARY_DIR}/bin:${PATH}
     export HDF5_DIR=${WASM_LIBRARY_DIR}
-    echo ${HDF5_DIR}
+    export HDF5_VERSION=1.14.3
 about:
   home: https://github.com/Unidata/netcdf4-python
   PyPI: https://pypi.org/project/netcdf4
diff --git a/packages/numcodecs/meta.yaml b/packages/numcodecs/meta.yaml
index 66a5e765..0b9a9d14 100644
--- a/packages/numcodecs/meta.yaml
+++ b/packages/numcodecs/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: numcodecs
-  version: 0.11.0
+  version: 0.12.1
   top-level:
     - numcodecs
 source:
-  sha256: 6c058b321de84a1729299b0eae4d652b2e48ea1ca7f9df0da65cb13470e635eb
-  url: https://files.pythonhosted.org/packages/19/0f/006424c07b551a13c773b59a3656beadbaadbcf9df1601e87fcae342618c/numcodecs-0.11.0.tar.gz
+  sha256: 05d91a433733e7eef268d7e80ec226a0232da244289614a8f3826901aec1098e
+  url: https://files.pythonhosted.org/packages/b7/1b/1f1d880e29e719c7c6205065d1afbc91114c0d91935ac419faa43e5e08b0/numcodecs-0.12.1.tar.gz
   patches:
     - patches/fixblosc.patch
     - patches/fixzlib.patch
@@ -13,7 +13,6 @@ build:
   script: |
     export DISABLE_NUMCODECS_SSE2=1
     export DISABLE_NUMCODECS_AVX2=1
-    rm numcodecs/blosc.c
 requirements:
   run:
     - numpy
diff --git a/packages/numcodecs/patches/fixblosc.patch b/packages/numcodecs/patches/fixblosc.patch
index 375baabf..4d06db0a 100644
--- a/packages/numcodecs/patches/fixblosc.patch
+++ b/packages/numcodecs/patches/fixblosc.patch
@@ -1,17 +1,4 @@
 This patch disables multiprocessing and pthread for blosc
-diff --git a/numcodecs/blosc.pyx b/numcodecs/blosc.pyx
-index 3bfdc00..c6521b7 100644
---- a/numcodecs/blosc.pyx
-+++ b/numcodecs/blosc.pyx
-@@ -77,6 +77,8 @@ AUTOBLOCKS = 0
- # synchronization
- try:
-     mutex = multiprocessing.Lock()
-+except ModuleNotFoundError:
-+    mutex = None
- except OSError:
-     mutex = None
- 
 diff --git a/c-blosc/blosc/blosc.h b/c-blosc/blosc/blosc.h
 index 40857d0..8a1e969 100644
 --- a/c-blosc/blosc/blosc.h
diff --git a/packages/numpy/meta.yaml b/packages/numpy/meta.yaml
index ffbecaae..9c3a8fee 100644
--- a/packages/numpy/meta.yaml
+++ b/packages/numpy/meta.yaml
@@ -1,13 +1,13 @@
 package:
   name: numpy
-  version: 1.26.1
+  version: 1.26.4
   tag:
     - min-scipy-stack
   top-level:
     - numpy
 source:
-  url: https://files.pythonhosted.org/packages/78/23/f78fd8311e0f710fe1d065d50b92ce0057fe877b8ed7fd41b28ad6865bfc/numpy-1.26.1.tar.gz
-  sha256: c8c6c72d4a9f831f328efb1312642a1cafafaa88981d9ab76368d50d07d93cbe
+  url: https://files.pythonhosted.org/packages/65/6e/09db70a523a96d25e115e71cc56a6f9031e7b8cd166c1ac8438307c14058/numpy-1.26.4.tar.gz
+  sha256: 2a02aba9ed12e4ac4eb3ea9421c420301a0c6460d9830d74a9df87efa4912010
 
 build:
   # numpy uses vendored meson, so we need to pass the cross file manually
@@ -17,7 +17,6 @@ build:
   # numpy creates numpy/distutils/__pycache__ directory during the build.
   # It breaks our test because there is a .pyc in the directory.
   post: |
-    cd $WHEELDIR
     rm -rf numpy/distutils/__pycache__
   cflags: |
     -Wno-return-type
diff --git a/packages/packaging/meta.yaml b/packages/packaging/meta.yaml
index 50754cd8..16e6337e 100644
--- a/packages/packaging/meta.yaml
+++ b/packages/packaging/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: packaging
-  version: "23.1"
+  version: "23.2"
   top-level:
     - packaging
 source:
-  sha256: a392980d2b6cffa644431898be54b0045151319d1e7ec34f0cfed48767dd334f
-  url: https://files.pythonhosted.org/packages/b9/6c/7c6658d258d7971c5eb0d9b69fa9265879ec9a9158031206d47800ae2213/packaging-23.1.tar.gz
+  sha256: 8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7
+  url: https://files.pythonhosted.org/packages/ec/1a/610693ac4ee14fcdf2d9bf3c493370e4f2ef7ae2e19217d7a237ff42367d/packaging-23.2-py3-none-any.whl
 
 about:
   home: https://github.com/pypa/packaging
diff --git a/packages/pandas/meta.yaml b/packages/pandas/meta.yaml
index 28f6ae0f..736054cb 100644
--- a/packages/pandas/meta.yaml
+++ b/packages/pandas/meta.yaml
@@ -1,13 +1,13 @@
 package:
   name: pandas
-  version: 1.5.3
+  version: 2.2.1
   tag:
     - min-scipy-stack
   top-level:
     - pandas
 source:
-  url: https://files.pythonhosted.org/packages/74/ee/146cab1ff6d575b54ace8a6a5994048380dc94879b0125b25e62edcb9e52/pandas-1.5.3.tar.gz
-  sha256: 74a3fd7e5a7ec052f183273dc7b0acd3a863edf7520f5d3a1765c04ffdb3b0b1
+  url: https://files.pythonhosted.org/packages/3d/59/2afa81b9fb300c90531803c0fd43ff4548074fa3e8d0f747ef63b3b5e77a/pandas-2.2.1.tar.gz
+  sha256: 0ab90f87093c13f3e8fa45b48ba9f39181046e8f3317d3aadb2fffbb1b978572
 build:
   cflags:
     -Werror=implicit-function-declaration -Werror=mismatched-parameter-types
@@ -20,6 +20,7 @@ requirements:
     - numpy
     - python-dateutil
     - pytz
+    - tzdata
 about:
   home: https://pandas.pydata.org
   PyPI: https://pypi.org/project/pandas
diff --git a/packages/partd/meta.yaml b/packages/partd/meta.yaml
new file mode 100644
index 00000000..74ac40fd
--- /dev/null
+++ b/packages/partd/meta.yaml
@@ -0,0 +1,17 @@
+package:
+  name: partd
+  version: 1.4.1
+  top-level:
+    - partd
+source:
+  url: https://files.pythonhosted.org/packages/11/8a/b7a58e208b144a7315208a0dd627e23f5f50b47fa89c2924bb2e9238ecfb/partd-1.4.1-py3-none-any.whl
+  sha256: 27e766663d36c161e2827aa3e28541c992f0b9527d3cca047e13fb3acdb989e6
+requirements:
+  run:
+   - locket
+   - toolz
+about:
+  home: http://github.com/dask/partd/
+  PyPI: https://pypi.org/project/partd
+  summary: Appendable key-value storage
+  license: BSD
diff --git a/packages/patsy/meta.yaml b/packages/patsy/meta.yaml
index 99b141ba..3a813d2a 100644
--- a/packages/patsy/meta.yaml
+++ b/packages/patsy/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: patsy
-  version: 0.5.3
+  version: 0.5.6
   top-level:
     - patsy
 source:
-  url: https://files.pythonhosted.org/packages/2c/93/3b7db0bb8f1143f8ddb84f931719e7a538e3092c6898e5cdf65e1ed44fcb/patsy-0.5.3.tar.gz
-  sha256: bdc18001875e319bc91c812c1eb6a10be4bb13cb81eb763f466179dca3b67277
+  url: https://files.pythonhosted.org/packages/43/f3/1d311a09c34f14f5973bb0bb0dc3a6e007e1eda90b5492d082689936ca51/patsy-0.5.6-py2.py3-none-any.whl
+  sha256: 19056886fd8fa71863fa32f0eb090267f21fb74be00f19f5c70b2e9d76c883c6
 requirements:
   run:
     - numpy
diff --git a/packages/pint/meta.yaml b/packages/pint/meta.yaml
new file mode 100644
index 00000000..f94e353a
--- /dev/null
+++ b/packages/pint/meta.yaml
@@ -0,0 +1,16 @@
+package:
+  name: pint
+  version: "0.23"
+  top-level:
+    - pint
+source:
+  url: https://files.pythonhosted.org/packages/76/1a/096c91c2006648fe28564e5884d59978962afe98de74b1c01bb5913d033f/Pint-0.23-py3-none-any.whl
+  sha256: df79b6b5f1beb7ed0cd55d91a0766fc55f972f757a9364e844958c05e8eb66f9
+requirements:
+  run:
+    - typing-extensions
+about:
+  home: https://github.com/hgrecco/pint
+  PyPI: https://pypi.org/project/pint
+  summary: Physical quantities module
+  license: BSD
diff --git a/packages/platformdirs/meta.yaml b/packages/platformdirs/meta.yaml
new file mode 100644
index 00000000..1e136364
--- /dev/null
+++ b/packages/platformdirs/meta.yaml
@@ -0,0 +1,15 @@
+package:
+  name: platformdirs
+  version: 4.2.0
+  top-level:
+    - platformdirs
+source:
+  url: https://files.pythonhosted.org/packages/55/72/4898c44ee9ea6f43396fbc23d9bfaf3d06e01b83698bdf2e4c919deceb7c/platformdirs-4.2.0-py3-none-any.whl
+  sha256: 0614df2a2f37e1a662acbd8e2b25b92ccf8632929bc6d43467e17fe89c75e068
+about:
+  home: https://github.com/platformdirs/platformdirs
+  PyPI: https://pypi.org/project/platformdirs
+  summary:
+    A small Python package for determining appropriate platform-specific dirs,
+    e.g. a "user data dir".
+  license: MIT
diff --git a/packages/pooch/meta.yaml b/packages/pooch/meta.yaml
new file mode 100644
index 00000000..0888adfc
--- /dev/null
+++ b/packages/pooch/meta.yaml
@@ -0,0 +1,22 @@
+package:
+  name: pooch
+  version: 1.8.1
+  top-level:
+    - pooch
+source:
+  url: https://files.pythonhosted.org/packages/f4/72/8ae0f1ba4ce6a4f6d4d01a60a9fdf690fde188c45c1872b0b4ddb0607ace/pooch-1.8.1-py3-none-any.whl
+  sha256: 6b56611ac320c239faece1ac51a60b25796792599ce5c0b1bb87bf01df55e0a9
+requirements:
+  run:
+    - lzma
+    - platformdirs
+    - packaging
+    - requests
+about:
+  home: https://github.com/fatiando/pooch
+  PyPI: https://pypi.org/project/pooch
+  summary:
+    "Pooch manages your Python library's sample data files: it automatically\
+    \ downloads and stores them in a local directory, with support for versioning\
+    \ and corruption checks."
+  license: BSD 3-Clause License
diff --git a/packages/prompt_toolkit/meta.yaml b/packages/prompt_toolkit/meta.yaml
new file mode 100644
index 00000000..59d776d3
--- /dev/null
+++ b/packages/prompt_toolkit/meta.yaml
@@ -0,0 +1,16 @@
+package:
+  name: prompt_toolkit
+  version: 3.0.43
+  top-level:
+    - prompt_toolkit
+source:
+  url: https://files.pythonhosted.org/packages/ee/fd/ca7bf3869e7caa7a037e23078539467b433a4e01eebd93f77180ab927766/prompt_toolkit-3.0.43-py3-none-any.whl
+  sha256: a11a29cb3bf0a28a387fe5122cdb649816a957cd9261dcedf8c9f1fef33eacf6
+requirements:
+  run:
+    - wcwidth
+about:
+  home: https://github.com/prompt-toolkit/python-prompt-toolkit
+  PyPI: https://pypi.org/project/prompt_toolkit
+  summary: Library for building powerful interactive command lines in Python
+  license: "BSD-3-Clause"
diff --git a/packages/proplot/meta.yaml b/packages/proplot/meta.yaml
new file mode 100644
index 00000000..3465b5b4
--- /dev/null
+++ b/packages/proplot/meta.yaml
@@ -0,0 +1,20 @@
+package:
+  name: proplot
+  version: 0.9.7
+  top-level:
+    - proplot
+source:
+  url: https://files.pythonhosted.org/packages/af/cd/419a7137fe163614414bc8e9abdb1cd12baa12a80dc6930ed3bc60d19c2d/proplot-0.9.7-py3-none-any.whl
+  sha256: e2732cbf7520505a3bb399ef75d762d9645813bc2208deefe7ca2d5c8e4f6fa1
+requirements:
+  run:
+    - matplotlib
+    - numpy
+    - setuptools
+about:
+  home: https://proplot.readthedocs.io
+  PyPI: https://pypi.org/project/proplot
+  summary:
+    A succinct matplotlib wrapper for making beautiful, publication-quality
+    graphics.
+  license: MIT
diff --git a/packages/pure_eval/meta.yaml b/packages/pure_eval/meta.yaml
new file mode 100644
index 00000000..692b3f0e
--- /dev/null
+++ b/packages/pure_eval/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: pure_eval
+  version: 0.2.2
+  top-level:
+    - pure_eval
+source:
+  url: https://files.pythonhosted.org/packages/2b/27/77f9d5684e6bce929f5cfe18d6cfbe5133013c06cb2fbf5933670e60761d/pure_eval-0.2.2-py3-none-any.whl
+  sha256: 01eaab343580944bc56080ebe0a674b39ec44a945e6d09ba7db3cb8cec289350
+about:
+  home: http://github.com/alexmojaki/pure_eval
+  PyPI: https://pypi.org/project/pure_eval
+  summary: Safely evaluate AST nodes without side effects
+  license: MIT
diff --git a/packages/pyproj/meta.yaml b/packages/pyproj/meta.yaml
index 5a5ee080..aee2c27c 100644
--- a/packages/pyproj/meta.yaml
+++ b/packages/pyproj/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: pyproj
-  version: 3.4.1
+  version: 3.6.1
   top-level:
     - pyproj
 source:
-  url: https://files.pythonhosted.org/packages/c0/fc/fd53e45d2ad5862d32ab8614e70c3c1f52a8e0d8bd243ee6a23b6a481b4a/pyproj-3.4.1.tar.gz
-  sha256: 261eb29b1d55b1eb7f336127344d9b31284d950a9446d1e0d1c2411f7dd8e3ac
+  url: https://files.pythonhosted.org/packages/7d/84/2b39bbf888c753ea48b40d47511548c77aa03445465c35cc4c4e9649b643/pyproj-3.6.1.tar.gz
+  sha256: 44aa7c704c2b7d8fb3d483bbf75af6cb2350d30a63b144279a09b75fead501bf
 
 requirements:
   host:
@@ -16,7 +16,7 @@ requirements:
 
 build:
   script: |
-    export PROJ_VERSION=8.2.1
+    export PROJ_VERSION=9.3.1
     export PROJ_DIR=${WASM_LIBRARY_DIR}
     export PROJ_INCDIR=${WASM_LIBRARY_DIR}/include
     export PROJ_LIBDIR=${WASM_LIBRARY_DIR}/lib
diff --git a/packages/pysz/meta.yaml b/packages/pysz/meta.yaml
new file mode 100644
index 00000000..760029ff
--- /dev/null
+++ b/packages/pysz/meta.yaml
@@ -0,0 +1,27 @@
+package:
+  name: pysz
+  version: 3.1.7
+  top-level:
+    - pysz
+source:
+  url: https://github.com/szcompressor/SZ3/tarball/1e1dc10
+  sha256: 5873e589f2e7236c9ee83bd2ace392bec6f04a4bc1fd93feade0d62018344857
+  extract_dir: szcompressor-SZ3-1e1dc10
+  patches:
+    - patches/0001-pysz-pyproject.patch
+requirements:
+  host:
+    - numpy
+    - libSZ3c
+  run:
+    - numpy
+
+build:
+  vendor-sharedlib: true
+  script: |
+    cp ${WASM_LIBRARY_DIR}/lib/libSZ3c.so tools/pysz
+
+about:
+  home: https://github.com/szcompressor/SZ3
+  summary: "SZ3: A Modular Error-bounded Lossy Compression Framework for Scientific Datasets"
+  license: BSD-3-Clause
diff --git a/packages/pysz/patches/0001-pysz-pyproject.patch b/packages/pysz/patches/0001-pysz-pyproject.patch
new file mode 100644
index 00000000..0c911f47
--- /dev/null
+++ b/packages/pysz/patches/0001-pysz-pyproject.patch
@@ -0,0 +1,104 @@
+diff --git a/pyproject.toml b/pyproject.toml
+new file mode 100644
+index 0000000..2da68a7
+--- /dev/null
++++ b/pyproject.toml
+@@ -0,0 +1,23 @@
++[project]
++name = "pysz"
++version = "3.1.7"
++authors = [
++    { name = "Mathematics and Computer Science (MCS), Argonne National Laboratory" },
++]
++description = "SZ3: A Modular Error-bounded Lossy Compression Framework for Scientific Datasets"
++license = { file = "copyright-and-BSD-license.txt" }
++dependencies = ["numpy"]
++
++[project.urls]
++homepage = "https://github.com/szcompressor/SZ3"
++repository = "https://github.com/szcompressor/SZ3.git"
++
++[build-system]
++requires = ["setuptools>=42", "wheel"]
++build-backend = "setuptools.build_meta"
++
++[tool.setuptools.packages.find]
++where = ["tools"]
++
++[tool.setuptools.package-data]
++pysz = ["libSZ3c.so"]
+diff --git a/tools/pysz/pysz.py b/tools/pysz/__init__.py
+similarity index 95%
+rename from tools/pysz/pysz.py
+rename to tools/pysz/__init__.py
+index fa775de..b3fb09e 100644
+--- a/tools/pysz/pysz.py
++++ b/tools/pysz/__init__.py
+@@ -1,12 +1,20 @@
+-import sys
+ import ctypes
+ from ctypes.util import find_library
++from pathlib import Path
+ import numpy as np
+ 
+ """
+ Python API for SZ2/SZ3
+ """
+ 
++mode_abs = 0
++mode_rel = 1
++mode_abs_and_rel = 2
++mode_abs_or_rel = 3
++mode_psnr = 4
++mode_norm = 5
++mode_pw_rel = 10
++
+ 
+ class SZ:
+     def __init__(self, szpath=None):
+@@ -16,10 +24,7 @@ class SZ:
+         """
+ 
+         if szpath is None:
+-            szpath = {
+-                "darwin": "libSZ3c.dylib",
+-                "windows": "SZ3c.dll",
+-            }.get(sys.platform, "libSZ3c.so")
++            szpath = Path(__file__).parent / "libSZ3c.so"
+ 
+ 
+         self.sz = ctypes.cdll.LoadLibrary(szpath)
+diff --git a/tools/pysz/test.py b/tools/pysz/test.py
+deleted file mode 100644
+index c4691c6..0000000
+--- a/tools/pysz/test.py
++++ /dev/null
+@@ -1,28 +0,0 @@
+-import numpy as np
+-from pathlib import Path
+-from pysz import SZ
+-import sys
+-
+-# prepare your data in numpy array format
+-HOME = str(Path.home())
+-data = np.fromfile(HOME + '/data/hurricane-100x500x500/Uf48.bin.dat', dtype=np.float32)
+-data = np.reshape(data, (100, 500, 500))
+-
+-# init SZ (both SZ2 and SZ3 are supported)
+-# Please change the path to the SZ dynamic library file in your system
+-lib_extention = {
+-    "darwin": "libSZ3c.dylib",
+-    "windows": "SZ3c.dll",
+-}.get(sys.platform, "libSZ3c.so")
+-
+-sz = SZ("../../install/lib/{}".format(lib_extention))
+-
+-# compress, both input and output data are numpy array
+-data_cmpr, cmpr_ratio = sz.compress(data, 0, 1e-3, 0, 0)
+-print("compression ratio = {:5G}".format(cmpr_ratio))
+-
+-# decompress, both input and output data are numpy array
+-data_dec = sz.decompress(data_cmpr, data.shape, data.dtype)
+-
+-# verify
+-sz.verify(data, data_dec)
diff --git a/packages/python-dateutil/meta.yaml b/packages/python-dateutil/meta.yaml
index e4ee8c8d..c6c4409c 100644
--- a/packages/python-dateutil/meta.yaml
+++ b/packages/python-dateutil/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: python-dateutil
-  version: 2.8.2
+  version: 2.9.0.post0
   top-level:
     - dateutil
 source:
-  sha256: 961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9
-  url: https://files.pythonhosted.org/packages/36/7a/87837f39d0296e723bb9b62bbb257d0355c7f6128853c78955f57342a56d/python_dateutil-2.8.2-py2.py3-none-any.whl
+  sha256: a8b2bc7bffae282281c8140a97d3aa9c14da0b136dfe83f850eea9a5f7470427
+  url: https://files.pythonhosted.org/packages/ec/57/56b9bcc3c9c6a792fcbaf139543cee77261f3651ca9da0c93f5c1221264b/python_dateutil-2.9.0.post0-py2.py3-none-any.whl
 requirements:
   run:
     - six
diff --git a/packages/pytz/meta.yaml b/packages/pytz/meta.yaml
index 05936dbe..3ba7a7c7 100644
--- a/packages/pytz/meta.yaml
+++ b/packages/pytz/meta.yaml
@@ -1,14 +1,14 @@
 package:
   name: pytz
-  version: "2023.3"
+  version: "2024.1"
   tag:
     - core
     - min-scipy-stack
   top-level:
     - pytz
 source:
-  sha256: a151b3abb88eda1d4e34a9814df37de2a80e301e68ba0fd856fb9b46bfbbbffb
-  url: https://files.pythonhosted.org/packages/7f/99/ad6bd37e748257dd70d6f85d916cafe79c0b0f5e2e95b11f7fbc82bf3110/pytz-2023.3-py2.py3-none-any.whl
+  sha256: 328171f4e3623139da4983451950b28e95ac706e13f3f2630a879749e7a8b319
+  url: https://files.pythonhosted.org/packages/9c/3d/a121f284241f08268b21359bd425f7d4825cffc5ac5cd0e1b3d82ffd2b10/pytz-2024.1-py2.py3-none-any.whl
 about:
   home: http://pythonhosted.org/pytz
   PyPI: https://pypi.org/project/pytz
diff --git a/packages/scikit-learn/meta.yaml b/packages/scikit-learn/meta.yaml
index cd2ec343..32d2a079 100644
--- a/packages/scikit-learn/meta.yaml
+++ b/packages/scikit-learn/meta.yaml
@@ -1,13 +1,13 @@
 package:
   name: scikit-learn
-  version: 1.3.1
+  version: 1.4.1.post1
   tag:
     - min-scipy-stack
   top-level:
     - sklearn
 source:
-  url: https://files.pythonhosted.org/packages/4b/49/4b3e90399f49e875a1a6a0e72bb99d7e8fe808fcfe0a6a12b43a77e7d64d/scikit-learn-1.3.1.tar.gz
-  sha256: 1a231cced3ee3fa04756b4a7ab532dc9417acd581a330adff5f2c01ac2831fcf
+  url: https://files.pythonhosted.org/packages/da/b4/5d7b9f64d2c3795ac37da3d8bc303be7950e575ec21ac7d0eb9de34fe0d5/scikit-learn-1.4.1.post1.tar.gz
+  sha256: 93d3d496ff1965470f9977d05e5ec3376fb1e63b10e4fda5e39d23c2d8969a30
 
 build:
   cflags: -Wno-implicit-function-declaration
diff --git a/packages/scipy/meta.yaml b/packages/scipy/meta.yaml
index 34cdaca3..1d315add 100644
--- a/packages/scipy/meta.yaml
+++ b/packages/scipy/meta.yaml
@@ -1,6 +1,6 @@
 package:
   name: scipy
-  version: 1.11.2
+  version: 1.12.0
   tag:
     - min-scipy-stack
   top-level:
@@ -17,8 +17,8 @@ package:
 # subroutine. Try deleting it.
 
 source:
-  url: https://files.pythonhosted.org/packages/9c/ef/87a5565907645998d7c62e76b84b0ca9f0b7c25cd433f5617a968051cec3/scipy-1.11.2.tar.gz
-  sha256: b29318a5e39bd200ca4381d80b065cdf3076c7d7281c5e36569e99273867f61d
+  url: https://files.pythonhosted.org/packages/30/85/cdbf2c3c460fe5aae812917866392068a88d02f07de0fe31ce738734c477/scipy-1.12.0.tar.gz
+  sha256: 4bf5abab8a36d20193c698b0f1fc282c1d083c94723902c447e5d2f1780936a3
 
   patches:
     - patches/0001-Fix-dstevr-in-special-lapack_defs.h.patch
@@ -26,10 +26,9 @@ source:
     - patches/0003-fix-fotran-files-minpack.patch
     - patches/0004-gemm_-no-const.patch
     - patches/0005-make-int-return-values.patch
-    - patches/0006-Rename-_page_trend_test.py-to-prevent-test-unvendori.patch
-    - patches/0008-Remove-test-modules-that-fails-to-build.patch
-    - patches/0009-Fix-fitpack.patch
-    - patches/0010-Fix-gees-calls.patch
+    - patches/0007-Remove-test-modules-that-fails-to-build.patch
+    - patches/0008-Fix-fitpack.patch
+    - patches/0009-Fix-gees-calls.patch
 
 build:
   cflags: |
@@ -89,6 +88,10 @@ build:
     # Input error causes "duplicate symbol" linker errors. Empty out the file.
     echo "" > scipy/sparse/linalg/_dsolve/SuperLU/SRC/input_error.c
 
+  _retain-test-patterns:
+    - "*_page_trend_test.py"
+    - "*bws_test.py"
+
   cross-build-env: true
   cross-build-files:
     - scipy/linalg/cython_lapack.pxd
diff --git a/packages/scipy/patches/0001-Fix-dstevr-in-special-lapack_defs.h.patch b/packages/scipy/patches/0001-Fix-dstevr-in-special-lapack_defs.h.patch
index 25e2afd3..23d1cd8b 100644
--- a/packages/scipy/patches/0001-Fix-dstevr-in-special-lapack_defs.h.patch
+++ b/packages/scipy/patches/0001-Fix-dstevr-in-special-lapack_defs.h.patch
@@ -1,7 +1,7 @@
-From 01bca73a051f2ba1a56fb9455a11d6dcecb0b034 Mon Sep 17 00:00:00 2001
+From 09af3413ccdf40337bfd120a457cdd38e597fdea Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Fri, 18 Mar 2022 16:25:39 -0700
-Subject: [PATCH 01/10] Fix dstevr in special/lapack_defs.h
+Subject: [PATCH 1/9] Fix dstevr in special/lapack_defs.h
 
 ---
  scipy/special/lapack_defs.h | 5 ++---
diff --git a/packages/scipy/patches/0002-int-to-string.patch b/packages/scipy/patches/0002-int-to-string.patch
index 65912603..7d5d40bf 100644
--- a/packages/scipy/patches/0002-int-to-string.patch
+++ b/packages/scipy/patches/0002-int-to-string.patch
@@ -1,7 +1,7 @@
-From 4f96e535431ee93d266546f41dd40096b9008a1c Mon Sep 17 00:00:00 2001
+From 05750645c54da620480847a45a71495a2b287e69 Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Sat, 25 Dec 2021 18:04:18 -0800
-Subject: [PATCH 02/10] int to string
+Subject: [PATCH 2/9] int to string
 
 f2c does not handle implicit casts of function arguments correctly. The msg
 argument of `xerrwv` is defined to be an `int *`, and then implicitly cast
diff --git a/packages/scipy/patches/0003-fix-fotran-files-minpack.patch b/packages/scipy/patches/0003-fix-fotran-files-minpack.patch
index a5f2430a..4b488e96 100644
--- a/packages/scipy/patches/0003-fix-fotran-files-minpack.patch
+++ b/packages/scipy/patches/0003-fix-fotran-files-minpack.patch
@@ -1,7 +1,7 @@
-From 950ec77d888ac4a7fb528c6b3cc10ff02c468a71 Mon Sep 17 00:00:00 2001
+From 8c5ef6d95d08948e2511d7975fd5660ff1f991b1 Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Wed, 6 Apr 2022 21:21:53 -0700
-Subject: [PATCH 03/10] fix fotran files minpack
+Subject: [PATCH 3/9] fix fotran files minpack
 
 ---
  scipy/optimize/minpack/chkder.f | 3 +--
diff --git a/packages/scipy/patches/0004-gemm_-no-const.patch b/packages/scipy/patches/0004-gemm_-no-const.patch
index 43a20423..f9ce0ff7 100644
--- a/packages/scipy/patches/0004-gemm_-no-const.patch
+++ b/packages/scipy/patches/0004-gemm_-no-const.patch
@@ -1,7 +1,7 @@
-From 00683380627e3df12f16c2035ba6b4bdc5518c29 Mon Sep 17 00:00:00 2001
+From 9ed70e08329ac2c65ed3fd47fa72c379485ad306 Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Sat, 18 Dec 2021 11:41:15 -0800
-Subject: [PATCH 04/10] gemm_ no const
+Subject: [PATCH 4/9] gemm_ no const
 
 cgemm, dgemm, sgemm, and zgemm are declared with `const` in slu_cdefs.h, but
 other places don't have the cosnt causing compile errors.
@@ -14,27 +14,27 @@ This patch drops the consts and fixes the problem.
  4 files changed, 12 insertions(+), 12 deletions(-)
 
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_cdefs.h b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_cdefs.h
-index 346f9af0a..8af19888f 100644
+index dfc0516ac..92d7d7d6b 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_cdefs.h
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_cdefs.h
-@@ -272,9 +272,9 @@ extern void    ccheck_tempv(int, complex *);
+@@ -262,9 +262,9 @@ extern void    ccheck_tempv(int, singlecomplex *);
  
  /*! \brief BLAS */
  
 -extern int cgemm_(const char*, const char*, const int*, const int*, const int*,
--                  const complex*, const complex*, const int*, const complex*,
--		  const int*, const complex*, complex*, const int*);
+-                  const singlecomplex*, const singlecomplex*, const int*, const singlecomplex*,
+-		  const int*, const singlecomplex*, singlecomplex*, const int*);
 +extern int cgemm_( char*,  char*,  int*,  int*,  int*,
-+                   complex*,  complex*,  int*,  complex*,
-+		   int*,  complex*, complex*,  int*);
- extern int ctrsv_(char*, char*, char*, int*, complex*, int*,
-                   complex*, int*);
++                   singlecomplex*,  singlecomplex*,  int*,  singlecomplex*,
++		   int*,  singlecomplex*, singlecomplex*,  int*);
+ extern int ctrsv_(char*, char*, char*, int*, singlecomplex*, int*,
+                   singlecomplex*, int*);
  extern int ctrsm_(char*, char*, char*, char*, int*, int*,
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_ddefs.h b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_ddefs.h
-index fd971f365..e70699aef 100644
+index 3b5aa509f..1305641bd 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_ddefs.h
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_ddefs.h
-@@ -269,9 +269,9 @@ extern void    dcheck_tempv(int, double *);
+@@ -260,9 +260,9 @@ extern void    dcheck_tempv(int, double *);
  
  /*! \brief BLAS */
  
@@ -48,10 +48,10 @@ index fd971f365..e70699aef 100644
                    double*, int*);
  extern int dtrsm_(char*, char*, char*, char*, int*, int*,
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_sdefs.h b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_sdefs.h
-index 1b6db977e..fee4bc1d6 100644
+index 9bb6a38e7..b013962a4 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_sdefs.h
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_sdefs.h
-@@ -269,9 +269,9 @@ extern void    scheck_tempv(int, float *);
+@@ -259,9 +259,9 @@ extern void    scheck_tempv(int, float *);
  
  /*! \brief BLAS */
  
@@ -65,10 +65,10 @@ index 1b6db977e..fee4bc1d6 100644
                    float*, int*);
  extern int strsm_(char*, char*, char*, char*, int*, int*,
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_zdefs.h b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_zdefs.h
-index abb7d937e..6c572ff2b 100644
+index c6418d584..c5a2692be 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_zdefs.h
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_zdefs.h
-@@ -272,9 +272,9 @@ extern void    zcheck_tempv(int, doublecomplex *);
+@@ -262,9 +262,9 @@ extern void    zcheck_tempv(int, doublecomplex *);
  
  /*! \brief BLAS */
  
diff --git a/packages/scipy/patches/0005-make-int-return-values.patch b/packages/scipy/patches/0005-make-int-return-values.patch
index 950db0ae..b9a3269e 100644
--- a/packages/scipy/patches/0005-make-int-return-values.patch
+++ b/packages/scipy/patches/0005-make-int-return-values.patch
@@ -1,7 +1,7 @@
-From abce2808389410c0b38c0127fab12fa802a1ab91 Mon Sep 17 00:00:00 2001
+From 8853693d7fc00c2e8dbe06aeeea0bd6274805824 Mon Sep 17 00:00:00 2001
 From: Joe Marshall <joe.marshall@nottingham.ac.uk>
 Date: Wed, 6 Apr 2022 21:25:13 -0700
-Subject: [PATCH 05/10] make int return values
+Subject: [PATCH 5/9] make int return values
 
 The return values of f2c functions are insignificant in most cases, so often it
 is treated as returning void, when it really should return int (values are
@@ -25,7 +25,6 @@ to be consistent.
  scipy/integrate/_odepackmodule.c              |  8 +--
  scipy/linalg/fblas_l1.pyf.src                 | 62 ++++++++++++++-----
  scipy/odr/__odrpack.c                         |  2 +-
- scipy/optimize/_lsq/setup.py                  |  2 +-
  .../_dsolve/SuperLU/SRC/ilu_cdrop_row.c       |  8 +--
  .../_dsolve/SuperLU/SRC/ilu_scopy_to_ucol.c   |  2 +-
  .../_dsolve/SuperLU/SRC/scipy_slu_config.h    |  3 +
@@ -35,7 +34,7 @@ to be consistent.
  scipy/sparse/linalg/_dsolve/_superlu_utils.c  |  4 +-
  .../linalg/_eigen/arpack/ARPACK/SRC/debug.h   | 20 +++---
  .../linalg/_eigen/arpack/ARPACK/SRC/stat.h    | 26 ++++----
- 14 files changed, 96 insertions(+), 74 deletions(-)
+ 13 files changed, 95 insertions(+), 73 deletions(-)
 
 diff --git a/scipy/_build_utils/src/wrap_dummy_g77_abi.f b/scipy/_build_utils/src/wrap_dummy_g77_abi.f
 index caf99ac63..73cdebd96 100644
@@ -72,10 +71,10 @@ index caf99ac63..73cdebd96 100644
        COMPLEX            X, Y
        EXTERNAL           CLADIV
 diff --git a/scipy/integrate/_odepackmodule.c b/scipy/integrate/_odepackmodule.c
-index 2b2189f0b..17f3f9348 100644
+index 0c8067e65..d08593985 100644
 --- a/scipy/integrate/_odepackmodule.c
 +++ b/scipy/integrate/_odepackmodule.c
-@@ -154,17 +154,17 @@ static PyObject *odepack_error;
+@@ -156,17 +156,17 @@ static PyObject *odepack_error;
      #endif
  #endif
  
@@ -96,7 +95,7 @@ index 2b2189f0b..17f3f9348 100644
  {
    ydot[0] = -0.04*y[0] + 1e4*y[1]*y[2];
    ydot[2] = 3e7*y[1]*y[1];
-@@ -173,7 +173,7 @@ void ode_function(int *n, double *t, double *y, double *ydot)
+@@ -175,7 +175,7 @@ void ode_function(int *n, double *t, double *y, double *ydot)
  }
  */
  
@@ -250,42 +249,27 @@ index c806e33fb..c4b822eb9 100644
              F_INT *ldnp, double *beta, double *xplusd, F_INT *ifixb, F_INT *ifixx,
              F_INT *ldifx, F_INT *ideval, double *f, double *fjacb, double *fjacd,
              F_INT *istop),
-diff --git a/scipy/optimize/_lsq/setup.py b/scipy/optimize/_lsq/setup.py
-index 7ce589c0c..6412886e0 100644
---- a/scipy/optimize/_lsq/setup.py
-+++ b/scipy/optimize/_lsq/setup.py
-@@ -3,7 +3,7 @@ def configuration(parent_package='', top_path=None):
-     from numpy.distutils.misc_util import Configuration
-     config = Configuration('_lsq', parent_package, top_path)
-     config.add_extension('givens_elimination',
--                         sources=['givens_elimination.c'])
-+                         sources=['givens_elimination.c'],include_dirs=['../../linalg'])
-     return config
- 
- 
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_cdrop_row.c b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_cdrop_row.c
-index 09b8a937d..5b725c825 100644
+index c1dc7fcf8..d1903db4a 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_cdrop_row.c
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_cdrop_row.c
-@@ -23,12 +23,12 @@ at the top-level directory.
+@@ -23,10 +23,10 @@ at the top-level directory.
  #include <stdlib.h>
  #include "slu_cdefs.h"
  
--extern void cswap_(int *, complex [], int *, complex [], int *);
--extern void caxpy_(int *, complex *, complex [], int *, complex [], int *);
--extern void ccopy_(int *, complex [], int *, complex [], int *);
-+extern int cswap_(int *, complex [], int *, complex [], int *);
-+extern int caxpy_(int *, complex *, complex [], int *, complex [], int *);
-+extern int ccopy_(int *, complex [], int *, complex [], int *);
- extern float scasum_(int *, complex *, int *);
- extern float scnrm2_(int *, complex *, int *);
+-extern void cswap_(int *, singlecomplex [], int *, singlecomplex [], int *);
+-extern void caxpy_(int *, singlecomplex *, singlecomplex [], int *, singlecomplex [], int *);
+-extern void ccopy_(int *, singlecomplex [], int *, singlecomplex [], int *);
 -extern void scopy_(int *, float [], int *, float [], int *);
++extern int cswap_(int *, singlecomplex [], int *, singlecomplex [], int *);
++extern int caxpy_(int *, singlecomplex *, singlecomplex [], int *, singlecomplex [], int *);
++extern int ccopy_(int *, singlecomplex [], int *, singlecomplex [], int *);
 +extern int scopy_(int *, float [], int *, float [], int *);
+ extern float scasum_(int *, singlecomplex *, int *);
+ extern float scnrm2_(int *, singlecomplex *, int *);
  extern double dnrm2_(int *, double [], int *);
- extern int icamax_(int *, complex [], int *);
- 
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_scopy_to_ucol.c b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_scopy_to_ucol.c
-index 6dc0460c1..994224c35 100644
+index 4e2654e8a..d5b955d40 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_scopy_to_ucol.c
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/ilu_scopy_to_ucol.c
 @@ -26,7 +26,7 @@ at the top-level directory.
@@ -312,7 +296,7 @@ index 5afc93b5d..7ac5f80fb 100644
   * Support routines
   */
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/sgssvx.c b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/sgssvx.c
-index 7ee2e77ea..d13914e04 100644
+index 1395752d4..7f5538140 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/sgssvx.c
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/sgssvx.c
 @@ -21,6 +21,8 @@ at the top-level directory.
@@ -324,7 +308,7 @@ index 7ee2e77ea..d13914e04 100644
  /*! \brief
   *
   * <pre>
-@@ -378,8 +380,6 @@ sgssvx(superlu_options_t *options, SuperMatrix *A, int *perm_c, int *perm_r,
+@@ -377,8 +379,6 @@ sgssvx(superlu_options_t *options, SuperMatrix *A, int *perm_c, int *perm_r,
      double    t0;      /* temporary time */
      double    *utime;
  
@@ -333,7 +317,7 @@ index 7ee2e77ea..d13914e04 100644
  
      Bstore = B->Store;
      Xstore = X->Store;
-@@ -579,7 +579,8 @@ printf("dgssvx: Fact=%4d, Trans=%4d, equed=%c\n",
+@@ -573,7 +573,8 @@ printf("dgssvx: Fact=%4d, Trans=%4d, equed=%c\n",
          } else {
  	    *(unsigned char *)norm = 'I';
          }
@@ -360,7 +344,7 @@ index 67e83bcc7..e5757d5c4 100644
  
  /* Macro definitions */
 diff --git a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_scomplex.h b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_scomplex.h
-index 5c9aa7058..a10f9a52f 100644
+index 83be8c971..047a07ce9 100644
 --- a/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_scomplex.h
 +++ b/scipy/sparse/linalg/_dsolve/SuperLU/SRC/slu_scomplex.h
 @@ -27,8 +27,9 @@ at the top-level directory.
@@ -368,10 +352,10 @@ index 5c9aa7058..a10f9a52f 100644
  #ifndef SCOMPLEX_INCLUDE
  #define SCOMPLEX_INCLUDE
 -
--typedef struct { float r, i; } complex;
+-typedef struct { float r, i; } singlecomplex;
 +#include"scipy_slu_config.h"
 +// defined in  CLAPACK
-+//typedef struct { float r, i; } complex;
++//typedef struct { float r, i; } singlecomplex;
  
  
  /* Macro definitions */
diff --git a/packages/scipy/patches/0006-Rename-_page_trend_test.py-to-prevent-test-unvendori.patch b/packages/scipy/patches/0006-Rename-_page_trend_test.py-to-prevent-test-unvendori.patch
deleted file mode 100644
index bb3d704e..00000000
--- a/packages/scipy/patches/0006-Rename-_page_trend_test.py-to-prevent-test-unvendori.patch
+++ /dev/null
@@ -1,48 +0,0 @@
-From 1e579281a0aa97f19714f6b12c54bc3dc33d3fa5 Mon Sep 17 00:00:00 2001
-From: Hood Chatham <roberthoodchatham@gmail.com>
-Date: Sun, 26 Dec 2021 07:34:40 -0800
-Subject: [PATCH 06/11] Rename _page_trend_test.py to prevent test unvendoring
-
-unvendor_tests will unvendor any file that ends in _test.py.
-Prevent that by changing the name of this file.
----
- scipy/stats/__init__.py                                   | 2 +-
- scipy/stats/{_page_trend_test.py => _page_trend_test_.py} | 0
- scipy/stats/meson.build                                   | 2 +-
- 3 files changed, 2 insertions(+), 2 deletions(-)
- rename scipy/stats/{_page_trend_test.py => _page_trend_test_.py} (100%)
-
-diff --git a/scipy/stats/__init__.py b/scipy/stats/__init__.py
-index 70a527849..8ce1ae379 100644
---- a/scipy/stats/__init__.py
-+++ b/scipy/stats/__init__.py
-@@ -480,7 +480,7 @@ from ._resampling import bootstrap, monte_carlo_test, permutation_test
- from ._entropy import *
- from ._hypotests import *
- from ._rvs_sampling import rvs_ratio_uniforms
--from ._page_trend_test import page_trend_test
-+from ._page_trend_test_ import page_trend_test
- from ._mannwhitneyu import mannwhitneyu
- from ._fit import fit, goodness_of_fit
- from ._covariance import Covariance
- 
-diff --git a/scipy/stats/_page_trend_test.py b/scipy/stats/_page_trend_test_.py
-similarity index 100%
-rename from scipy/stats/_page_trend_test.py
-rename to scipy/stats/_page_trend_test_.py
-diff --git a/scipy/stats/meson.build b/scipy/stats/meson.build
-index dfac9e073..3c5cc673f 100644
---- a/scipy/stats/meson.build
-+++ b/scipy/stats/meson.build
-@@ -192,7 +192,7 @@ py3.install_sources([
-     '_mstats_basic.py',
-     '_multivariate.py',
-     '_odds_ratio.py',
--    '_page_trend_test.py',
-+    '_page_trend_test_.py',
-     '_qmc.py',
-     '_relative_risk.py',
-     '_resampling.py',
--- 
-2.34.1
-
diff --git a/packages/scipy/patches/0008-Remove-test-modules-that-fails-to-build.patch b/packages/scipy/patches/0007-Remove-test-modules-that-fails-to-build.patch
similarity index 90%
rename from packages/scipy/patches/0008-Remove-test-modules-that-fails-to-build.patch
rename to packages/scipy/patches/0007-Remove-test-modules-that-fails-to-build.patch
index e39dea4b..dc58b339 100644
--- a/packages/scipy/patches/0008-Remove-test-modules-that-fails-to-build.patch
+++ b/packages/scipy/patches/0007-Remove-test-modules-that-fails-to-build.patch
@@ -1,18 +1,17 @@
-From 63c07f9b51dcdc9bd097293171e032dbb265d54c Mon Sep 17 00:00:00 2001
+From e09752b52f2b70b326d45d36fed0f23b5f0fade2 Mon Sep 17 00:00:00 2001
 From: Gyeongjae Choi <def6488@gmail.com>
 Date: Mon, 30 Oct 2023 14:35:04 +0000
-Subject: [PATCH 8/10] Remove test modules that fails to build
+Subject: [PATCH 7/9] Remove test modules that fails to build
 
 These are tests and they have both void vs int return value problems and implicit
 function argument cast problems. Not worth fixing for tests.
-
 ---
  scipy/integrate/meson.build | 18 ------------------
  scipy/io/meson.build        | 19 -------------------
  2 files changed, 37 deletions(-)
 
 diff --git a/scipy/integrate/meson.build b/scipy/integrate/meson.build
-index 0e17ad9b6..0b7133c59 100644
+index 4acc119a5..5895b3fb5 100644
 --- a/scipy/integrate/meson.build
 +++ b/scipy/integrate/meson.build
 @@ -181,24 +181,6 @@ py3.extension_module('_test_multivariate',
@@ -41,7 +40,7 @@ index 0e17ad9b6..0b7133c59 100644
  subdir('tests')
  
 diff --git a/scipy/io/meson.build b/scipy/io/meson.build
-index afe8c391d..226c030ae 100644
+index f1aa1d517..1eeae1f7c 100644
 --- a/scipy/io/meson.build
 +++ b/scipy/io/meson.build
 @@ -1,22 +1,3 @@
@@ -68,5 +67,5 @@ index afe8c391d..226c030ae 100644
  py3.install_sources([
      '__init__.py',
 -- 
-2.42.0
+2.25.1
 
diff --git a/packages/scipy/patches/0009-Fix-fitpack.patch b/packages/scipy/patches/0008-Fix-fitpack.patch
similarity index 97%
rename from packages/scipy/patches/0009-Fix-fitpack.patch
rename to packages/scipy/patches/0008-Fix-fitpack.patch
index 5408b976..86e2c4d0 100644
--- a/packages/scipy/patches/0009-Fix-fitpack.patch
+++ b/packages/scipy/patches/0008-Fix-fitpack.patch
@@ -1,7 +1,7 @@
-From 3dc3d0fc7fa53422586c607a78e5cbf251dbfc62 Mon Sep 17 00:00:00 2001
+From 58f1d3c151b9941e3b5825106d35dc0535b7db15 Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Tue, 30 Aug 2022 11:51:53 -0700
-Subject: [PATCH 09/10] Fix fitpack
+Subject: [PATCH 8/9] Fix fitpack
 
 ---
  scipy/interpolate/fitpack/dblint.f | 9 ++++-----
diff --git a/packages/scipy/patches/0010-Fix-gees-calls.patch b/packages/scipy/patches/0009-Fix-gees-calls.patch
similarity index 95%
rename from packages/scipy/patches/0010-Fix-gees-calls.patch
rename to packages/scipy/patches/0009-Fix-gees-calls.patch
index 9edc6b9a..35f5bcc4 100644
--- a/packages/scipy/patches/0010-Fix-gees-calls.patch
+++ b/packages/scipy/patches/0009-Fix-gees-calls.patch
@@ -1,7 +1,7 @@
-From f8f0f47c05c0a3dbd55c96f50724528c1073e85b Mon Sep 17 00:00:00 2001
+From 9dfbc2757a96d7ac02b75f91b67872d4bd6338c1 Mon Sep 17 00:00:00 2001
 From: Hood Chatham <roberthoodchatham@gmail.com>
 Date: Mon, 26 Jun 2023 20:12:25 -0700
-Subject: [PATCH 10/10] Fix gees calls
+Subject: [PATCH 9/9] Fix gees calls
 
 ---
  scipy/linalg/flapack_gen.pyf.src | 8 ++++----
diff --git a/packages/stack_data/meta.yaml b/packages/stack_data/meta.yaml
new file mode 100644
index 00000000..866d54ec
--- /dev/null
+++ b/packages/stack_data/meta.yaml
@@ -0,0 +1,18 @@
+package:
+  name: stack_data
+  version: 0.6.3
+  top-level:
+    - stack_data
+source:
+  url: https://files.pythonhosted.org/packages/f1/7b/ce1eafaf1a76852e2ec9b22edecf1daa58175c090266e9f6c64afcd81d91/stack_data-0.6.3-py3-none-any.whl
+  sha256: d5558e0c25a4cb0853cddad3d77da9891a08cb85dd9f9f91b9f8cd66e511e695
+requirements:
+  run:
+    - executing
+    - asttokens
+    - pure_eval
+about:
+  home: http://github.com/alexmojaki/stack_data
+  PyPI: https://pypi.org/project/stack_data
+  summary: Extract data from python stack frames and tracebacks for informative displays
+  license: MIT
diff --git a/packages/statsmodels/meta.yaml b/packages/statsmodels/meta.yaml
index 66b2b1c8..291bb3f2 100644
--- a/packages/statsmodels/meta.yaml
+++ b/packages/statsmodels/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: statsmodels
-  version: 0.14.0
+  version: 0.14.1
   top-level:
     - statsmodels
 source:
-  url: https://files.pythonhosted.org/packages/13/a3/a8bf1c9e6d0193f854d9a79cb86a65dac0866de64051ff96e35bc7ecedfe/statsmodels-0.14.0.tar.gz
-  sha256: 6875c7d689e966d948f15eb816ab5616f4928706b180cf470fd5907ab6f647a4
+  url: https://files.pythonhosted.org/packages/4b/80/c4e279a6a13468ae2f1f01af2a07ddb44f397ac4d7636af13c5b3b83dde1/statsmodels-0.14.1.tar.gz
+  sha256: 2260efdc1ef89f39c670a0bd8151b1d0843567781bcafec6cda0534eb47a94f6
 
 build:
   ldflags: |
diff --git a/packages/threadpoolctl/meta.yaml b/packages/threadpoolctl/meta.yaml
index 541d4cfc..4a974a45 100644
--- a/packages/threadpoolctl/meta.yaml
+++ b/packages/threadpoolctl/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: threadpoolctl
-  version: 3.2.0
+  version: 3.3.0
   top-level:
     - threadpoolctl
 source:
-  url: https://files.pythonhosted.org/packages/81/12/fd4dea011af9d69e1cad05c75f3f7202cdcbeac9b712eea58ca779a72865/threadpoolctl-3.2.0-py3-none-any.whl
-  sha256: 2b7818516e423bdaebb97c723f86a7c6b0a83d3f3b0970328d66f4d9104dc032
+  url: https://files.pythonhosted.org/packages/b1/2c/f504e55d98418f2fcf756a56877e6d9a45dd5ed28b3d7c267b300e85ad5b/threadpoolctl-3.3.0-py3-none-any.whl
+  sha256: 6155be1f4a39f31a18ea70f94a77e0ccd57dced08122ea61109e7da89883781e
 about:
   home: https://github.com/joblib/threadpoolctl
   PyPI: https://pypi.org/project/threadpoolctl
diff --git a/packages/toolz/meta.yaml b/packages/toolz/meta.yaml
index 4da388dd..5d86e9ad 100644
--- a/packages/toolz/meta.yaml
+++ b/packages/toolz/meta.yaml
@@ -1,12 +1,12 @@
 package:
   name: toolz
-  version: 0.12.0
+  version: 0.12.1
   top-level:
     - tlz
     - toolz
 source:
-  sha256: 2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f
-  url: https://files.pythonhosted.org/packages/7f/5c/922a3508f5bda2892be3df86c74f9cf1e01217c2b1f8a0ac4841d903e3e9/toolz-0.12.0-py3-none-any.whl
+  sha256: d22731364c07d72eea0a0ad45bafb2c2937ab6fd38a3507bf55eae8744aa7d85
+  url: https://files.pythonhosted.org/packages/b7/8a/d82202c9f89eab30f9fc05380daae87d617e2ad11571ab23d7c13a29bb54/toolz-0.12.1-py3-none-any.whl
 about:
   home: https://github.com/pytoolz/toolz/
   PyPI: https://pypi.org/project/toolz
diff --git a/packages/tqdm/meta.yaml b/packages/tqdm/meta.yaml
index bd9f41b9..9dd1ea7a 100644
--- a/packages/tqdm/meta.yaml
+++ b/packages/tqdm/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: tqdm
-  version: 4.66.1
+  version: 4.66.2
   top-level:
     - tqdm
 source:
-  url: https://files.pythonhosted.org/packages/00/e5/f12a80907d0884e6dff9c16d0c0114d81b8cd07dc3ae54c5e962cc83037e/tqdm-4.66.1-py3-none-any.whl
-  sha256: d302b3c5b53d47bce91fea46679d9c3c6508cf6332229aa1e7d8653723793386
+  url: https://files.pythonhosted.org/packages/2a/14/e75e52d521442e2fcc9f1df3c5e456aead034203d4797867980de558ab34/tqdm-4.66.2-py3-none-any.whl
+  sha256: 1ee4f8a893eb9bef51c6e35730cebf234d5d0b6bd112b0271e10ed7c24a02bd9
 about:
   home: https://tqdm.github.io
   PyPI: https://pypi.org/project/tqdm
diff --git a/packages/traitlets/meta.yaml b/packages/traitlets/meta.yaml
new file mode 100644
index 00000000..8e236abd
--- /dev/null
+++ b/packages/traitlets/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: traitlets
+  version: 5.14.1
+  top-level:
+    - traitlets
+source:
+  url: https://files.pythonhosted.org/packages/45/34/5dc77fdc7bb4bd198317eea5679edf9cc0a186438b5b19dbb9062fb0f4d5/traitlets-5.14.1-py3-none-any.whl
+  sha256: 2e5a030e6eff91737c643231bfcf04a65b0132078dad75e4936700b213652e74
+about:
+  home: https://github.com/ipython/traitlets
+  PyPI: https://pypi.org/project/traitlets
+  summary: Traitlets Python configuration system
+  license: BSD-3-Clause
diff --git a/packages/typing-extensions/meta.yaml b/packages/typing-extensions/meta.yaml
index 0f2d4d7d..bab3ac9c 100644
--- a/packages/typing-extensions/meta.yaml
+++ b/packages/typing-extensions/meta.yaml
@@ -1,8 +1,8 @@
 package:
   name: typing-extensions
-  version: 4.7.1
+  version: 4.10.0
   top-level:
     - typing_extensions
 source:
-  url: https://files.pythonhosted.org/packages/ec/6b/63cc3df74987c36fe26157ee12e09e8f9db4de771e0f3404263117e75b95/typing_extensions-4.7.1-py3-none-any.whl
-  sha256: 440d5dd3af93b060174bf433bccd69b0babc3b15b1a8dca43789fd7f61514b36
+  url: https://files.pythonhosted.org/packages/f9/de/dc04a3ea60b22624b51c703a84bbe0184abcd1d0b9bc8074b5d6b7ab90bb/typing_extensions-4.10.0-py3-none-any.whl
+  sha256: 69b1a937c3a517342112fb4c6df7e72fc39a38e7891a5730ed4985b5214b5475
diff --git a/packages/tzdata/meta.yaml b/packages/tzdata/meta.yaml
new file mode 100644
index 00000000..c19b3160
--- /dev/null
+++ b/packages/tzdata/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: tzdata
+  version: "2024.1"
+  top-level:
+    - tzdata
+source:
+  url: https://files.pythonhosted.org/packages/65/58/f9c9e6be752e9fcb8b6a0ee9fb87e6e7a1f6bcab2cdc73f02bb7ba91ada0/tzdata-2024.1-py2.py3-none-any.whl
+  sha256: 9068bc196136463f5245e51efda838afa15aaeca9903f49050dfa2679db4d252
+about:
+  home: https://github.com/python/tzdata
+  PyPI: https://pypi.org/project/tzdata
+  summary: Provider of IANA time zone data
+  license: Apache-2.0
diff --git a/packages/urllib3/meta.yaml b/packages/urllib3/meta.yaml
index 95074693..9aff20b2 100644
--- a/packages/urllib3/meta.yaml
+++ b/packages/urllib3/meta.yaml
@@ -1,11 +1,11 @@
 package:
   name: urllib3
-  version: 2.1.0
+  version: 2.2.1
   top-level:
     - urllib3
 source:
-  url: https://github.com/urllib3/urllib3/archive/5d7979d3f03451c04c80995b8f35cb45ba37c003.zip
-  sha256: 0f8241f8f4f61a8bb4acae44fe5b20aa37754e953b5621bbb4c5b63d203ba599
+  url: https://files.pythonhosted.org/packages/a2/73/a68704750a7679d0b6d3ad7aa8d4da8e14e151ae82e6fee774e6e0d05ec8/urllib3-2.2.1-py3-none-any.whl
+  sha256: 450b20ec296a467077128bff42b73080516e71b56ff59a60a02bef2232c4fa9d
 test:
   imports:
     - urllib3
diff --git a/packages/wcwidth/meta.yaml b/packages/wcwidth/meta.yaml
new file mode 100644
index 00000000..b071fd9b
--- /dev/null
+++ b/packages/wcwidth/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: wcwidth
+  version: 0.2.13
+  top-level:
+    - wcwidth
+source:
+  url: https://files.pythonhosted.org/packages/fd/84/fd2ba7aafacbad3c4201d395674fc6348826569da3c0937e75505ead3528/wcwidth-0.2.13-py2.py3-none-any.whl
+  sha256: 3da69048e4540d84af32131829ff948f1e022c1c6bdb8d6102117aac784f6859
+about:
+  home: https://github.com/jquast/wcwidth
+  PyPI: https://pypi.org/project/wcwidth
+  summary: Measures the displayed width of unicode strings in a terminal
+  license: MIT
diff --git a/packages/widgetsnbextension/meta.yaml b/packages/widgetsnbextension/meta.yaml
new file mode 100644
index 00000000..3ec19003
--- /dev/null
+++ b/packages/widgetsnbextension/meta.yaml
@@ -0,0 +1,19 @@
+package:
+  name: widgetsnbextension
+  version: 4.0.7
+  top-level:
+    - widgetsnbextension
+source:
+  url: https://github.com/jupyterlite/pyodide-kernel/archive/refs/tags/v0.0.8.tar.gz
+  sha256: 3f64751d61c9f954415c87a72e44e7eb22511a8a0a8448d1011eb46fe5f9a495
+build:
+  script: |
+    cd ..
+    mv widgetsnbextension-4.0.7/packages/pyodide-kernel/py/widgetsnbextension4/widgetsnbextension .
+    rm -rf widgetsnbextension-4.0.7
+    mv widgetsnbextension widgetsnbextension-4.0.7
+about:
+  home: http://jupyter.org
+  PyPI: https://pypi.org/project/widgetsnbextension
+  summary: Jupyter interactive widgets for Jupyter Notebook
+  license: BSD 3-Clause License
diff --git a/packages/xarray-datatree/meta.yaml b/packages/xarray-datatree/meta.yaml
new file mode 100644
index 00000000..60869820
--- /dev/null
+++ b/packages/xarray-datatree/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: xarray-datatree
+  version: 0.0.14
+  top-level:
+    - datatree
+source:
+  url: https://files.pythonhosted.org/packages/6e/a3/5e92dc7e35c08574472bbd9201aabdad03e38d54cc47c421922d219502c6/xarray_datatree-0.0.14-py3-none-any.whl
+  sha256: 07f5d0d9a03a3220d732e1c764ee60f2c5110f884a290b2af371f92952379166
+about:
+  home: ""
+  PyPI: https://pypi.org/project/xarray-datatree
+  summary: Hierarchical tree-like data structures for xarray
+  license: Apache-2
diff --git a/packages/xeofs/meta.yaml b/packages/xeofs/meta.yaml
new file mode 100644
index 00000000..cb36ab01
--- /dev/null
+++ b/packages/xeofs/meta.yaml
@@ -0,0 +1,29 @@
+package:
+  name: xeofs
+  version: 2.3.1
+  top-level:
+    - xeofs
+source:
+  url: https://files.pythonhosted.org/packages/b0/7f/eeaec5d4963bbbefa4a7ab04a8af1f98fe353fd2d930670eca1778c57385/xeofs-2.3.1.tar.gz
+  sha256: 118b1ee332ebb8a60304b41c80fc2ece5023ff4bcec58f14e275e3ca295522c7
+  patches:
+    - patches/0001-xeofs-no-gwpca.patch
+requirements:
+  run:
+    - dask
+    - netcdf4
+    - numpy
+    - pandas
+    - pooch
+    - scikit-learn
+    - statsmodels
+    - tqdm
+    - typing-extensions
+    - xarray
+    - xarray-datatree
+    - zarr
+about:
+  home: https://github.com/nicrie/xeofs
+  PyPI: https://pypi.org/project/xeofs
+  summary: Collection of EOF analysis and related techniques for climate science
+  license: MIT
diff --git a/packages/xeofs/patches/0001-xeofs-no-gwpca.patch b/packages/xeofs/patches/0001-xeofs-no-gwpca.patch
new file mode 100644
index 00000000..01b8ea84
--- /dev/null
+++ b/packages/xeofs/patches/0001-xeofs-no-gwpca.patch
@@ -0,0 +1,13 @@
+diff --git a/xeofs/models/__init__.py b/xeofs/models/__init__.py
+index 49ee8ec..3513b20 100644
+--- a/xeofs/models/__init__.py
++++ b/xeofs/models/__init__.py
+@@ -2,7 +2,7 @@ from .eof import EOF, ComplexEOF
+ from .mca import MCA, ComplexMCA
+ from .eeof import ExtendedEOF
+ from .opa import OPA
+-from .gwpca import GWPCA
++# from .gwpca import GWPCA
+ from .rotator_factory import RotatorFactory
+ from .eof_rotator import EOFRotator, ComplexEOFRotator
+ from .mca_rotator import MCARotator, ComplexMCARotator
diff --git a/packages/xhistogram/meta.yaml b/packages/xhistogram/meta.yaml
new file mode 100644
index 00000000..fc171790
--- /dev/null
+++ b/packages/xhistogram/meta.yaml
@@ -0,0 +1,18 @@
+package:
+  name: xhistogram
+  version: 0.3.2
+  top-level:
+    - xhistogram
+source:
+  url: https://files.pythonhosted.org/packages/18/08/1432dd10193a5d45294bd42042a5631259ee5a12cd2e9075350546d07a03/xhistogram-0.3.2-py3-none-any.whl
+  sha256: ad55330d55296d273b3370678223fde0f50085e04cb744c7b3b0bb7702a2c6bf
+requirements:
+  run:
+    - dask
+    - numpy
+    - xarray
+about:
+  home: https://github.com/xgcm/xhistogram
+  PyPI: https://pypi.org/project/xhistogram
+  summary: Fast, flexible, label-aware histograms for numpy and xarray
+  license: MIT
diff --git a/packages/zarr/meta.yaml b/packages/zarr/meta.yaml
index ee04405e..a3b6c8da 100644
--- a/packages/zarr/meta.yaml
+++ b/packages/zarr/meta.yaml
@@ -1,13 +1,11 @@
 package:
   name: zarr
-  version: 2.13.3
+  version: 2.17.0
   top-level:
     - zarr
 source:
-  sha256: db24b090616c638f65e33a6bc5d956d642221182961515ccbc28b17fb0d0b48c
-  url: https://files.pythonhosted.org/packages/73/6b/789fae6eb756ad97aa8bf352d55050cc91df3e80e0161998cd5adeffddec/zarr-2.13.3.tar.gz
-  patches:
-    - patches/0001-Fix-zarr-sync.patch
+  sha256: 6390a2b8af31babaab4c963efc45bf1da7f9500c9aafac193f84cf019a7c66b0
+  url: https://files.pythonhosted.org/packages/f0/b9/ea61804312f289910b712ab8de5b9811ed9c2bc2f091a41f372644c149f8/zarr-2.17.0.tar.gz
 requirements:
   run:
     - numpy
diff --git a/packages/zarr/patches/0001-Fix-zarr-sync.patch b/packages/zarr/patches/0001-Fix-zarr-sync.patch
deleted file mode 100644
index 2e94aa44..00000000
--- a/packages/zarr/patches/0001-Fix-zarr-sync.patch
+++ /dev/null
@@ -1,61 +0,0 @@
-From 07c5440677066f82794df6e5ce9ad685e191407e Mon Sep 17 00:00:00 2001
-From: Wei Ouyang <oeway007@gmail.com>
-Date: Mon, 12 Dec 2022 18:42:20 -0800
-Subject: [PATCH] Fix zarr sync
-
-This patch removes fasteners and disables zarr.sync which uses process and thread
----
- setup.py         | 1 -
- zarr/__init__.py | 2 +-
- zarr/sync.py     | 3 +--
- 3 files changed, 2 insertions(+), 4 deletions(-)
-
-diff --git a/setup.py b/setup.py
-index 79ff649d..8dee4cd5 100644
---- a/setup.py
-+++ b/setup.py
-@@ -9,7 +9,6 @@ with open('README.md') as f:
- dependencies = [
-     'asciitree',
-     'numpy>=1.7',
--    'fasteners',
-     'numcodecs>=0.10.0',
- ]
- 
-diff --git a/zarr/__init__.py b/zarr/__init__.py
-index 4d2c992d..900c7f92 100644
---- a/zarr/__init__.py
-+++ b/zarr/__init__.py
-@@ -15,7 +15,7 @@ from zarr.storage import (ABSStore, DBMStore, DictStore, DirectoryStore,
-                           KVStore, LMDBStore, LRUStoreCache, MemoryStore, MongoDBStore,
-                           NestedDirectoryStore, RedisStore, SQLiteStore,
-                           TempStore, ZipStore)
--from zarr.sync import ProcessSynchronizer, ThreadSynchronizer
-+# from zarr.sync import ProcessSynchronizer, ThreadSynchronizer
- from zarr.version import version as __version__
- 
- # in case setuptools scm screw up and find version to be 0.0.0
-diff --git a/zarr/sync.py b/zarr/sync.py
-index 49684a51..0ce4baa7 100644
---- a/zarr/sync.py
-+++ b/zarr/sync.py
-@@ -2,8 +2,6 @@ import os
- from collections import defaultdict
- from threading import Lock
- 
--import fasteners
--
- 
- class ThreadSynchronizer:
-     """Provides synchronization using thread locks."""
-@@ -41,6 +39,7 @@ class ProcessSynchronizer:
-         self.path = path
- 
-     def __getitem__(self, item):
-+        import fasteners
-         path = os.path.join(self.path, item)
-         lock = fasteners.InterProcessLock(path)
-         return lock
--- 
-2.25.1
-
diff --git a/packages/zfpy/meta.yaml b/packages/zfpy/meta.yaml
new file mode 100644
index 00000000..9d376bdf
--- /dev/null
+++ b/packages/zfpy/meta.yaml
@@ -0,0 +1,37 @@
+package:
+  name: zfpy
+  version: 1.0.0
+  top-level:
+    - zfpy
+source:
+  url: https://github.com/LLNL/zfp/archive/refs/tags/1.0.0.tar.gz
+  sha256: fe13b03141ee9b571692aed42ff76cf37c9dcda40f9a43a808870dca3558a57c
+  patches:
+    - patches/0001-setup-with-cython.patch
+requirements:
+  host:
+    - numpy
+  run:
+    - numpy
+
+build:
+  vendor-sharedlib: true
+  script: |
+    mkdir -p build
+
+    cd build && \
+      emcmake cmake ../ \
+        -DCMAKE_INSTALL_PREFIX=$WASM_LIBRARY_DIR \
+        -DCMAKE_BUILD_TYPE=Release \
+        -DBUILD_TESTING=OFF \
+        -DZFP_WITH_OPENMP=OFF \
+        -DBUILD_UTILITIES=OFF;
+    
+    emmake make -j ${PYODIDE_JOBS:-3};
+    emmake make install;
+
+about:
+  home: https://zfp.llnl.gov/
+  PyPI: https://pypi.org/project/zfpy/
+  summary: Compressed numerical arrays that support high-speed random access
+  license: BSD-3-Clause
diff --git a/packages/zfpy/patches/0001-setup-with-cython.patch b/packages/zfpy/patches/0001-setup-with-cython.patch
new file mode 100644
index 00000000..bb4c5346
--- /dev/null
+++ b/packages/zfpy/patches/0001-setup-with-cython.patch
@@ -0,0 +1,24 @@
+diff --git a/setup.py b/setup.py
+index 9e4c391..7f53777 100644
+--- a/setup.py
++++ b/setup.py
+@@ -1,3 +1,4 @@
++import os
+ from setuptools import setup, Extension
+ import numpy as np
+ 
+@@ -9,7 +10,11 @@ setup(
+     url="https://zfp.llnl.gov",
+     description="zfp compression in Python",
+     long_description="zfp is a compressed format for representing multidimensional floating-point and integer arrays. zfp provides compressed-array classes that support high throughput read and write random access to individual array elements. zfp also supports serial and parallel compression of whole arrays using both lossless and lossy compression with error tolerances. zfp is primarily written in C and C++ but also includes Python and Fortran bindings.",
+-    ext_modules=[Extension("zfpy", ["build/python/zfpy.c"],
+-                           include_dirs=["include", np.get_include()],
+-                           libraries=["zfp"], library_dirs=["build/lib64", "build/lib/Release"])]
++    ext_modules=[Extension(
++        "zfpy", ["python/zfpy.pyx"],
++        include_dirs=["include", np.get_include()],
++        libraries=["zfp"],
++        library_dirs=[os.environ["WASM_LIBRARY_DIR"] + "/lib"],
++    )],
++    setup_requires=["cython>=0.17", "numpy"],
+ )
diff --git a/packages/zipp/meta.yaml b/packages/zipp/meta.yaml
new file mode 100644
index 00000000..b43db657
--- /dev/null
+++ b/packages/zipp/meta.yaml
@@ -0,0 +1,13 @@
+package:
+  name: zipp
+  version: 3.17.0
+  top-level:
+    - zipp
+source:
+  url: https://files.pythonhosted.org/packages/d9/66/48866fc6b158c81cc2bfecc04c480f105c6040e8b077bc54c634b4a67926/zipp-3.17.0-py3-none-any.whl
+  sha256: 0e923e726174922dce09c53c59ad483ff7bbb8e572e00c7f7c46b88556409f31
+about:
+  home: https://github.com/jaraco/zipp
+  PyPI: https://pypi.org/project/zipp
+  summary: Backport of pathlib-compatible object wrapper for zip files
+  license: "MIT"
diff --git a/pyodide-build/pyodide_build/buildpkg.py b/pyodide-build/pyodide_build/buildpkg.py
index 6eb4d1b6..5b55acc5 100755
--- a/pyodide-build/pyodide_build/buildpkg.py
+++ b/pyodide-build/pyodide_build/buildpkg.py
@@ -538,17 +538,20 @@ def package_wheel(
 
         try:
             test_dir = distdir / "tests"
-            nmoved = 0
             if build_metadata.unvendor_tests:
-                nmoved = unvendor_tests(wheel_dir, test_dir)
-            if nmoved:
-                with chdir(distdir):
-                    shutil.make_archive(f"{pkg_name}-tests", "tar", test_dir)
+                nmoved = unvendor_tests(
+                    wheel_dir, test_dir, build_metadata.retain_test_patterns
+                )
+                if nmoved:
+                    with chdir(distdir):
+                        shutil.make_archive(f"{pkg_name}-tests", "tar", test_dir)
         finally:
             shutil.rmtree(test_dir, ignore_errors=True)
 
 
-def unvendor_tests(install_prefix: Path, test_install_prefix: Path) -> int:
+def unvendor_tests(
+    install_prefix: Path, test_install_prefix: Path, retain_test_patterns: list[str]
+) -> int:
     """Unvendor test files and folders
 
     This function recursively walks through install_prefix and moves anything
@@ -588,6 +591,8 @@ def unvendor_tests(install_prefix: Path, test_install_prefix: Path) -> int:
                 or fnmatch.fnmatchcase(fpath, "*_test.py")
                 or fpath == "conftest.py"
             ):
+                if any(fnmatch.fnmatchcase(fpath, pat) for pat in retain_test_patterns):
+                    continue
                 (test_install_prefix / root_rel).mkdir(exist_ok=True, parents=True)
                 shutil.move(
                     install_prefix / root_rel / fpath,
diff --git a/pyodide-build/pyodide_build/io.py b/pyodide-build/pyodide_build/io.py
index 7d6f329c..59d7329a 100644
--- a/pyodide-build/pyodide_build/io.py
+++ b/pyodide-build/pyodide_build/io.py
@@ -93,6 +93,7 @@ class _BuildSpec(BaseModel):
     script: str | None = None
     post: str | None = None
     unvendor_tests: bool = Field(True, alias="unvendor-tests")
+    retain_test_patterns: list[str] = Field([], alias="_retain-test-patterns")
     vendor_sharedlib: bool = Field(False, alias="vendor-sharedlib")
     cross_build_env: bool = Field(False, alias="cross-build-env")
     cross_build_files: list[str] = Field([], alias="cross-build-files")
diff --git a/pyodide-build/pyodide_build/pypabuild.py b/pyodide-build/pyodide_build/pypabuild.py
index 9d0107a8..6961b14e 100644
--- a/pyodide-build/pyodide_build/pypabuild.py
+++ b/pyodide-build/pyodide_build/pypabuild.py
@@ -40,6 +40,19 @@ AVOIDED_REQUIREMENTS = [
     "patchelf",
 ]
 
+# corresponding env variables for symlinks
+SYMLINK_ENV_VARS = {
+    "cc": "CC",
+    "c++": "CXX",
+    "ld": "LD",
+    "lld": "LLD",
+    "ar": "AR",
+    "gcc": "GCC",
+    "ranlib": "RANLIB",
+    "strip": "STRIP",
+    "gfortran": "FC",  # https://mesonbuild.com/Reference-tables.html#compiler-and-linker-selection-variables
+}
+
 
 def _gen_runner(
     cross_build_env: Mapping[str, str],
@@ -207,13 +220,8 @@ def make_command_wrapper_symlinks(symlink_dir: Path) -> dict[str, str]:
             symlink_path.unlink()
 
         symlink_path.symlink_to(pywasmcross_exe)
-        if symlink == "c++":
-            var = "CXX"
-        elif symlink == "gfortran":
-            var = "FC"  # https://mesonbuild.com/Reference-tables.html#compiler-and-linker-selection-variables
-        else:
-            var = symlink.upper()
-        env[var] = str(symlink_path)
+        if symlink in SYMLINK_ENV_VARS:
+            env[SYMLINK_ENV_VARS[symlink]] = str(symlink_path)
 
     return env
 
diff --git a/pyodide-build/pyodide_build/pywasmcross.py b/pyodide-build/pyodide_build/pywasmcross.py
index c27a9aa4..f02bf6fe 100755
--- a/pyodide-build/pyodide_build/pywasmcross.py
+++ b/pyodide-build/pyodide_build/pywasmcross.py
@@ -24,6 +24,7 @@ SYMLINKS = {
     "lld",
     "ar",
     "gcc",
+    "g++",
     "ranlib",
     "strip",
     "gfortran",
diff --git a/pyodide-build/pyodide_build/tests/test_buildpkg.py b/pyodide-build/pyodide_build/tests/test_buildpkg.py
index 4e437af7..20b3cb0c 100644
--- a/pyodide-build/pyodide_build/tests/test_buildpkg.py
+++ b/pyodide-build/pyodide_build/tests/test_buildpkg.py
@@ -138,7 +138,7 @@ def test_unvendor_tests(tmpdir):
     touch(install_prefix / "ex1" / "tests" / "data.csv")
     touch(install_prefix / "ex1" / "tests" / "test_a.py")
 
-    n_moved = buildpkg.unvendor_tests(install_prefix, test_install_prefix)
+    n_moved = buildpkg.unvendor_tests(install_prefix, test_install_prefix, [])
 
     assert rlist(install_prefix) == ["ex1/base.py"]
     assert rlist(test_install_prefix) == [
diff --git a/tools/constraints.txt b/tools/constraints.txt
index 039eb0db..e69de29b 100644
--- a/tools/constraints.txt
+++ b/tools/constraints.txt
@@ -1 +0,0 @@
-cython<3
